{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { each, filter, isMatch } from '@antv/util';\nimport { slider, interaction, animation, theme, scale, annotation, scrollbar, limitInPlot, state } from '../../adaptor/common';\nimport { conversionTag } from '../../adaptor/conversion-tag';\nimport { connectedArea } from '../../adaptor/connected-area';\nimport { interval } from '../../adaptor/geometries';\nimport { pattern } from '../../adaptor/pattern';\nimport { brushInteraction } from '../../adaptor/brush';\nimport { flow, transformLabel, deepAssign, findGeometry, adjustYMetaByZero, pick } from '../../utils';\nimport { getDataWhetherPecentage, getDeepPercent } from '../../utils/transform/percent';\n/**\n * defaultOptions\n * @param params\n */\n\nfunction defaultOptions(params) {\n  var options = params.options; // 默认 legend 位置\n\n  var legend = options.legend;\n  var seriesField = options.seriesField,\n      isStack = options.isStack;\n\n  if (seriesField) {\n    if (legend !== false) {\n      legend = __assign({\n        position: isStack ? 'right-top' : 'top-left'\n      }, legend);\n    }\n  } else {\n    legend = false;\n  } // @ts-ignore 直接改值\n\n\n  params.options.legend = legend;\n  return params;\n}\n/**\n * 字段\n * @param params\n */\n\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var data = options.data,\n      columnStyle = options.columnStyle,\n      color = options.color,\n      columnWidthRatio = options.columnWidthRatio,\n      isPercent = options.isPercent,\n      isGroup = options.isGroup,\n      isStack = options.isStack,\n      xField = options.xField,\n      yField = options.yField,\n      seriesField = options.seriesField,\n      groupField = options.groupField,\n      tooltip = options.tooltip,\n      shape = options.shape;\n  var percentData = isPercent && isGroup && isStack ? getDeepPercent(data, yField, [xField, groupField], yField) : getDataWhetherPecentage(data, yField, xField, yField, isPercent);\n  var chartData = []; // 存在堆叠,并且存在堆叠seriesField分类，并且不存在分组的时候 进行堆叠\n\n  if (isStack && seriesField && !isGroup) {\n    percentData.forEach(function (item) {\n      var stackedItem = chartData.find(function (v) {\n        return v[xField] === item[xField] && v[seriesField] === item[seriesField];\n      });\n\n      if (stackedItem) {\n        stackedItem[yField] += item[yField] || 0;\n      } else {\n        chartData.push(__assign({}, item));\n      }\n    });\n  } else {\n    chartData = percentData;\n  }\n\n  chart.data(chartData); // 百分比堆积图，默认会给一个 % 格式化逻辑, 用户可自定义\n\n  var tooltipOptions = isPercent ? __assign({\n    formatter: function (datum) {\n      return {\n        name: isGroup && isStack ? datum[seriesField] + \" - \" + datum[groupField] : datum[seriesField] || datum[xField],\n        value: (Number(datum[yField]) * 100).toFixed(2) + '%'\n      };\n    }\n  }, tooltip) : tooltip;\n  var p = deepAssign({}, params, {\n    options: {\n      data: chartData,\n      widthRatio: columnWidthRatio,\n      tooltip: tooltipOptions,\n      interval: {\n        shape: shape,\n        style: columnStyle,\n        color: color\n      }\n    }\n  });\n  interval(p);\n  return p;\n}\n/**\n * meta 配置\n * @param params\n */\n\n\nexport function meta(params) {\n  var _a, _b;\n\n  var options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField,\n      data = options.data,\n      isPercent = options.isPercent;\n  var percentYMeta = isPercent ? {\n    max: 1,\n    min: 0,\n    minLimit: 0,\n    maxLimit: 1\n  } : {};\n  return flow(scale((_a = {}, _a[xField] = xAxis, _a[yField] = yAxis, _a), (_b = {}, _b[xField] = {\n    type: 'cat'\n  }, _b[yField] = __assign(__assign({}, adjustYMetaByZero(data, yField)), percentYMeta), _b)))(params);\n}\n/**\n * axis 配置\n * @param params\n */\n\nfunction axis(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField; // 为 false 则是不显示轴\n\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(yField, false);\n  } else {\n    chart.axis(yField, yAxis);\n  }\n\n  return params;\n}\n/**\n * legend 配置\n * @param params\n */\n\n\nexport function legend(params) {\n  var chart = params.chart,\n      options = params.options;\n  var legend = options.legend,\n      seriesField = options.seriesField;\n\n  if (legend && seriesField) {\n    chart.legend(seriesField, legend);\n  } else if (legend === false) {\n    chart.legend(false);\n  }\n\n  return params;\n}\n/**\n * 数据标签\n * @param params\n */\n\nfunction label(params) {\n  var chart = params.chart,\n      options = params.options;\n  var label = options.label,\n      yField = options.yField,\n      isRange = options.isRange;\n  var geometry = findGeometry(chart, 'interval');\n\n  if (!label) {\n    geometry.label(false);\n  } else {\n    var callback = label.callback,\n        cfg = __rest(label, [\"callback\"]);\n\n    geometry.label({\n      fields: [yField],\n      callback: callback,\n      cfg: __assign({\n        // 配置默认的 label layout： 如果用户没有指定 layout 和 position， 则自动配置 layout\n        layout: (cfg === null || cfg === void 0 ? void 0 : cfg.position) ? undefined : [{\n          type: 'interval-adjust-position'\n        }, {\n          type: 'interval-hide-overlap'\n        }, {\n          type: 'adjust-color'\n        }, {\n          type: 'limit-in-plot',\n          cfg: {\n            action: 'hide'\n          }\n        }]\n      }, transformLabel(isRange ? __assign({\n        content: function (item) {\n          var _a;\n\n          return (_a = item[yField]) === null || _a === void 0 ? void 0 : _a.join('-');\n        }\n      }, cfg) : cfg))\n    });\n  }\n\n  return params;\n}\n/**\n * 柱形图 tooltip 配置 (对堆叠、分组做特殊处理)\n * @param params\n */\n\n\nfunction columnTooltip(params) {\n  var chart = params.chart,\n      options = params.options;\n  var tooltip = options.tooltip,\n      isGroup = options.isGroup,\n      isStack = options.isStack,\n      groupField = options.groupField,\n      data = options.data,\n      xField = options.xField,\n      yField = options.yField,\n      seriesField = options.seriesField;\n\n  if (tooltip === false) {\n    chart.tooltip(false);\n  } else {\n    var tooltipOptions = tooltip; // fix: https://github.com/antvis/G2Plot/issues/2572\n\n    if (isGroup && isStack) {\n      var tooltipFormatter_1 = (tooltipOptions === null || tooltipOptions === void 0 ? void 0 : tooltipOptions.formatter) || function (datum) {\n        return {\n          name: datum[seriesField] + \" - \" + datum[groupField],\n          value: datum[yField]\n        };\n      };\n\n      tooltipOptions = __assign(__assign({}, tooltipOptions), {\n        customItems: function (originalItems) {\n          var items = [];\n          each(originalItems, function (item) {\n            // Find datas in same cluster\n            var datas = filter(data, function (d) {\n              return isMatch(d, pick(item.data, [xField, seriesField]));\n            });\n            datas.forEach(function (datum) {\n              items.push(__assign(__assign(__assign({}, item), {\n                value: datum[yField],\n                data: datum,\n                mappingData: {\n                  _origin: datum\n                }\n              }), tooltipFormatter_1(datum)));\n            });\n          });\n          return items;\n        }\n      });\n    }\n\n    chart.tooltip(tooltipOptions);\n  }\n\n  return params;\n}\n/**\n * 柱形图适配器\n * @param params\n */\n\n\nexport function adaptor(params, isBar) {\n  if (isBar === void 0) {\n    isBar = false;\n  }\n\n  var options = params.options;\n  var seriesField = options.seriesField;\n  return flow(defaultOptions, // 处理默认配置\n  theme, // theme 需要在 geometry 之前\n  pattern('columnStyle'), state, geometry, meta, axis, legend, columnTooltip, slider, scrollbar, label, brushInteraction, interaction, animation, annotation(), conversionTag(options.yField, !isBar, !!seriesField), // 有拆分的时候禁用转化率\n  connectedArea(!options.isStack), limitInPlot)(params);\n}","map":{"version":3,"sources":["../../../src/plots/column/adaptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { Types } from '@antv/g2';\nimport { each, filter, isMatch } from '@antv/util';\nimport { Params } from '../../core/adaptor';\nimport {\n  slider,\n  interaction,\n  animation,\n  theme,\n  scale,\n  annotation,\n  scrollbar,\n  limitInPlot,\n  state,\n} from '../../adaptor/common';\nimport { conversionTag } from '../../adaptor/conversion-tag';\nimport { connectedArea } from '../../adaptor/connected-area';\nimport { interval } from '../../adaptor/geometries';\nimport { pattern } from '../../adaptor/pattern';\nimport { brushInteraction } from '../../adaptor/brush';\nimport { flow, transformLabel, deepAssign, findGeometry, adjustYMetaByZero, pick } from '../../utils';\nimport { getDataWhetherPecentage, getDeepPercent } from '../../utils/transform/percent';\nimport { Datum } from '../../types';\nimport { ColumnOptions } from './types';\n\n/**\n * defaultOptions\n * @param params\n */\nfunction defaultOptions(params: Params<ColumnOptions>): Params<ColumnOptions> {\n  const { options } = params;\n  // 默认 legend 位置\n  let { legend } = options;\n  const { seriesField, isStack } = options;\n\n  if (seriesField) {\n    if (legend !== false) {\n      legend = {\n        position: isStack ? 'right-top' : 'top-left',\n        ...legend,\n      };\n    }\n  } else {\n    legend = false;\n  }\n\n  // @ts-ignore 直接改值\n  params.options.legend = legend;\n  return params;\n}\n\n/**\n * 字段\n * @param params\n */\nfunction geometry(params: Params<ColumnOptions>): Params<ColumnOptions> {\n  const { chart, options } = params;\n  const {\n    data,\n    columnStyle,\n    color,\n    columnWidthRatio,\n    isPercent,\n    isGroup,\n    isStack,\n    xField,\n    yField,\n    seriesField,\n    groupField,\n    tooltip,\n    shape,\n  } = options;\n\n  const percentData =\n    isPercent && isGroup && isStack\n      ? getDeepPercent(data, yField, [xField, groupField], yField)\n      : getDataWhetherPecentage(data, yField, xField, yField, isPercent);\n\n  let chartData = [];\n\n  // 存在堆叠,并且存在堆叠seriesField分类，并且不存在分组的时候 进行堆叠\n  if (isStack && seriesField && !isGroup) {\n    percentData.forEach((item) => {\n      const stackedItem = chartData.find((v) => v[xField] === item[xField] && v[seriesField] === item[seriesField]);\n      if (stackedItem) {\n        stackedItem[yField] += item[yField] || 0;\n      } else {\n        chartData.push({ ...item });\n      }\n    });\n  } else {\n    chartData = percentData;\n  }\n\n  chart.data(chartData);\n\n  // 百分比堆积图，默认会给一个 % 格式化逻辑, 用户可自定义\n  const tooltipOptions = isPercent\n    ? {\n        formatter: (datum: Datum) => ({\n          name:\n            isGroup && isStack ? `${datum[seriesField]} - ${datum[groupField]}` : datum[seriesField] || datum[xField],\n          value: (Number(datum[yField]) * 100).toFixed(2) + '%',\n        }),\n        ...tooltip,\n      }\n    : tooltip;\n\n  const p = deepAssign({}, params, {\n    options: {\n      data: chartData,\n      widthRatio: columnWidthRatio,\n      tooltip: tooltipOptions,\n      interval: {\n        shape,\n        style: columnStyle,\n        color,\n      },\n    },\n  });\n  interval(p);\n\n  return p;\n}\n\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params: Params<ColumnOptions>): Params<ColumnOptions> {\n  const { options } = params;\n  const { xAxis, yAxis, xField, yField, data, isPercent } = options;\n\n  const percentYMeta = isPercent ? { max: 1, min: 0, minLimit: 0, maxLimit: 1 } : {};\n\n  return flow(\n    scale(\n      {\n        [xField]: xAxis,\n        [yField]: yAxis,\n      },\n      {\n        [xField]: {\n          type: 'cat',\n        },\n        [yField]: {\n          ...adjustYMetaByZero(data, yField),\n          ...percentYMeta,\n        },\n      }\n    )\n  )(params);\n}\n\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params: Params<ColumnOptions>): Params<ColumnOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  // 为 false 则是不显示轴\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(yField, false);\n  } else {\n    chart.axis(yField, yAxis);\n  }\n\n  return params;\n}\n\n/**\n * legend 配置\n * @param params\n */\nexport function legend(params: Params<ColumnOptions>): Params<ColumnOptions> {\n  const { chart, options } = params;\n  const { legend, seriesField } = options;\n\n  if (legend && seriesField) {\n    chart.legend(seriesField, legend);\n  } else if (legend === false) {\n    chart.legend(false);\n  }\n\n  return params;\n}\n\n/**\n * 数据标签\n * @param params\n */\nfunction label(params: Params<ColumnOptions>): Params<ColumnOptions> {\n  const { chart, options } = params;\n  const { label, yField, isRange } = options;\n\n  const geometry = findGeometry(chart, 'interval');\n\n  if (!label) {\n    geometry.label(false);\n  } else {\n    const { callback, ...cfg } = label;\n    geometry.label({\n      fields: [yField],\n      callback,\n      cfg: {\n        // 配置默认的 label layout： 如果用户没有指定 layout 和 position， 则自动配置 layout\n        layout: cfg?.position\n          ? undefined\n          : [\n              { type: 'interval-adjust-position' },\n              { type: 'interval-hide-overlap' },\n              { type: 'adjust-color' },\n              { type: 'limit-in-plot', cfg: { action: 'hide' } },\n            ],\n        ...transformLabel(\n          isRange\n            ? {\n                content: (item: object) => {\n                  return item[yField]?.join('-');\n                },\n                ...cfg,\n              }\n            : cfg\n        ),\n      },\n    });\n  }\n\n  return params;\n}\n\n/**\n * 柱形图 tooltip 配置 (对堆叠、分组做特殊处理)\n * @param params\n */\nfunction columnTooltip(params: Params<ColumnOptions>): Params<ColumnOptions> {\n  const { chart, options } = params;\n  const { tooltip, isGroup, isStack, groupField, data, xField, yField, seriesField } = options;\n\n  if (tooltip === false) {\n    chart.tooltip(false);\n  } else {\n    let tooltipOptions = tooltip;\n    // fix: https://github.com/antvis/G2Plot/issues/2572\n    if (isGroup && isStack) {\n      const tooltipFormatter =\n        tooltipOptions?.formatter ||\n        ((datum: Datum) => ({ name: `${datum[seriesField]} - ${datum[groupField]}`, value: datum[yField] }));\n      tooltipOptions = {\n        ...tooltipOptions,\n        customItems: (originalItems: Types.TooltipItem[]) => {\n          const items: Types.TooltipItem[] = [];\n          each(originalItems, (item: Types.TooltipItem) => {\n            // Find datas in same cluster\n            const datas = filter(data, (d) => isMatch(d, pick(item.data, [xField, seriesField])));\n            datas.forEach((datum) => {\n              items.push({\n                ...item,\n                value: datum[yField],\n                data: datum,\n                mappingData: { _origin: datum },\n                ...tooltipFormatter(datum),\n              });\n            });\n          });\n          return items;\n        },\n      };\n    }\n    chart.tooltip(tooltipOptions);\n  }\n\n  return params;\n}\n\n/**\n * 柱形图适配器\n * @param params\n */\nexport function adaptor(params: Params<ColumnOptions>, isBar = false) {\n  const { options } = params;\n  const { seriesField } = options;\n  return flow(\n    defaultOptions, // 处理默认配置\n    theme, // theme 需要在 geometry 之前\n    pattern('columnStyle'),\n    state,\n    geometry,\n    meta,\n    axis,\n    legend,\n    columnTooltip,\n    slider,\n    scrollbar,\n    label,\n    brushInteraction,\n    interaction,\n    animation,\n    annotation(),\n    conversionTag<ColumnOptions>(options.yField, !isBar, !!seriesField), // 有拆分的时候禁用转化率\n    connectedArea<ColumnOptions>(!options.isStack),\n    limitInPlot\n  )(params);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}