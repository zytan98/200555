{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { adaptor, meta } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constants';\nimport './interactions';\n\nvar Line =\n/** @class */\nfunction (_super) {\n  __extends(Line, _super);\n\n  function Line() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n\n\n    _this.type = 'line';\n    return _this;\n  }\n  /**\n   * 获取 折线图 默认配置项\n   * 供外部使用\n   */\n\n\n  Line.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  /**\n   * @override\n   * @param data\n   */\n\n\n  Line.prototype.changeData = function (data) {\n    this.updateOption({\n      data: data\n    });\n\n    var _a = this,\n        chart = _a.chart,\n        options = _a.options;\n\n    meta({\n      chart: chart,\n      options: options\n    });\n    this.chart.changeData(data);\n  };\n  /**\n   * 获取 折线图 默认配置\n   */\n\n\n  Line.prototype.getDefaultOptions = function () {\n    return Line.getDefaultOptions();\n  };\n  /**\n   * 获取 折线图 的适配器\n   */\n\n\n  Line.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n\n  return Line;\n}(Plot);\n\nexport { Line };","map":{"version":3,"sources":["../../../src/plots/line/index.ts"],"names":[],"mappings":";AAAA,SAAS,IAAT,QAAqB,iBAArB;AAGA,SAAS,OAAT,EAAkB,IAAlB,QAA8B,WAA9B;AACA,SAAS,eAAT,QAAgC,aAAhC;AACA,OAAO,gBAAP;;AAIA,IAAA,IAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA0B,EAAA,SAAA,CAAA,IAAA,EAAA,MAAA,CAAA;;AAA1B,WAAA,IAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AASE;;;AACO,IAAA,KAAA,CAAA,IAAA,GAAe,MAAf;;AA0BR;AAnCC;;;AAGG;;;AACI,EAAA,IAAA,CAAA,iBAAA,GAAP,YAAA;AACE,WAAO,eAAP;AACD,GAFM;AAOP;;;AAGG;;;AACI,EAAA,IAAA,CAAA,SAAA,CAAA,UAAA,GAAP,UAAkB,IAAlB,EAA2C;AACzC,SAAK,YAAL,CAAkB;AAAE,MAAA,IAAI,EAAA;AAAN,KAAlB;;AACM,QAAA,EAAA,GAAqB,IAArB;AAAA,QAAE,KAAK,GAAA,EAAA,CAAA,KAAP;AAAA,QAAS,OAAO,GAAA,EAAA,CAAA,OAAhB;;AACN,IAAA,IAAI,CAAC;AAAE,MAAA,KAAK,EAAA,KAAP;AAAS,MAAA,OAAO,EAAA;AAAhB,KAAD,CAAJ;AACA,SAAK,KAAL,CAAW,UAAX,CAAsB,IAAtB;AACD,GALM;AAOP;;AAEG;;;AACO,EAAA,IAAA,CAAA,SAAA,CAAA,iBAAA,GAAV,YAAA;AACE,WAAO,IAAI,CAAC,iBAAL,EAAP;AACD,GAFS;AAIV;;AAEG;;;AACO,EAAA,IAAA,CAAA,SAAA,CAAA,gBAAA,GAAV,YAAA;AACE,WAAO,OAAP;AACD,GAFS;;AAGZ,SAAA,IAAA;AAAC,CApCD,CAA0B,IAA1B,CAAA","sourcesContent":["import { Plot } from '../../core/plot';\nimport { Adaptor } from '../../core/adaptor';\nimport { LineOptions } from './types';\nimport { adaptor, meta } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constants';\nimport './interactions';\n\nexport type { LineOptions };\n\nexport class Line extends Plot<LineOptions> {\n  /**\n   * 获取 折线图 默认配置项\n   * 供外部使用\n   */\n  static getDefaultOptions(): Partial<LineOptions> {\n    return DEFAULT_OPTIONS;\n  }\n\n  /** 图表类型 */\n  public type: string = 'line';\n\n  /**\n   * @override\n   * @param data\n   */\n  public changeData(data: LineOptions['data']) {\n    this.updateOption({ data });\n    const { chart, options } = this;\n    meta({ chart, options });\n    this.chart.changeData(data);\n  }\n\n  /**\n   * 获取 折线图 默认配置\n   */\n  protected getDefaultOptions() {\n    return Line.getDefaultOptions();\n  }\n\n  /**\n   * 获取 折线图 的适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<LineOptions> {\n    return adaptor;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}