{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { registerShape } from '@antv/g2';\nimport { reduce, isNumber, mix } from '@antv/util';\nimport { transform } from '../../../utils/matrix';\nvar DURATION = 5000;\n/**\n * 一个线性映射的函数\n * @param min\n * @param max\n * @param factor\n */\n\nfunction lerp(min, max, factor) {\n  return min + (max - min) * factor;\n}\n/**\n * 波浪的 attrs\n * @param cfg\n */\n\n\nfunction getFillAttrs(cfg) {\n  var attrs = __assign({\n    opacity: 1\n  }, cfg.style);\n\n  if (cfg.color && !attrs.fill) {\n    attrs.fill = cfg.color;\n  }\n\n  return attrs;\n}\n/**\n * shape 的 attrs\n * @param cfg\n */\n\n\nfunction getLineAttrs(cfg) {\n  var defaultAttrs = {\n    fill: '#fff',\n    fillOpacity: 0,\n    lineWidth: 4\n  };\n  var attrs = mix({}, defaultAttrs, cfg.style);\n\n  if (cfg.color && !attrs.stroke) {\n    attrs.stroke = cfg.color;\n  }\n\n  if (isNumber(cfg.opacity)) {\n    attrs.opacity = attrs.strokeOpacity = cfg.opacity;\n  }\n\n  return attrs;\n}\n/**\n * 用贝塞尔曲线模拟正弦波\n * Using Bezier curves to fit sine wave.\n * There is 4 control points for each curve of wave,\n * which is at 1/4 wave length of the sine wave.\n *\n * The control points for a wave from (a) to (d) are a-b-c-d:\n *          c *----* d\n *     b *\n *       |\n * ... a * ..................\n *\n * whose positions are a: (0, 0), b: (0.5, 0.5), c: (1, 1), d: (PI / 2, 1)\n *\n * @param x          x position of the left-most point (a)\n * @param stage      0-3, stating which part of the wave it is\n * @param waveLength wave length of the sine wave\n * @param amplitude  wave amplitude\n * @return 正弦片段曲线\n */\n\n\nfunction getWaterWavePositions(x, stage, waveLength, amplitude) {\n  if (stage === 0) {\n    return [[x + 1 / 2 * waveLength / Math.PI / 2, amplitude / 2], [x + 1 / 2 * waveLength / Math.PI, amplitude], [x + waveLength / 4, amplitude]];\n  }\n\n  if (stage === 1) {\n    return [[x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 2), amplitude], [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 1), amplitude / 2], [x + waveLength / 4, 0]];\n  }\n\n  if (stage === 2) {\n    return [[x + 1 / 2 * waveLength / Math.PI / 2, -amplitude / 2], [x + 1 / 2 * waveLength / Math.PI, -amplitude], [x + waveLength / 4, -amplitude]];\n  }\n\n  return [[x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 2), -amplitude], [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 1), -amplitude / 2], [x + waveLength / 4, 0]];\n}\n/**\n * 获取水波路径\n * @param radius          半径\n * @param waterLevel      水位\n * @param waveLength      波长\n * @param phase           相位\n * @param amplitude       震幅\n * @param cx              圆心x\n * @param cy              圆心y\n * @return path            路径\n * @reference http://gitlab.alipay-inc.com/datavis/g6/blob/1.2.0/src/graph/utils/path.js#L135\n */\n\n\nfunction getWaterWavePath(radius, waterLevel, waveLength, phase, amplitude, cx, cy) {\n  var curves = Math.ceil(2 * radius / waveLength * 4) * 4;\n  var path = [];\n  var _phase = phase; // map phase to [-Math.PI * 2, 0]\n\n  while (_phase < -Math.PI * 2) {\n    _phase += Math.PI * 2;\n  }\n\n  while (_phase > 0) {\n    _phase -= Math.PI * 2;\n  }\n\n  _phase = _phase / Math.PI / 2 * waveLength;\n  var left = cx - radius + _phase - radius * 2;\n  /**\n   * top-left corner as start point\n   *\n   * draws this point\n   *  |\n   * \\|/\n   *  ~~~~~~~~\n   *  |      |\n   *  +------+\n   */\n\n  path.push(['M', left, waterLevel]);\n  /**\n   * top wave\n   *\n   * ~~~~~~~~ <- draws this sine wave\n   * |      |\n   * +------+\n   */\n\n  var waveRight = 0;\n\n  for (var c = 0; c < curves; ++c) {\n    var stage = c % 4;\n    var pos = getWaterWavePositions(c * waveLength / 4, stage, waveLength, amplitude);\n    path.push(['C', pos[0][0] + left, -pos[0][1] + waterLevel, pos[1][0] + left, -pos[1][1] + waterLevel, pos[2][0] + left, -pos[2][1] + waterLevel]);\n\n    if (c === curves - 1) {\n      waveRight = pos[2][0];\n    }\n  }\n  /**\n   * top-right corner\n   *\n   *                       ~~~~~~~~\n   * 3. draws this line -> |      | <- 1. draws this line\n   *                       +------+\n   *                          ^\n   *                          |\n   *                  2. draws this line\n   */\n\n\n  path.push(['L', waveRight + left, cy + radius]);\n  path.push(['L', left, cy + radius]);\n  path.push(['Z']); // path.push(['L', left, waterLevel]);\n\n  return path;\n}\n/**\n * 添加水波\n * @param x           中心x\n * @param y           中心y\n * @param level       水位等级 0～1\n * @param waveCount   水波数\n * @param waveAttrs      色值\n * @param group       图组\n * @param clip        用于剪切的图形\n * @param radius      绘制图形的高度\n * @param waveLength  波的长度\n */\n\n\nfunction addWaterWave(x, y, level, waveCount, waveAttrs, group, clip, radius, waveLength) {\n  var fill = waveAttrs.fill,\n      opacity = waveAttrs.opacity;\n  var bbox = clip.getBBox();\n  var width = bbox.maxX - bbox.minX;\n  var height = bbox.maxY - bbox.minY;\n\n  for (var idx = 0; idx < waveCount; idx++) {\n    var factor = waveCount <= 1 ? 0 : idx / (waveCount - 1);\n    var wave = group.addShape('path', {\n      name: \"waterwave-path\",\n      attrs: {\n        path: getWaterWavePath(radius, bbox.minY + height * level, waveLength, 0, width / 32, // 波幅高度\n        x, y),\n        fill: fill,\n        opacity: lerp(0.2, 0.9, factor) * opacity\n      }\n    });\n\n    try {\n      var matrix = transform([['t', waveLength, 0]]);\n      wave.stopAnimate();\n      wave.animate({\n        matrix: matrix\n      }, {\n        duration: lerp(0.5 * DURATION, DURATION, factor),\n        repeat: true\n      });\n    } catch (e) {\n      // TODO off-screen canvas 中动画会找不到 canvas\n      console.warn('off-screen group animate error!');\n    }\n  }\n}\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\n\n\nfunction pin(x, y, width, height) {\n  var w = width * 2 / 3;\n  var h = Math.max(w, height);\n  var r = w / 2; // attrs of the upper circle\n\n  var cx = x;\n  var cy = r + y - h / 2;\n  var theta = Math.asin(r / ((h - r) * 0.85));\n  var dy = Math.sin(theta) * r;\n  var dx = Math.cos(theta) * r; // the start point of the path\n\n  var x0 = cx - dx;\n  var y0 = cy + dy; // control point\n\n  var cpX = x;\n  var cpY = cy + r / Math.sin(theta);\n  return \"\\n      M \" + x0 + \" \" + y0 + \"\\n      A \" + r + \" \" + r + \" 0 1 1 \" + (x0 + dx * 2) + \" \" + y0 + \"\\n      Q \" + cpX + \" \" + cpY + \" \" + x + \" \" + (y + h / 2) + \"\\n      Q \" + cpX + \" \" + cpY + \" \" + x0 + \" \" + y0 + \"\\n      Z \\n    \";\n}\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\n\n\nfunction circle(x, y, width, height) {\n  var rx = width / 2;\n  var ry = height / 2;\n  return \"\\n      M \" + x + \" \" + (y - ry) + \" \\n      a \" + rx + \" \" + ry + \" 0 1 0 0 \" + ry * 2 + \"\\n      a \" + rx + \" \" + ry + \" 0 1 0 0 \" + -ry * 2 + \"\\n      Z\\n    \";\n}\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\n\n\nfunction diamond(x, y, width, height) {\n  var h = height / 2;\n  var w = width / 2;\n  return \"\\n      M \" + x + \" \" + (y - h) + \"\\n      L \" + (x + w) + \" \" + y + \"\\n      L \" + x + \" \" + (y + h) + \"\\n      L \" + (x - w) + \" \" + y + \"\\n      Z\\n    \";\n}\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\n\n\nfunction triangle(x, y, width, height) {\n  var h = height / 2;\n  var w = width / 2;\n  return \"\\n      M \" + x + \" \" + (y - h) + \"\\n      L \" + (x + w) + \" \" + (y + h) + \"\\n      L \" + (x - w) + \" \" + (y + h) + \"\\n      Z\\n    \";\n}\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\n\n\nfunction rect(x, y, width, height) {\n  var GOLDEN_SECTION_RATIO = 0.618;\n  var h = height / 2;\n  var w = width / 2 * GOLDEN_SECTION_RATIO;\n  return \"\\n      M \" + (x - w) + \" \" + (y - h) + \"\\n      L \" + (x + w) + \" \" + (y - h) + \"\\n      L \" + (x + w) + \" \" + (y + h) + \"\\n      L \" + (x - w) + \" \" + (y + h) + \"\\n      Z\\n    \";\n}\n\nregisterShape('interval', 'liquid-fill-gauge', {\n  draw: function (cfg, container) {\n    var cx = 0.5;\n    var cy = 0.5;\n    var customInfo = cfg.customInfo;\n    var _a = customInfo,\n        radio = _a.radius,\n        shape = _a.shape,\n        background = _a.background;\n    var outline = customInfo.outline;\n    var wave = customInfo.wave;\n    var border = outline.border,\n        distance = outline.distance;\n    var waveCount = wave.count,\n        waveLength = wave.length; // 获取最小 minX\n\n    var minX = reduce(cfg.points, function (r, p) {\n      return Math.min(r, p.x);\n    }, Infinity);\n    var center = this.parsePoint({\n      x: cx,\n      y: cy\n    });\n    var minXPoint = this.parsePoint({\n      x: minX,\n      y: cy\n    });\n    var halfWidth = center.x - minXPoint.x; // 保证半径是 画布宽高最小值的 radius 值\n\n    var radius = Math.min(halfWidth, minXPoint.y * radio);\n    var waveAttrs = getFillAttrs(cfg);\n    var outlineAttrs = getLineAttrs(mix({}, cfg, outline));\n    var innerRadius = radius - border / 2;\n    var builtInShapeByName = {\n      pin: pin,\n      circle: circle,\n      diamond: diamond,\n      triangle: triangle,\n      rect: rect\n    };\n    var buildPath = typeof shape === 'function' ? shape : builtInShapeByName[shape] || builtInShapeByName['circle'];\n    var shapePath = buildPath(center.x, center.y, innerRadius * 2, innerRadius * 2); // 1. 绘制一个波\n\n    var waves = container.addGroup({\n      name: 'waves'\n    }); // 3. 波对应的 clip 裁剪形状\n\n    var clipPath = waves.setClip({\n      type: 'path',\n      attrs: {\n        path: shapePath\n      }\n    }); // 4. 绘制波形\n\n    addWaterWave(center.x, center.y, 1 - cfg.points[1].y, waveCount, waveAttrs, waves, clipPath, radius * 2, waveLength); // 2. 绘制一个 distance 宽的 border\n\n    container.addShape('path', {\n      name: 'distance',\n      attrs: {\n        path: shapePath,\n        fill: 'transparent',\n        lineWidth: border + distance * 2,\n        stroke: background === 'transparent' ? '#fff' : background\n      }\n    }); // 3. 绘制一个 border 宽的 border\n\n    container.addShape('path', {\n      name: 'wrap',\n      attrs: mix(outlineAttrs, {\n        path: shapePath,\n        fill: 'transparent',\n        lineWidth: border\n      })\n    });\n    return container;\n  }\n});","map":{"version":3,"sources":["../../../../src/plots/liquid/shapes/liquid.ts"],"names":[],"mappings":";AAAA,SAAS,aAAT,QAA8B,UAA9B;AAEA,SAAS,MAAT,EAAiB,QAAjB,EAA2B,GAA3B,QAAsC,YAAtC;AACA,SAAS,SAAT,QAA0B,uBAA1B;AAIA,IAAM,QAAQ,GAAG,IAAjB;AAEA;;;;;AAKG;;AACH,SAAS,IAAT,CAAc,GAAd,EAA2B,GAA3B,EAAwC,MAAxC,EAAsD;AACpD,SAAO,GAAG,GAAG,CAAC,GAAG,GAAG,GAAP,IAAc,MAA3B;AACD;AAED;;;AAGG;;;AACH,SAAS,YAAT,CAAsB,GAAtB,EAAqC;AACnC,MAAM,KAAK,GAAA,QAAA,CAAA;AAAK,IAAA,OAAO,EAAE;AAAd,GAAA,EAAoB,GAAG,CAAC,KAAxB,CAAX;;AAEA,MAAI,GAAG,CAAC,KAAJ,IAAa,CAAC,KAAK,CAAC,IAAxB,EAA8B;AAC5B,IAAA,KAAK,CAAC,IAAN,GAAa,GAAG,CAAC,KAAjB;AACD;;AAED,SAAO,KAAP;AACD;AAED;;;AAGG;;;AACH,SAAS,YAAT,CAAsB,GAAtB,EAAqC;AACnC,MAAM,YAAY,GAAG;AACnB,IAAA,IAAI,EAAE,MADa;AAEnB,IAAA,WAAW,EAAE,CAFM;AAGnB,IAAA,SAAS,EAAE;AAHQ,GAArB;AAKA,MAAM,KAAK,GAAG,GAAG,CAAC,EAAD,EAAK,YAAL,EAAmB,GAAG,CAAC,KAAvB,CAAjB;;AAEA,MAAI,GAAG,CAAC,KAAJ,IAAa,CAAC,KAAK,CAAC,MAAxB,EAAgC;AAC9B,IAAA,KAAK,CAAC,MAAN,GAAe,GAAG,CAAC,KAAnB;AACD;;AACD,MAAI,QAAQ,CAAC,GAAG,CAAC,OAAL,CAAZ,EAA2B;AACzB,IAAA,KAAK,CAAC,OAAN,GAAgB,KAAK,CAAC,aAAN,GAAsB,GAAG,CAAC,OAA1C;AACD;;AAED,SAAO,KAAP;AACD;AAED;;;;;;;;;;;;;;;;;;;AAmBG;;;AACH,SAAS,qBAAT,CAA+B,CAA/B,EAA0C,KAA1C,EAAyD,UAAzD,EAA6E,SAA7E,EAA8F;AAC5F,MAAI,KAAK,KAAK,CAAd,EAAiB;AACf,WAAO,CACL,CAAC,CAAC,GAAK,IAAI,CAAL,GAAU,UAAX,GAAyB,IAAI,CAAC,EAA9B,GAAmC,CAAxC,EAA2C,SAAS,GAAG,CAAvD,CADK,EAEL,CAAC,CAAC,GAAK,IAAI,CAAL,GAAU,UAAX,GAAyB,IAAI,CAAC,EAAnC,EAAuC,SAAvC,CAFK,EAGL,CAAC,CAAC,GAAG,UAAU,GAAG,CAAlB,EAAqB,SAArB,CAHK,CAAP;AAKD;;AACD,MAAI,KAAK,KAAK,CAAd,EAAiB;AACf,WAAO,CACL,CAAC,CAAC,GAAM,IAAI,CAAL,GAAU,UAAX,GAAyB,IAAI,CAAC,EAA9B,GAAmC,CAApC,IAA0C,IAAI,CAAC,EAAL,GAAU,CAApD,CAAL,EAA6D,SAA7D,CADK,EAEL,CAAC,CAAC,GAAM,IAAI,CAAL,GAAU,UAAX,GAAyB,IAAI,CAAC,EAA9B,GAAmC,CAApC,IAA0C,IAAI,CAAC,EAAL,GAAU,CAApD,CAAL,EAA6D,SAAS,GAAG,CAAzE,CAFK,EAGL,CAAC,CAAC,GAAG,UAAU,GAAG,CAAlB,EAAqB,CAArB,CAHK,CAAP;AAKD;;AACD,MAAI,KAAK,KAAK,CAAd,EAAiB;AACf,WAAO,CACL,CAAC,CAAC,GAAK,IAAI,CAAL,GAAU,UAAX,GAAyB,IAAI,CAAC,EAA9B,GAAmC,CAAxC,EAA2C,CAAC,SAAD,GAAa,CAAxD,CADK,EAEL,CAAC,CAAC,GAAK,IAAI,CAAL,GAAU,UAAX,GAAyB,IAAI,CAAC,EAAnC,EAAuC,CAAC,SAAxC,CAFK,EAGL,CAAC,CAAC,GAAG,UAAU,GAAG,CAAlB,EAAqB,CAAC,SAAtB,CAHK,CAAP;AAKD;;AACD,SAAO,CACL,CAAC,CAAC,GAAM,IAAI,CAAL,GAAU,UAAX,GAAyB,IAAI,CAAC,EAA9B,GAAmC,CAApC,IAA0C,IAAI,CAAC,EAAL,GAAU,CAApD,CAAL,EAA6D,CAAC,SAA9D,CADK,EAEL,CAAC,CAAC,GAAM,IAAI,CAAL,GAAU,UAAX,GAAyB,IAAI,CAAC,EAA9B,GAAmC,CAApC,IAA0C,IAAI,CAAC,EAAL,GAAU,CAApD,CAAL,EAA6D,CAAC,SAAD,GAAa,CAA1E,CAFK,EAGL,CAAC,CAAC,GAAG,UAAU,GAAG,CAAlB,EAAqB,CAArB,CAHK,CAAP;AAKD;AACD;;;;;;;;;;;AAWG;;;AACH,SAAS,gBAAT,CACE,MADF,EAEE,UAFF,EAGE,UAHF,EAIE,KAJF,EAKE,SALF,EAME,EANF,EAOE,EAPF,EAOY;AAEV,MAAM,MAAM,GAAG,IAAI,CAAC,IAAL,CAAY,IAAI,MAAL,GAAe,UAAhB,GAA8B,CAAxC,IAA6C,CAA5D;AACA,MAAM,IAAI,GAAG,EAAb;AACA,MAAI,MAAM,GAAG,KAAb,CAJU,CAMV;;AACA,SAAO,MAAM,GAAG,CAAC,IAAI,CAAC,EAAN,GAAW,CAA3B,EAA8B;AAC5B,IAAA,MAAM,IAAI,IAAI,CAAC,EAAL,GAAU,CAApB;AACD;;AACD,SAAO,MAAM,GAAG,CAAhB,EAAmB;AACjB,IAAA,MAAM,IAAI,IAAI,CAAC,EAAL,GAAU,CAApB;AACD;;AACD,EAAA,MAAM,GAAI,MAAM,GAAG,IAAI,CAAC,EAAd,GAAmB,CAApB,GAAyB,UAAlC;AAEA,MAAM,IAAI,GAAG,EAAE,GAAG,MAAL,GAAc,MAAd,GAAuB,MAAM,GAAG,CAA7C;AACA;;;;;;;;;AASG;;AACH,EAAA,IAAI,CAAC,IAAL,CAAU,CAAC,GAAD,EAAM,IAAN,EAAY,UAAZ,CAAV;AAEA;;;;;;AAMG;;AACH,MAAI,SAAS,GAAG,CAAhB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAApB,EAA4B,EAAE,CAA9B,EAAiC;AAC/B,QAAM,KAAK,GAAG,CAAC,GAAG,CAAlB;AACA,QAAM,GAAG,GAAG,qBAAqB,CAAE,CAAC,GAAG,UAAL,GAAmB,CAApB,EAAuB,KAAvB,EAA8B,UAA9B,EAA0C,SAA1C,CAAjC;AACA,IAAA,IAAI,CAAC,IAAL,CAAU,CACR,GADQ,EAER,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,IAAY,IAFJ,EAGR,CAAC,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAD,GAAa,UAHL,EAIR,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,IAAY,IAJJ,EAKR,CAAC,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAD,GAAa,UALL,EAMR,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,IAAY,IANJ,EAOR,CAAC,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAD,GAAa,UAPL,CAAV;;AAUA,QAAI,CAAC,KAAK,MAAM,GAAG,CAAnB,EAAsB;AACpB,MAAA,SAAS,GAAG,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAZ;AACD;AACF;AAED;;;;;;;;;AASG;;;AACH,EAAA,IAAI,CAAC,IAAL,CAAU,CAAC,GAAD,EAAM,SAAS,GAAG,IAAlB,EAAwB,EAAE,GAAG,MAA7B,CAAV;AACA,EAAA,IAAI,CAAC,IAAL,CAAU,CAAC,GAAD,EAAM,IAAN,EAAY,EAAE,GAAG,MAAjB,CAAV;AACA,EAAA,IAAI,CAAC,IAAL,CAAU,CAAC,GAAD,CAAV,EAlEU,CAmEV;;AACA,SAAO,IAAP;AACD;AAED;;;;;;;;;;;AAWG;;;AACH,SAAS,YAAT,CACE,CADF,EAEE,CAFF,EAGE,KAHF,EAIE,SAJF,EAKE,SALF,EAME,KANF,EAOE,IAPF,EAQE,MARF,EASE,UATF,EASoB;AAEV,MAAA,IAAI,GAAc,SAAS,CAAvB,IAAJ;AAAA,MAAM,OAAO,GAAK,SAAS,CAAd,OAAb;AACR,MAAM,IAAI,GAAG,IAAI,CAAC,OAAL,EAAb;AACA,MAAM,KAAK,GAAG,IAAI,CAAC,IAAL,GAAY,IAAI,CAAC,IAA/B;AACA,MAAM,MAAM,GAAG,IAAI,CAAC,IAAL,GAAY,IAAI,CAAC,IAAhC;;AAEA,OAAK,IAAI,GAAG,GAAG,CAAf,EAAkB,GAAG,GAAG,SAAxB,EAAmC,GAAG,EAAtC,EAA0C;AACxC,QAAM,MAAM,GAAG,SAAS,IAAI,CAAb,GAAiB,CAAjB,GAAqB,GAAG,IAAI,SAAS,GAAG,CAAhB,CAAvC;AACA,QAAM,IAAI,GAAG,KAAK,CAAC,QAAN,CAAe,MAAf,EAAuB;AAClC,MAAA,IAAI,EAAE,gBAD4B;AAElC,MAAA,KAAK,EAAE;AACL,QAAA,IAAI,EAAE,gBAAgB,CACpB,MADoB,EAEpB,IAAI,CAAC,IAAL,GAAY,MAAM,GAAG,KAFD,EAGpB,UAHoB,EAIpB,CAJoB,EAKpB,KAAK,GAAG,EALY,EAKR;AACZ,QAAA,CANoB,EAOpB,CAPoB,CADjB;AAUL,QAAA,IAAI,EAAA,IAVC;AAWL,QAAA,OAAO,EAAE,IAAI,CAAC,GAAD,EAAM,GAAN,EAAW,MAAX,CAAJ,GAAyB;AAX7B;AAF2B,KAAvB,CAAb;;AAiBA,QAAI;AACF,UAAM,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,GAAD,EAAM,UAAN,EAAkB,CAAlB,CAAD,CAAD,CAAxB;AAEA,MAAA,IAAI,CAAC,WAAL;AACA,MAAA,IAAI,CAAC,OAAL,CACE;AAAE,QAAA,MAAM,EAAA;AAAR,OADF,EAEE;AACE,QAAA,QAAQ,EAAE,IAAI,CAAC,MAAM,QAAP,EAAiB,QAAjB,EAA2B,MAA3B,CADhB;AAEE,QAAA,MAAM,EAAE;AAFV,OAFF;AAOD,KAXD,CAWE,OAAO,CAAP,EAAU;AACV;AACA,MAAA,OAAO,CAAC,IAAR,CAAa,iCAAb;AACD;AACF;AACF;AAED;;;;;;AAMG;;;AACH,SAAS,GAAT,CAAa,CAAb,EAAwB,CAAxB,EAAmC,KAAnC,EAAkD,MAAlD,EAAgE;AAC9D,MAAM,CAAC,GAAI,KAAK,GAAG,CAAT,GAAc,CAAxB;AACA,MAAM,CAAC,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,MAAZ,CAAV;AACA,MAAM,CAAC,GAAG,CAAC,GAAG,CAAd,CAH8D,CAK9D;;AACA,MAAM,EAAE,GAAG,CAAX;AACA,MAAM,EAAE,GAAG,CAAC,GAAG,CAAJ,GAAQ,CAAC,GAAG,CAAvB;AACA,MAAM,KAAK,GAAG,IAAI,CAAC,IAAL,CAAU,CAAC,IAAI,CAAC,CAAC,GAAG,CAAL,IAAU,IAAd,CAAX,CAAd;AACA,MAAM,EAAE,GAAG,IAAI,CAAC,GAAL,CAAS,KAAT,IAAkB,CAA7B;AACA,MAAM,EAAE,GAAG,IAAI,CAAC,GAAL,CAAS,KAAT,IAAkB,CAA7B,CAV8D,CAY9D;;AACA,MAAM,EAAE,GAAG,EAAE,GAAG,EAAhB;AACA,MAAM,EAAE,GAAG,EAAE,GAAG,EAAhB,CAd8D,CAgB9D;;AACA,MAAM,GAAG,GAAG,CAAZ;AACA,MAAM,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,GAAL,CAAS,KAAT,CAArB;AAEA,SAAO,eACC,EADD,GACG,GADH,GACO,EADP,GACS,YADT,GAEC,CAFD,GAEE,GAFF,GAEM,CAFN,GAEO,SAFP,IAEiB,EAAE,GAAG,EAAE,GAAG,CAF3B,IAE4B,GAF5B,GAEgC,EAFhC,GAEkC,YAFlC,GAGC,GAHD,GAGI,GAHJ,GAGQ,GAHR,GAGW,GAHX,GAGe,CAHf,GAGgB,GAHhB,IAGoB,CAAC,GAAG,CAAC,GAAG,CAH5B,IAG6B,YAH7B,GAIC,GAJD,GAII,GAJJ,GAIQ,GAJR,GAIW,GAJX,GAIe,EAJf,GAIiB,GAJjB,GAIqB,EAJrB,GAIuB,kBAJ9B;AAOD;AAED;;;;;;AAMG;;;AACH,SAAS,MAAT,CAAgB,CAAhB,EAA2B,CAA3B,EAAsC,KAAtC,EAAqD,MAArD,EAAmE;AACjE,MAAM,EAAE,GAAG,KAAK,GAAG,CAAnB;AACA,MAAM,EAAE,GAAG,MAAM,GAAG,CAApB;AACA,SAAO,eACC,CADD,GACE,GADF,IACM,CAAC,GAAG,EADV,IACY,aADZ,GAEC,EAFD,GAEG,GAFH,GAEO,EAFP,GAES,WAFT,GAEqB,EAAE,GAAG,CAF1B,GAE2B,YAF3B,GAGC,EAHD,GAGG,GAHH,GAGO,EAHP,GAGS,WAHT,GAGqB,CAAC,EAAD,GAAM,CAH3B,GAG4B,iBAHnC;AAMD;AAED;;;;;;AAMG;;;AACH,SAAS,OAAT,CAAiB,CAAjB,EAA4B,CAA5B,EAAuC,KAAvC,EAAsD,MAAtD,EAAoE;AAClE,MAAM,CAAC,GAAG,MAAM,GAAG,CAAnB;AACA,MAAM,CAAC,GAAG,KAAK,GAAG,CAAlB;AACA,SAAO,eACC,CADD,GACE,GADF,IACM,CAAC,GAAG,CADV,IACW,YADX,IAEC,CAAC,GAAG,CAFL,IAEM,GAFN,GAEU,CAFV,GAEW,YAFX,GAGC,CAHD,GAGE,GAHF,IAGM,CAAC,GAAG,CAHV,IAGW,YAHX,IAIC,CAAC,GAAG,CAJL,IAIM,GAJN,GAIU,CAJV,GAIW,iBAJlB;AAOD;AAED;;;;;;AAMG;;;AACH,SAAS,QAAT,CAAkB,CAAlB,EAA6B,CAA7B,EAAwC,KAAxC,EAAuD,MAAvD,EAAqE;AACnE,MAAM,CAAC,GAAG,MAAM,GAAG,CAAnB;AACA,MAAM,CAAC,GAAG,KAAK,GAAG,CAAlB;AACA,SAAO,eACC,CADD,GACE,GADF,IACM,CAAC,GAAG,CADV,IACW,YADX,IAEC,CAAC,GAAG,CAFL,IAEM,GAFN,IAEU,CAAC,GAAG,CAFd,IAEe,YAFf,IAGC,CAAC,GAAG,CAHL,IAGM,GAHN,IAGU,CAAC,GAAG,CAHd,IAGe,iBAHtB;AAMD;AAED;;;;;;AAMG;;;AACH,SAAS,IAAT,CAAc,CAAd,EAAyB,CAAzB,EAAoC,KAApC,EAAmD,MAAnD,EAAiE;AAC/D,MAAM,oBAAoB,GAAG,KAA7B;AACA,MAAM,CAAC,GAAG,MAAM,GAAG,CAAnB;AACA,MAAM,CAAC,GAAI,KAAK,GAAG,CAAT,GAAc,oBAAxB;AACA,SAAO,gBACC,CAAC,GAAG,CADL,IACM,GADN,IACU,CAAC,GAAG,CADd,IACe,YADf,IAEC,CAAC,GAAG,CAFL,IAEM,GAFN,IAEU,CAAC,GAAG,CAFd,IAEe,YAFf,IAGC,CAAC,GAAG,CAHL,IAGM,GAHN,IAGU,CAAC,GAAG,CAHd,IAGe,YAHf,IAIC,CAAC,GAAG,CAJL,IAIM,GAJN,IAIU,CAAC,GAAG,CAJd,IAIe,iBAJtB;AAOD;;AAED,aAAa,CAAC,UAAD,EAAa,mBAAb,EAAkC;AAC7C,EAAA,IAAI,EAAJ,UAAK,GAAL,EAAe,SAAf,EAAgC;AAC9B,QAAM,EAAE,GAAG,GAAX;AACA,QAAM,EAAE,GAAG,GAAX;AAEQ,QAAA,UAAU,GAAK,GAAG,CAAR,UAAV;AACF,QAAA,EAAA,GAAuC,UAAvC;AAAA,QAAU,KAAK,GAAA,EAAA,CAAA,MAAf;AAAA,QAAiB,KAAK,GAAA,EAAA,CAAA,KAAtB;AAAA,QAAwB,UAAU,GAAA,EAAA,CAAA,UAAlC;AACN,QAAM,OAAO,GAA6B,UAAU,CAAC,OAArD;AACA,QAAM,IAAI,GAA0B,UAAU,CAAC,IAA/C;AACQ,QAAA,MAAM,GAAe,OAAO,CAAtB,MAAN;AAAA,QAAQ,QAAQ,GAAK,OAAO,CAAZ,QAAhB;AACA,QAAO,SAAS,GAAyB,IAAI,CAA7B,KAAhB;AAAA,QAA0B,UAAU,GAAK,IAAI,CAAT,MAApC,CATsB,CAW9B;;AACA,QAAM,IAAI,GAAG,MAAM,CACjB,GAAG,CAAC,MADa,EAEjB,UAAC,CAAD,EAAY,CAAZ,EAAoB;AAClB,aAAO,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAC,CAAC,CAAd,CAAP;AACD,KAJgB,EAKjB,QALiB,CAAnB;AAQA,QAAM,MAAM,GAAG,KAAK,UAAL,CAAgB;AAAE,MAAA,CAAC,EAAE,EAAL;AAAS,MAAA,CAAC,EAAE;AAAZ,KAAhB,CAAf;AACA,QAAM,SAAS,GAAG,KAAK,UAAL,CAAgB;AAAE,MAAA,CAAC,EAAE,IAAL;AAAW,MAAA,CAAC,EAAE;AAAd,KAAhB,CAAlB;AACA,QAAM,SAAS,GAAG,MAAM,CAAC,CAAP,GAAW,SAAS,CAAC,CAAvC,CAtB8B,CAwB9B;;AACA,QAAM,MAAM,GAAG,IAAI,CAAC,GAAL,CAAS,SAAT,EAAoB,SAAS,CAAC,CAAV,GAAc,KAAlC,CAAf;AACA,QAAM,SAAS,GAAG,YAAY,CAAC,GAAD,CAA9B;AACA,QAAM,YAAY,GAAG,YAAY,CAAC,GAAG,CAAC,EAAD,EAAK,GAAL,EAAU,OAAV,CAAJ,CAAjC;AACA,QAAM,WAAW,GAAG,MAAM,GAAG,MAAM,GAAG,CAAtC;AACA,QAAM,kBAAkB,GAAG;AACzB,MAAA,GAAG,EAAA,GADsB;AAEzB,MAAA,MAAM,EAAA,MAFmB;AAGzB,MAAA,OAAO,EAAA,OAHkB;AAIzB,MAAA,QAAQ,EAAA,QAJiB;AAKzB,MAAA,IAAI,EAAA;AALqB,KAA3B;AAOA,QAAM,SAAS,GAAG,OAAO,KAAP,KAAiB,UAAjB,GAA8B,KAA9B,GAAsC,kBAAkB,CAAC,KAAD,CAAlB,IAA6B,kBAAkB,CAAC,QAAD,CAAvG;AACA,QAAM,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,CAAR,EAAW,MAAM,CAAC,CAAlB,EAAqB,WAAW,GAAG,CAAnC,EAAsC,WAAW,GAAG,CAApD,CAA3B,CArC8B,CAuC9B;;AACA,QAAM,KAAK,GAAG,SAAS,CAAC,QAAV,CAAmB;AAC/B,MAAA,IAAI,EAAE;AADyB,KAAnB,CAAd,CAxC8B,CA4C9B;;AACA,QAAM,QAAQ,GAAG,KAAK,CAAC,OAAN,CAAc;AAC7B,MAAA,IAAI,EAAE,MADuB;AAE7B,MAAA,KAAK,EAAE;AACL,QAAA,IAAI,EAAE;AADD;AAFsB,KAAd,CAAjB,CA7C8B,CAoD9B;;AACA,IAAA,YAAY,CACV,MAAM,CAAC,CADG,EAEV,MAAM,CAAC,CAFG,EAGV,IAAK,GAAG,CAAC,MAAJ,CAAW,CAAX,EAAwB,CAHnB,EAIV,SAJU,EAKV,SALU,EAMV,KANU,EAOV,QAPU,EAQV,MAAM,GAAG,CARC,EASV,UATU,CAAZ,CArD8B,CAiE9B;;AACA,IAAA,SAAS,CAAC,QAAV,CAAmB,MAAnB,EAA2B;AACzB,MAAA,IAAI,EAAE,UADmB;AAEzB,MAAA,KAAK,EAAE;AACL,QAAA,IAAI,EAAE,SADD;AAEL,QAAA,IAAI,EAAE,aAFD;AAGL,QAAA,SAAS,EAAE,MAAM,GAAG,QAAQ,GAAG,CAH1B;AAIL,QAAA,MAAM,EAAE,UAAU,KAAK,aAAf,GAA+B,MAA/B,GAAwC;AAJ3C;AAFkB,KAA3B,EAlE8B,CA4E9B;;AACA,IAAA,SAAS,CAAC,QAAV,CAAmB,MAAnB,EAA2B;AACzB,MAAA,IAAI,EAAE,MADmB;AAEzB,MAAA,KAAK,EAAE,GAAG,CAAC,YAAD,EAAe;AACvB,QAAA,IAAI,EAAE,SADiB;AAEvB,QAAA,IAAI,EAAE,aAFiB;AAGvB,QAAA,SAAS,EAAE;AAHY,OAAf;AAFe,KAA3B;AASA,WAAO,SAAP;AACD;AAxF4C,CAAlC,CAAb","sourcesContent":["import { registerShape } from '@antv/g2';\nimport { IGroup, IShape } from '@antv/g-base';\nimport { reduce, isNumber, mix } from '@antv/util';\nimport { transform } from '../../../utils/matrix';\nimport { Point, ShapeStyle } from '../../../types';\nimport { LiquidOptions, CustomInfo } from '../types';\n\nconst DURATION = 5000;\n\n/**\n * 一个线性映射的函数\n * @param min\n * @param max\n * @param factor\n */\nfunction lerp(min: number, max: number, factor: number) {\n  return min + (max - min) * factor;\n}\n\n/**\n * 波浪的 attrs\n * @param cfg\n */\nfunction getFillAttrs(cfg: ShapeStyle) {\n  const attrs = { opacity: 1, ...cfg.style };\n\n  if (cfg.color && !attrs.fill) {\n    attrs.fill = cfg.color;\n  }\n\n  return attrs;\n}\n\n/**\n * shape 的 attrs\n * @param cfg\n */\nfunction getLineAttrs(cfg: ShapeStyle) {\n  const defaultAttrs = {\n    fill: '#fff',\n    fillOpacity: 0,\n    lineWidth: 4,\n  };\n  const attrs = mix({}, defaultAttrs, cfg.style);\n\n  if (cfg.color && !attrs.stroke) {\n    attrs.stroke = cfg.color;\n  }\n  if (isNumber(cfg.opacity)) {\n    attrs.opacity = attrs.strokeOpacity = cfg.opacity;\n  }\n\n  return attrs;\n}\n\n/**\n * 用贝塞尔曲线模拟正弦波\n * Using Bezier curves to fit sine wave.\n * There is 4 control points for each curve of wave,\n * which is at 1/4 wave length of the sine wave.\n *\n * The control points for a wave from (a) to (d) are a-b-c-d:\n *          c *----* d\n *     b *\n *       |\n * ... a * ..................\n *\n * whose positions are a: (0, 0), b: (0.5, 0.5), c: (1, 1), d: (PI / 2, 1)\n *\n * @param x          x position of the left-most point (a)\n * @param stage      0-3, stating which part of the wave it is\n * @param waveLength wave length of the sine wave\n * @param amplitude  wave amplitude\n * @return 正弦片段曲线\n */\nfunction getWaterWavePositions(x: number, stage: number, waveLength: number, amplitude: number) {\n  if (stage === 0) {\n    return [\n      [x + ((1 / 2) * waveLength) / Math.PI / 2, amplitude / 2],\n      [x + ((1 / 2) * waveLength) / Math.PI, amplitude],\n      [x + waveLength / 4, amplitude],\n    ];\n  }\n  if (stage === 1) {\n    return [\n      [x + (((1 / 2) * waveLength) / Math.PI / 2) * (Math.PI - 2), amplitude],\n      [x + (((1 / 2) * waveLength) / Math.PI / 2) * (Math.PI - 1), amplitude / 2],\n      [x + waveLength / 4, 0],\n    ];\n  }\n  if (stage === 2) {\n    return [\n      [x + ((1 / 2) * waveLength) / Math.PI / 2, -amplitude / 2],\n      [x + ((1 / 2) * waveLength) / Math.PI, -amplitude],\n      [x + waveLength / 4, -amplitude],\n    ];\n  }\n  return [\n    [x + (((1 / 2) * waveLength) / Math.PI / 2) * (Math.PI - 2), -amplitude],\n    [x + (((1 / 2) * waveLength) / Math.PI / 2) * (Math.PI - 1), -amplitude / 2],\n    [x + waveLength / 4, 0],\n  ];\n}\n/**\n * 获取水波路径\n * @param radius          半径\n * @param waterLevel      水位\n * @param waveLength      波长\n * @param phase           相位\n * @param amplitude       震幅\n * @param cx              圆心x\n * @param cy              圆心y\n * @return path            路径\n * @reference http://gitlab.alipay-inc.com/datavis/g6/blob/1.2.0/src/graph/utils/path.js#L135\n */\nfunction getWaterWavePath(\n  radius: number,\n  waterLevel: number,\n  waveLength: number,\n  phase: number,\n  amplitude: number,\n  cx: number,\n  cy: number\n) {\n  const curves = Math.ceil(((2 * radius) / waveLength) * 4) * 4;\n  const path = [];\n  let _phase = phase;\n\n  // map phase to [-Math.PI * 2, 0]\n  while (_phase < -Math.PI * 2) {\n    _phase += Math.PI * 2;\n  }\n  while (_phase > 0) {\n    _phase -= Math.PI * 2;\n  }\n  _phase = (_phase / Math.PI / 2) * waveLength;\n\n  const left = cx - radius + _phase - radius * 2;\n  /**\n   * top-left corner as start point\n   *\n   * draws this point\n   *  |\n   * \\|/\n   *  ~~~~~~~~\n   *  |      |\n   *  +------+\n   */\n  path.push(['M', left, waterLevel]);\n\n  /**\n   * top wave\n   *\n   * ~~~~~~~~ <- draws this sine wave\n   * |      |\n   * +------+\n   */\n  let waveRight = 0;\n  for (let c = 0; c < curves; ++c) {\n    const stage = c % 4;\n    const pos = getWaterWavePositions((c * waveLength) / 4, stage, waveLength, amplitude);\n    path.push([\n      'C',\n      pos[0][0] + left,\n      -pos[0][1] + waterLevel,\n      pos[1][0] + left,\n      -pos[1][1] + waterLevel,\n      pos[2][0] + left,\n      -pos[2][1] + waterLevel,\n    ]);\n\n    if (c === curves - 1) {\n      waveRight = pos[2][0];\n    }\n  }\n\n  /**\n   * top-right corner\n   *\n   *                       ~~~~~~~~\n   * 3. draws this line -> |      | <- 1. draws this line\n   *                       +------+\n   *                          ^\n   *                          |\n   *                  2. draws this line\n   */\n  path.push(['L', waveRight + left, cy + radius]);\n  path.push(['L', left, cy + radius]);\n  path.push(['Z']);\n  // path.push(['L', left, waterLevel]);\n  return path;\n}\n\n/**\n * 添加水波\n * @param x           中心x\n * @param y           中心y\n * @param level       水位等级 0～1\n * @param waveCount   水波数\n * @param waveAttrs      色值\n * @param group       图组\n * @param clip        用于剪切的图形\n * @param radius      绘制图形的高度\n * @param waveLength  波的长度\n */\nfunction addWaterWave(\n  x: number,\n  y: number,\n  level: number,\n  waveCount: number,\n  waveAttrs: ShapeStyle,\n  group: IGroup,\n  clip: IShape,\n  radius: number,\n  waveLength: number\n) {\n  const { fill, opacity } = waveAttrs;\n  const bbox = clip.getBBox();\n  const width = bbox.maxX - bbox.minX;\n  const height = bbox.maxY - bbox.minY;\n\n  for (let idx = 0; idx < waveCount; idx++) {\n    const factor = waveCount <= 1 ? 0 : idx / (waveCount - 1);\n    const wave = group.addShape('path', {\n      name: `waterwave-path`,\n      attrs: {\n        path: getWaterWavePath(\n          radius,\n          bbox.minY + height * level,\n          waveLength,\n          0,\n          width / 32, // 波幅高度\n          x,\n          y\n        ),\n        fill,\n        opacity: lerp(0.2, 0.9, factor) * opacity,\n      },\n    });\n\n    try {\n      const matrix = transform([['t', waveLength, 0]]);\n\n      wave.stopAnimate();\n      wave.animate(\n        { matrix },\n        {\n          duration: lerp(0.5 * DURATION, DURATION, factor),\n          repeat: true,\n        }\n      );\n    } catch (e) {\n      // TODO off-screen canvas 中动画会找不到 canvas\n      console.warn('off-screen group animate error!');\n    }\n  }\n}\n\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\nfunction pin(x: number, y: number, width: number, height: number) {\n  const w = (width * 2) / 3;\n  const h = Math.max(w, height);\n  const r = w / 2;\n\n  // attrs of the upper circle\n  const cx = x;\n  const cy = r + y - h / 2;\n  const theta = Math.asin(r / ((h - r) * 0.85));\n  const dy = Math.sin(theta) * r;\n  const dx = Math.cos(theta) * r;\n\n  // the start point of the path\n  const x0 = cx - dx;\n  const y0 = cy + dy;\n\n  // control point\n  const cpX = x;\n  const cpY = cy + r / Math.sin(theta);\n\n  return `\n      M ${x0} ${y0}\n      A ${r} ${r} 0 1 1 ${x0 + dx * 2} ${y0}\n      Q ${cpX} ${cpY} ${x} ${y + h / 2}\n      Q ${cpX} ${cpY} ${x0} ${y0}\n      Z \n    `;\n}\n\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\nfunction circle(x: number, y: number, width: number, height: number) {\n  const rx = width / 2;\n  const ry = height / 2;\n  return `\n      M ${x} ${y - ry} \n      a ${rx} ${ry} 0 1 0 0 ${ry * 2}\n      a ${rx} ${ry} 0 1 0 0 ${-ry * 2}\n      Z\n    `;\n}\n\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\nfunction diamond(x: number, y: number, width: number, height: number) {\n  const h = height / 2;\n  const w = width / 2;\n  return `\n      M ${x} ${y - h}\n      L ${x + w} ${y}\n      L ${x} ${y + h}\n      L ${x - w} ${y}\n      Z\n    `;\n}\n\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\nfunction triangle(x: number, y: number, width: number, height: number) {\n  const h = height / 2;\n  const w = width / 2;\n  return `\n      M ${x} ${y - h}\n      L ${x + w} ${y + h}\n      L ${x - w} ${y + h}\n      Z\n    `;\n}\n\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\nfunction rect(x: number, y: number, width: number, height: number) {\n  const GOLDEN_SECTION_RATIO = 0.618;\n  const h = height / 2;\n  const w = (width / 2) * GOLDEN_SECTION_RATIO;\n  return `\n      M ${x - w} ${y - h}\n      L ${x + w} ${y - h}\n      L ${x + w} ${y + h}\n      L ${x - w} ${y + h}\n      Z\n    `;\n}\n\nregisterShape('interval', 'liquid-fill-gauge', {\n  draw(cfg: any, container: IGroup) {\n    const cx = 0.5;\n    const cy = 0.5;\n\n    const { customInfo } = cfg;\n    const { radius: radio, shape, background } = customInfo as CustomInfo;\n    const outline: LiquidOptions['outline'] = customInfo.outline;\n    const wave: LiquidOptions['wave'] = customInfo.wave;\n    const { border, distance } = outline;\n    const { count: waveCount, length: waveLength } = wave;\n\n    // 获取最小 minX\n    const minX = reduce(\n      cfg.points as Point[],\n      (r: number, p: Point) => {\n        return Math.min(r, p.x);\n      },\n      Infinity\n    );\n\n    const center = this.parsePoint({ x: cx, y: cy });\n    const minXPoint = this.parsePoint({ x: minX, y: cy });\n    const halfWidth = center.x - minXPoint.x;\n\n    // 保证半径是 画布宽高最小值的 radius 值\n    const radius = Math.min(halfWidth, minXPoint.y * radio);\n    const waveAttrs = getFillAttrs(cfg);\n    const outlineAttrs = getLineAttrs(mix({}, cfg, outline));\n    const innerRadius = radius - border / 2;\n    const builtInShapeByName = {\n      pin,\n      circle,\n      diamond,\n      triangle,\n      rect,\n    };\n    const buildPath = typeof shape === 'function' ? shape : builtInShapeByName[shape] || builtInShapeByName['circle'];\n    const shapePath = buildPath(center.x, center.y, innerRadius * 2, innerRadius * 2);\n\n    // 1. 绘制一个波\n    const waves = container.addGroup({\n      name: 'waves',\n    });\n\n    // 3. 波对应的 clip 裁剪形状\n    const clipPath = waves.setClip({\n      type: 'path',\n      attrs: {\n        path: shapePath,\n      },\n    });\n\n    // 4. 绘制波形\n    addWaterWave(\n      center.x,\n      center.y,\n      1 - (cfg.points[1] as Point).y,\n      waveCount,\n      waveAttrs,\n      waves,\n      clipPath,\n      radius * 2,\n      waveLength\n    );\n\n    // 2. 绘制一个 distance 宽的 border\n    container.addShape('path', {\n      name: 'distance',\n      attrs: {\n        path: shapePath,\n        fill: 'transparent',\n        lineWidth: border + distance * 2,\n        stroke: background === 'transparent' ? '#fff' : background,\n      },\n    });\n\n    // 3. 绘制一个 border 宽的 border\n    container.addShape('path', {\n      name: 'wrap',\n      attrs: mix(outlineAttrs, {\n        path: shapePath,\n        fill: 'transparent',\n        lineWidth: border,\n      }),\n    });\n\n    return container;\n  },\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}