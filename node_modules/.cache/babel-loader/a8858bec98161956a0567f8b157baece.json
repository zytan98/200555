{"ast":null,"code":"import { __assign, __rest, __spreadArrays } from \"tslib\";\nimport { isFunction, get, uniq } from '@antv/util';\nimport { polygon as polygonAdaptor } from '../../adaptor/geometries';\nimport { interaction as baseInteraction, animation, theme, annotation, scale, pattern } from '../../adaptor/common';\nimport { flow, findGeometry, transformLabel, deepAssign } from '../../utils';\nimport { getAdjustAppendPadding } from '../../utils/padding';\nimport { RAW_FIELDS, SUNBURST_ANCESTOR_FIELD, SUNBURST_PATH_FIELD, SUNBURST_Y_FIELD } from './constant';\nimport { transformData } from './utils';\n/**\n * geometry 配置处理\n * @param params\n */\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var color = options.color,\n      _a = options.colorField,\n      colorField = _a === void 0 ? SUNBURST_ANCESTOR_FIELD : _a,\n      sunburstStyle = options.sunburstStyle,\n      _b = options.rawFields,\n      rawFields = _b === void 0 ? [] : _b;\n  var data = transformData(options);\n  chart.data(data); // 特殊处理下样式，如果没有设置 fillOpacity 的时候，默认根据层级进行填充透明度\n\n  var style;\n\n  if (sunburstStyle) {\n    style = function (datum) {\n      return deepAssign({}, {\n        fillOpacity: Math.pow(0.85, datum.depth)\n      }, isFunction(sunburstStyle) ? sunburstStyle(datum) : sunburstStyle);\n    };\n  } // geometry\n\n\n  polygonAdaptor(deepAssign({}, params, {\n    options: {\n      xField: 'x',\n      yField: 'y',\n      seriesField: colorField,\n      rawFields: uniq(__spreadArrays(RAW_FIELDS, rawFields)),\n      polygon: {\n        color: color,\n        style: style\n      }\n    }\n  }));\n  return params;\n}\n/**\n * axis 配置\n * @param params\n */\n\n\nexport function axis(params) {\n  var chart = params.chart;\n  chart.axis(false);\n  return params;\n}\n/**\n * legend 配置（旭日图暂时不支持图例，后续需要支持的话，得自定义数据筛选）\n * @param params\n * @returns\n */\n\nfunction legend(params) {\n  var chart = params.chart;\n  chart.legend(false);\n  return params;\n}\n/**\n * 数据标签\n * @param params\n */\n\n\nfunction label(params) {\n  var chart = params.chart,\n      options = params.options;\n  var label = options.label;\n  var geometry = findGeometry(chart, 'polygon'); // 默认不展示，undefined 也不展示\n\n  if (!label) {\n    geometry.label(false);\n  } else {\n    var _a = label.fields,\n        fields = _a === void 0 ? ['name'] : _a,\n        callback = label.callback,\n        cfg = __rest(label, [\"fields\", \"callback\"]);\n\n    geometry.label({\n      fields: fields,\n      callback: callback,\n      cfg: transformLabel(cfg)\n    });\n  }\n\n  return params;\n}\n/**\n * coord 配置\n * @param params\n */\n\n\nfunction coordinate(params) {\n  var chart = params.chart,\n      options = params.options;\n  var innerRadius = options.innerRadius,\n      radius = options.radius,\n      reflect = options.reflect;\n  var coord = chart.coordinate({\n    type: 'polar',\n    cfg: {\n      innerRadius: innerRadius,\n      radius: radius\n    }\n  });\n\n  if (reflect) {\n    coord.reflect(reflect);\n  }\n\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\n\n\nexport function meta(params) {\n  var _a;\n\n  var options = params.options;\n  var hierarchyConfig = options.hierarchyConfig,\n      meta = options.meta;\n  return flow(scale({}, (_a = {}, _a[SUNBURST_Y_FIELD] = get(meta, get(hierarchyConfig, ['field'], 'value')), _a)))(params);\n}\n/**\n * tooltip 配置\n * @param params\n */\n\nexport function tooltip(params) {\n  var chart = params.chart,\n      options = params.options;\n  var tooltip = options.tooltip;\n\n  if (tooltip === false) {\n    chart.tooltip(false);\n  } else {\n    var tooltipOptions = tooltip; // 设置了 fields，就不进行 customItems 了; 设置 formatter 时，需要搭配 fields\n\n    if (!get(tooltip, 'fields')) {\n      tooltipOptions = deepAssign({}, {\n        customItems: function (items) {\n          return items.map(function (item) {\n            var scales = get(chart.getOptions(), 'scales');\n            var pathFormatter = get(scales, [SUNBURST_PATH_FIELD, 'formatter'], function (v) {\n              return v;\n            });\n            var valueFormatter = get(scales, [SUNBURST_Y_FIELD, 'formatter'], function (v) {\n              return v;\n            });\n            return __assign(__assign({}, item), {\n              name: pathFormatter(item.data[SUNBURST_PATH_FIELD]),\n              value: valueFormatter(item.data.value)\n            });\n          });\n        }\n      }, tooltipOptions);\n    }\n\n    chart.tooltip(tooltipOptions);\n  }\n\n  return params;\n}\n\nfunction adaptorInteraction(options) {\n  var drilldown = options.drilldown,\n      _a = options.interactions,\n      interactions = _a === void 0 ? [] : _a;\n\n  if (drilldown === null || drilldown === void 0 ? void 0 : drilldown.enabled) {\n    return deepAssign({}, options, {\n      interactions: __spreadArrays(interactions, [{\n        type: 'drill-down',\n        cfg: {\n          drillDownConfig: drilldown,\n          transformData: transformData\n        }\n      }])\n    });\n  }\n\n  return options;\n}\n/**\n * 交互配置\n * @param params\n * @returns\n */\n\n\nfunction interaction(params) {\n  var chart = params.chart,\n      options = params.options;\n  var drilldown = options.drilldown;\n  baseInteraction({\n    chart: chart,\n    options: adaptorInteraction(options)\n  }); // 适应下钻交互面包屑\n\n  if (drilldown === null || drilldown === void 0 ? void 0 : drilldown.enabled) {\n    // 为面包屑留出 25px 的空间\n    chart.appendPadding = getAdjustAppendPadding(chart.appendPadding, get(drilldown, ['breadCrumb', 'position']));\n  }\n\n  return params;\n}\n/**\n * 旭日图适配器\n * @param chart\n * @param options\n */\n\n\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(theme, pattern('sunburstStyle'), geometry, axis, meta, legend, coordinate, tooltip, label, interaction, animation, annotation())(params);\n}","map":{"version":3,"sources":["../../../src/plots/sunburst/adaptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { isFunction, get, uniq } from '@antv/util';\nimport { Types } from '@antv/g2';\nimport { Params } from '../../core/adaptor';\nimport { polygon as polygonAdaptor } from '../../adaptor/geometries';\nimport { interaction as baseInteraction, animation, theme, annotation, scale, pattern } from '../../adaptor/common';\nimport { flow, findGeometry, transformLabel, deepAssign } from '../../utils';\nimport { getAdjustAppendPadding } from '../../utils/padding';\nimport { Datum } from '../../types';\nimport { RAW_FIELDS, SUNBURST_ANCESTOR_FIELD, SUNBURST_PATH_FIELD, SUNBURST_Y_FIELD } from './constant';\nimport { transformData } from './utils';\nimport { SunburstOptions } from './types';\n\n/**\n * geometry 配置处理\n * @param params\n */\nfunction geometry(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { chart, options } = params;\n  const { color, colorField = SUNBURST_ANCESTOR_FIELD, sunburstStyle, rawFields = [] } = options;\n  const data = transformData(options);\n  chart.data(data);\n\n  // 特殊处理下样式，如果没有设置 fillOpacity 的时候，默认根据层级进行填充透明度\n  let style;\n  if (sunburstStyle) {\n    style = (datum: Datum) => {\n      return deepAssign(\n        {},\n        {\n          fillOpacity: 0.85 ** datum.depth,\n        },\n        isFunction(sunburstStyle) ? sunburstStyle(datum) : sunburstStyle\n      );\n    };\n  }\n\n  // geometry\n  polygonAdaptor(\n    deepAssign({}, params, {\n      options: {\n        xField: 'x',\n        yField: 'y',\n        seriesField: colorField,\n        rawFields: uniq([...RAW_FIELDS, ...rawFields]),\n        polygon: {\n          color,\n          style,\n        },\n      },\n    })\n  );\n\n  return params;\n}\n\n/**\n * axis 配置\n * @param params\n */\nexport function axis(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { chart } = params;\n  chart.axis(false);\n  return params;\n}\n\n/**\n * legend 配置（旭日图暂时不支持图例，后续需要支持的话，得自定义数据筛选）\n * @param params\n * @returns\n */\nfunction legend(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { chart } = params;\n\n  chart.legend(false);\n  return params;\n}\n\n/**\n * 数据标签\n * @param params\n */\nfunction label(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { chart, options } = params;\n  const { label } = options;\n\n  const geometry = findGeometry(chart, 'polygon');\n\n  // 默认不展示，undefined 也不展示\n  if (!label) {\n    geometry.label(false);\n  } else {\n    const { fields = ['name'], callback, ...cfg } = label;\n    geometry.label({\n      fields,\n      callback,\n      cfg: transformLabel(cfg),\n    });\n  }\n\n  return params;\n}\n\n/**\n * coord 配置\n * @param params\n */\nfunction coordinate(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { chart, options } = params;\n  const { innerRadius, radius, reflect } = options;\n\n  const coord = chart.coordinate({\n    type: 'polar',\n    cfg: {\n      innerRadius,\n      radius,\n    },\n  });\n  if (reflect) {\n    coord.reflect(reflect);\n  }\n\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { options } = params;\n  const { hierarchyConfig, meta } = options;\n\n  return flow(\n    scale(\n      {},\n      {\n        [SUNBURST_Y_FIELD]: get(meta, get(hierarchyConfig, ['field'], 'value')),\n      }\n    )\n  )(params);\n}\n\n/**\n * tooltip 配置\n * @param params\n */\nexport function tooltip(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { chart, options } = params;\n  const { tooltip } = options;\n\n  if (tooltip === false) {\n    chart.tooltip(false);\n  } else {\n    let tooltipOptions = tooltip;\n    // 设置了 fields，就不进行 customItems 了; 设置 formatter 时，需要搭配 fields\n    if (!get(tooltip, 'fields')) {\n      tooltipOptions = deepAssign(\n        {},\n        {\n          customItems: (items: Types.TooltipItem[]) =>\n            items.map((item) => {\n              const scales = get(chart.getOptions(), 'scales');\n              const pathFormatter = get(scales, [SUNBURST_PATH_FIELD, 'formatter'], (v) => v);\n              const valueFormatter = get(scales, [SUNBURST_Y_FIELD, 'formatter'], (v) => v);\n              return {\n                ...item,\n                name: pathFormatter(item.data[SUNBURST_PATH_FIELD]),\n                value: valueFormatter(item.data.value),\n              };\n            }),\n        },\n        tooltipOptions\n      );\n    }\n    chart.tooltip(tooltipOptions);\n  }\n\n  return params;\n}\n\nfunction adaptorInteraction(options: SunburstOptions): SunburstOptions {\n  const { drilldown, interactions = [] } = options;\n\n  if (drilldown?.enabled) {\n    return deepAssign({}, options, {\n      interactions: [\n        ...interactions,\n        {\n          type: 'drill-down',\n          cfg: { drillDownConfig: drilldown, transformData },\n        },\n      ],\n    });\n  }\n  return options;\n}\n\n/**\n * 交互配置\n * @param params\n * @returns\n */\nfunction interaction(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { chart, options } = params;\n\n  const { drilldown } = options;\n\n  baseInteraction({\n    chart,\n    options: adaptorInteraction(options),\n  });\n\n  // 适应下钻交互面包屑\n  if (drilldown?.enabled) {\n    // 为面包屑留出 25px 的空间\n    chart.appendPadding = getAdjustAppendPadding(chart.appendPadding, get(drilldown, ['breadCrumb', 'position']));\n  }\n\n  return params;\n}\n\n/**\n * 旭日图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<SunburstOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(\n    theme,\n    pattern('sunburstStyle'),\n    geometry,\n    axis,\n    meta,\n    legend,\n    coordinate,\n    tooltip,\n    label,\n    interaction,\n    animation,\n    annotation()\n  )(params);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}