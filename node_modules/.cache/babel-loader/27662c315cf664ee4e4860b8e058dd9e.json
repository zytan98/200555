{"ast":null,"code":"import React, { useEffect } from 'react';\nimport G6 from '@antv/g6';\nimport ChartLoading from '../../util/createLoading';\nimport { ErrorBoundary } from '../../base';\nimport useGraph from '../hooks/useGraph';\nimport { registerCardNode } from '../graphs/customItems';\nimport { defaultNodeSize, defaultLabelCfg, defaultNodeAnchorPoints, defaultStateStyles, defaultEdgeStyle } from './constants';\nimport { getGraphSize, processMinimap, getGraphId, renderGraph, bindEvents, useProps } from './utils';\nimport { registerCustomItems } from './customItems';\nregisterCustomItems();\nregisterCardNode();\nvar defaultNodeStyle = {\n  stroke: '#40a9ff'\n};\nvar defaultLayout = {\n  type: 'dagre',\n  rankdir: 'TB',\n  nodesepFunc: function () {\n    return 0;\n  },\n  ranksepFunc: function () {\n    return 0;\n  },\n  controlPoints: true\n};\nvar defaultProps = {\n  nodeType: 'modelRect',\n  edgeType: 'polyline',\n  behaviors: ['zoom-canvas', 'drag-canvas'],\n  nodeSize: defaultNodeSize,\n  nodeLabelCfg: defaultLabelCfg,\n  edgeLabelCfg: defaultLabelCfg,\n  nodeAnchorPoints: defaultNodeAnchorPoints,\n  layout: defaultLayout,\n  nodeStyle: defaultNodeStyle,\n  edgeStyle: defaultEdgeStyle,\n  nodeStateStyles: defaultStateStyles,\n  edgeStateStyles: defaultStateStyles,\n  autoFit: true\n};\nvar graphs = {};\n\nvar DagreGraph = function (props) {\n  var uProps = useProps(props, defaultProps);\n  var data = uProps.data,\n      className = uProps.className,\n      style = uProps.style,\n      width = uProps.width,\n      height = uProps.height,\n      _a = uProps.nodeType,\n      nodeType = _a === void 0 ? 'modelRect' : _a,\n      _b = uProps.edgeType,\n      edgeType = _b === void 0 ? 'polyline' : _b,\n      _c = uProps.behaviors,\n      behaviors = _c === void 0 ? ['zoom-canvas', 'drag-canvas'] : _c,\n      _d = uProps.nodeSize,\n      nodeSize = _d === void 0 ? defaultNodeSize : _d,\n      _e = uProps.nodeLabelCfg,\n      nodeLabelCfg = _e === void 0 ? defaultLabelCfg : _e,\n      _f = uProps.edgeLabelCfg,\n      edgeLabelCfg = _f === void 0 ? defaultLabelCfg : _f,\n      _g = uProps.nodeAnchorPoints,\n      nodeAnchorPoints = _g === void 0 ? defaultNodeAnchorPoints : _g,\n      _h = uProps.layout,\n      layout = _h === void 0 ? defaultLayout : _h,\n      minimapCfg = uProps.minimapCfg,\n      _j = uProps.nodeStyle,\n      nodeStyle = _j === void 0 ? defaultNodeStyle : _j,\n      _k = uProps.edgeStyle,\n      edgeStyle = _k === void 0 ? defaultEdgeStyle : _k,\n      _l = uProps.nodeStateStyles,\n      nodeStateStyles = _l === void 0 ? defaultStateStyles : _l,\n      _m = uProps.edgeStateStyles,\n      edgeStateStyles = _m === void 0 ? defaultStateStyles : _m,\n      _o = uProps.autoFit,\n      autoFit = _o === void 0 ? true : _o,\n      graphRef = uProps.graphRef,\n      onReady = uProps.onReady,\n      loading = uProps.loading,\n      loadingTemplate = uProps.loadingTemplate,\n      errorTemplate = uProps.errorTemplate;\n  var container = React.useRef(null);\n  var graph = React.useRef(null);\n  var graphId = getGraphId(graph);\n  useGraph(graphs[graphId], uProps, container);\n  useEffect(function () {\n    var graphSize = getGraphSize(width, height, container);\n    var graph = graphs[graphId];\n\n    if (!graph) {\n      graph = new G6.Graph({\n        container: container.current,\n        width: graphSize[0],\n        height: graphSize[1],\n        modes: {\n          default: behaviors\n        },\n        defaultNode: {\n          type: nodeType,\n          size: nodeSize,\n          style: nodeStyle,\n          anchorPoints: nodeAnchorPoints,\n          labelCfg: nodeLabelCfg\n        },\n        defaultEdge: {\n          type: edgeType,\n          style: edgeStyle,\n          labelCfg: edgeLabelCfg\n        },\n        nodeStateStyles: nodeStateStyles,\n        edgeStateStyles: edgeStateStyles,\n        layout: layout,\n        fitView: autoFit\n      });\n      graphs[graphId] = graph;\n    }\n\n    if (graphRef) {\n      graphRef.current = graph;\n    }\n\n    processMinimap(minimapCfg, graph);\n    renderGraph(graph, data);\n\n    if (onReady) {\n      onReady(graph);\n    }\n\n    bindEvents(graph, props);\n    return function () {\n      if (graphs[graphId]) {\n        graphs[graphId].destroy();\n        delete graphs[graphId];\n      }\n    };\n  }, []);\n  return React.createElement(ErrorBoundary, {\n    errorTemplate: errorTemplate\n  }, loading && React.createElement(ChartLoading, {\n    loadingTemplate: loadingTemplate\n  }), React.createElement(\"div\", {\n    className: className,\n    style: style,\n    ref: container\n  }));\n};\n\nexport default DagreGraph;","map":{"version":3,"sources":["C:/Users/Home/Desktop/cs-2005/node_modules/@ant-design/charts/es/obsolescent/graph/dagre.js"],"names":["React","useEffect","G6","ChartLoading","ErrorBoundary","useGraph","registerCardNode","defaultNodeSize","defaultLabelCfg","defaultNodeAnchorPoints","defaultStateStyles","defaultEdgeStyle","getGraphSize","processMinimap","getGraphId","renderGraph","bindEvents","useProps","registerCustomItems","defaultNodeStyle","stroke","defaultLayout","type","rankdir","nodesepFunc","ranksepFunc","controlPoints","defaultProps","nodeType","edgeType","behaviors","nodeSize","nodeLabelCfg","edgeLabelCfg","nodeAnchorPoints","layout","nodeStyle","edgeStyle","nodeStateStyles","edgeStateStyles","autoFit","graphs","DagreGraph","props","uProps","data","className","style","width","height","_a","_b","_c","_d","_e","_f","_g","_h","minimapCfg","_j","_k","_l","_m","_o","graphRef","onReady","loading","loadingTemplate","errorTemplate","container","useRef","graph","graphId","graphSize","Graph","current","modes","default","defaultNode","size","anchorPoints","labelCfg","defaultEdge","fitView","destroy","createElement","ref"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport G6 from '@antv/g6';\nimport ChartLoading from '../../util/createLoading';\nimport { ErrorBoundary } from '../../base';\nimport useGraph from '../hooks/useGraph';\nimport { registerCardNode } from '../graphs/customItems';\nimport { defaultNodeSize, defaultLabelCfg, defaultNodeAnchorPoints, defaultStateStyles, defaultEdgeStyle, } from './constants';\nimport { getGraphSize, processMinimap, getGraphId, renderGraph, bindEvents, useProps, } from './utils';\nimport { registerCustomItems } from './customItems';\nregisterCustomItems();\nregisterCardNode();\nvar defaultNodeStyle = {\n    stroke: '#40a9ff',\n};\nvar defaultLayout = {\n    type: 'dagre',\n    rankdir: 'TB',\n    nodesepFunc: function () { return 0; },\n    ranksepFunc: function () { return 0; },\n    controlPoints: true,\n};\nvar defaultProps = {\n    nodeType: 'modelRect',\n    edgeType: 'polyline',\n    behaviors: ['zoom-canvas', 'drag-canvas'],\n    nodeSize: defaultNodeSize,\n    nodeLabelCfg: defaultLabelCfg,\n    edgeLabelCfg: defaultLabelCfg,\n    nodeAnchorPoints: defaultNodeAnchorPoints,\n    layout: defaultLayout,\n    nodeStyle: defaultNodeStyle,\n    edgeStyle: defaultEdgeStyle,\n    nodeStateStyles: defaultStateStyles,\n    edgeStateStyles: defaultStateStyles,\n    autoFit: true,\n};\nvar graphs = {};\nvar DagreGraph = function (props) {\n    var uProps = useProps(props, defaultProps);\n    var data = uProps.data, className = uProps.className, style = uProps.style, width = uProps.width, height = uProps.height, _a = uProps.nodeType, nodeType = _a === void 0 ? 'modelRect' : _a, _b = uProps.edgeType, edgeType = _b === void 0 ? 'polyline' : _b, _c = uProps.behaviors, behaviors = _c === void 0 ? ['zoom-canvas', 'drag-canvas'] : _c, _d = uProps.nodeSize, nodeSize = _d === void 0 ? defaultNodeSize : _d, _e = uProps.nodeLabelCfg, nodeLabelCfg = _e === void 0 ? defaultLabelCfg : _e, _f = uProps.edgeLabelCfg, edgeLabelCfg = _f === void 0 ? defaultLabelCfg : _f, _g = uProps.nodeAnchorPoints, nodeAnchorPoints = _g === void 0 ? defaultNodeAnchorPoints : _g, _h = uProps.layout, layout = _h === void 0 ? defaultLayout : _h, minimapCfg = uProps.minimapCfg, _j = uProps.nodeStyle, nodeStyle = _j === void 0 ? defaultNodeStyle : _j, _k = uProps.edgeStyle, edgeStyle = _k === void 0 ? defaultEdgeStyle : _k, _l = uProps.nodeStateStyles, nodeStateStyles = _l === void 0 ? defaultStateStyles : _l, _m = uProps.edgeStateStyles, edgeStateStyles = _m === void 0 ? defaultStateStyles : _m, _o = uProps.autoFit, autoFit = _o === void 0 ? true : _o, graphRef = uProps.graphRef, onReady = uProps.onReady, loading = uProps.loading, loadingTemplate = uProps.loadingTemplate, errorTemplate = uProps.errorTemplate;\n    var container = React.useRef(null);\n    var graph = React.useRef(null);\n    var graphId = getGraphId(graph);\n    useGraph(graphs[graphId], uProps, container);\n    useEffect(function () {\n        var graphSize = getGraphSize(width, height, container);\n        var graph = graphs[graphId];\n        if (!graph) {\n            graph = new G6.Graph({\n                container: container.current,\n                width: graphSize[0],\n                height: graphSize[1],\n                modes: {\n                    default: behaviors,\n                },\n                defaultNode: {\n                    type: nodeType,\n                    size: nodeSize,\n                    style: nodeStyle,\n                    anchorPoints: nodeAnchorPoints,\n                    labelCfg: nodeLabelCfg,\n                },\n                defaultEdge: {\n                    type: edgeType,\n                    style: edgeStyle,\n                    labelCfg: edgeLabelCfg,\n                },\n                nodeStateStyles: nodeStateStyles,\n                edgeStateStyles: edgeStateStyles,\n                layout: layout,\n                fitView: autoFit,\n            });\n            graphs[graphId] = graph;\n        }\n        if (graphRef) {\n            graphRef.current = graph;\n        }\n        processMinimap(minimapCfg, graph);\n        renderGraph(graph, data);\n        if (onReady) {\n            onReady(graph);\n        }\n        bindEvents(graph, props);\n        return function () {\n            if (graphs[graphId]) {\n                graphs[graphId].destroy();\n                delete graphs[graphId];\n            }\n        };\n    }, []);\n    return (React.createElement(ErrorBoundary, { errorTemplate: errorTemplate },\n        loading && React.createElement(ChartLoading, { loadingTemplate: loadingTemplate }),\n        React.createElement(\"div\", { className: className, style: style, ref: container })));\n};\nexport default DagreGraph;\n"]},"metadata":{},"sourceType":"module"}