{"ast":null,"code":"import { __spreadArrays } from \"tslib\";\nimport { get } from '@antv/util';\nimport { polygon as basePolygon } from '../../adaptor/geometries/polygon';\nimport { interaction as commonInteraction, animation, theme, legend, annotation, tooltip } from '../../adaptor/common';\nimport { pattern } from '../../adaptor/pattern';\nimport { flow, deepAssign } from '../../utils';\nimport { getAdjustAppendPadding } from '../../utils/padding';\nimport { transformData, findInteraction, enableDrillInteraction } from './utils';\n/**\n * Ëé∑ÂèñÈªòËÆ§ option\n * @param params\n */\n\nfunction defaultOptions(params) {\n  var options = params.options;\n  var colorField = options.colorField;\n  return deepAssign({\n    options: {\n      rawFields: ['value'],\n      tooltip: {\n        fields: ['name', 'value', colorField, 'path'],\n        formatter: function (data) {\n          return {\n            name: data.name,\n            value: data.value\n          };\n        }\n      }\n    }\n  }, params);\n}\n/**\n * Â≠óÊÆµ\n * @param params\n */\n\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var color = options.color,\n      colorField = options.colorField,\n      rectStyle = options.rectStyle,\n      hierarchyConfig = options.hierarchyConfig,\n      rawFields = options.rawFields;\n  var data = transformData({\n    data: options.data,\n    colorField: options.colorField,\n    enableDrillDown: enableDrillInteraction(options),\n    hierarchyConfig: hierarchyConfig\n  });\n  chart.data(data); // geometry\n\n  basePolygon(deepAssign({}, params, {\n    options: {\n      xField: 'x',\n      yField: 'y',\n      seriesField: colorField,\n      rawFields: rawFields,\n      polygon: {\n        color: color,\n        style: rectStyle\n      }\n    }\n  })); // ÂÅö‰∏Ä‰∏™ÂèçËΩ¨ÔºåËøôÊ†∑ÈÖçÂêàÊéíÂ∫èÔºåÂèØ‰ª•Â∞ÜÊúÄÂ§ßÂÄºÊîæÂà∞Â∑¶‰∏äËßíÔºåÊúÄÂ∞èÂÄºÊîæÂà∞Âè≥‰∏ãËßí\n\n  chart.coordinate().reflect('y');\n  return params;\n}\n/**\n * ÂùêÊ†áËΩ¥\n * @param params\n */\n\n\nfunction axis(params) {\n  var chart = params.chart;\n  chart.axis(false);\n  return params;\n}\n\nfunction adaptorInteraction(options) {\n  var drilldown = options.drilldown,\n      _a = options.interactions,\n      interactions = _a === void 0 ? [] : _a;\n  var enableDrillDown = enableDrillInteraction(options);\n\n  if (enableDrillDown) {\n    return deepAssign({}, options, {\n      interactions: __spreadArrays(interactions, [{\n        type: 'drill-down',\n        // üöì Ëøô‰∏çÊòØ‰∏Ä‰∏™ËßÑËåÉÁöÑ APIÔºåÂêéÁª≠‰ºöÂèòÊõ¥„ÄÇÊÖéÈáçÂèÇËÄÉ\n        cfg: {\n          drillDownConfig: drilldown,\n          transformData: transformData\n        }\n      }])\n    });\n  }\n\n  return options;\n}\n/**\n * Interaction ÈÖçÁΩÆ\n * @param params\n */\n\n\nexport function interaction(params) {\n  var chart = params.chart,\n      options = params.options;\n  var interactions = options.interactions,\n      drilldown = options.drilldown;\n  commonInteraction({\n    chart: chart,\n    options: adaptorInteraction(options)\n  }); // ÈÄÇÈÖç view-zoom\n\n  var viewZoomInteraction = findInteraction(interactions, 'view-zoom');\n\n  if (viewZoomInteraction) {\n    // ÂºÄÂêØÁº©Êîæ interaction ÂêéÔºåÂàôÈòªÊ≠¢ÈªòËÆ§ÊªöÂä®‰∫ã‰ª∂ÔºåÈÅøÂÖçÊï¥‰∏™Á™óÂè£ÁöÑÊªöÂä®\n    if (viewZoomInteraction.enable !== false) {\n      chart.getCanvas().on('mousewheel', function (ev) {\n        ev.preventDefault();\n      });\n    } else {\n      // ÊâãÂä®ÂÖ≥Èó≠ÂêéÔºåÊ∏ÖÈô§„ÄÇ‰ªÖÂØπÂ£∞Êòé viewZoomInteraction ÁöÑÊ∏ÖÈô§„ÄÇ\n      chart.getCanvas().off('mousewheel');\n    }\n  } // ÈÄÇÂ∫î‰∏ãÈíª‰∫§‰∫íÈù¢ÂåÖÂ±ë\n\n\n  var enableDrillDown = enableDrillInteraction(options);\n\n  if (enableDrillDown) {\n    // ‰∏∫Èù¢ÂåÖÂ±ëÂú®Â∫ïÈÉ®ÁïôÂá∫ 25px ÁöÑÁ©∫Èó¥\n    chart.appendPadding = getAdjustAppendPadding(chart.appendPadding, get(drilldown, ['breadCrumb', 'position']));\n  }\n\n  return params;\n}\n/**\n * Áü©ÂΩ¢Ê†ëÂõæ\n * @param chart\n * @param options\n */\n\nexport function adaptor(params) {\n  return flow(defaultOptions, theme, pattern('rectStyle'), geometry, axis, legend, tooltip, interaction, animation, annotation())(params);\n}","map":{"version":3,"sources":["../../../src/plots/treemap/adaptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { get } from '@antv/util';\nimport { polygon as basePolygon } from '../../adaptor/geometries/polygon';\nimport { Params } from '../../core/adaptor';\nimport { interaction as commonInteraction, animation, theme, legend, annotation, tooltip } from '../../adaptor/common';\nimport { pattern } from '../../adaptor/pattern';\nimport { flow, deepAssign } from '../../utils';\nimport { getAdjustAppendPadding } from '../../utils/padding';\nimport { transformData, findInteraction, enableDrillInteraction } from './utils';\nimport { TreemapOptions } from './types';\n\n/**\n * Ëé∑ÂèñÈªòËÆ§ option\n * @param params\n */\nfunction defaultOptions(params: Params<TreemapOptions>): Params<TreemapOptions> {\n  const { options } = params;\n  const { colorField } = options;\n\n  return deepAssign(\n    {\n      options: {\n        rawFields: ['value'],\n        tooltip: {\n          fields: ['name', 'value', colorField, 'path'],\n          formatter: (data) => {\n            return {\n              name: data.name,\n              value: data.value,\n            };\n          },\n        },\n      },\n    },\n    params\n  );\n}\n\n/**\n * Â≠óÊÆµ\n * @param params\n */\nfunction geometry(params: Params<TreemapOptions>): Params<TreemapOptions> {\n  const { chart, options } = params;\n  const { color, colorField, rectStyle, hierarchyConfig, rawFields } = options;\n\n  const data = transformData({\n    data: options.data,\n    colorField: options.colorField,\n    enableDrillDown: enableDrillInteraction(options),\n    hierarchyConfig,\n  });\n\n  chart.data(data);\n\n  // geometry\n  basePolygon(\n    deepAssign({}, params, {\n      options: {\n        xField: 'x',\n        yField: 'y',\n        seriesField: colorField,\n        rawFields: rawFields,\n        polygon: {\n          color,\n          style: rectStyle,\n        },\n      },\n    })\n  );\n\n  // ÂÅö‰∏Ä‰∏™ÂèçËΩ¨ÔºåËøôÊ†∑ÈÖçÂêàÊéíÂ∫èÔºåÂèØ‰ª•Â∞ÜÊúÄÂ§ßÂÄºÊîæÂà∞Â∑¶‰∏äËßíÔºåÊúÄÂ∞èÂÄºÊîæÂà∞Âè≥‰∏ãËßí\n  chart.coordinate().reflect('y');\n\n  return params;\n}\n\n/**\n * ÂùêÊ†áËΩ¥\n * @param params\n */\nfunction axis(params: Params<TreemapOptions>): Params<TreemapOptions> {\n  const { chart } = params;\n  chart.axis(false);\n  return params;\n}\n\nfunction adaptorInteraction(options: TreemapOptions): TreemapOptions {\n  const { drilldown, interactions = [] } = options;\n\n  const enableDrillDown = enableDrillInteraction(options);\n  if (enableDrillDown) {\n    return deepAssign({}, options, {\n      interactions: [\n        ...interactions,\n        {\n          type: 'drill-down',\n          // üöì Ëøô‰∏çÊòØ‰∏Ä‰∏™ËßÑËåÉÁöÑ APIÔºåÂêéÁª≠‰ºöÂèòÊõ¥„ÄÇÊÖéÈáçÂèÇËÄÉ\n          cfg: { drillDownConfig: drilldown, transformData },\n        },\n      ],\n    });\n  }\n  return options;\n}\n\n/**\n * Interaction ÈÖçÁΩÆ\n * @param params\n */\nexport function interaction(params: Params<TreemapOptions>): Params<TreemapOptions> {\n  const { chart, options } = params;\n  const { interactions, drilldown } = options;\n\n  commonInteraction({\n    chart,\n    options: adaptorInteraction(options),\n  });\n\n  // ÈÄÇÈÖç view-zoom\n  const viewZoomInteraction = findInteraction(interactions, 'view-zoom');\n\n  if (viewZoomInteraction) {\n    // ÂºÄÂêØÁº©Êîæ interaction ÂêéÔºåÂàôÈòªÊ≠¢ÈªòËÆ§ÊªöÂä®‰∫ã‰ª∂ÔºåÈÅøÂÖçÊï¥‰∏™Á™óÂè£ÁöÑÊªöÂä®\n    if (viewZoomInteraction.enable !== false) {\n      chart.getCanvas().on('mousewheel', (ev) => {\n        ev.preventDefault();\n      });\n    } else {\n      // ÊâãÂä®ÂÖ≥Èó≠ÂêéÔºåÊ∏ÖÈô§„ÄÇ‰ªÖÂØπÂ£∞Êòé viewZoomInteraction ÁöÑÊ∏ÖÈô§„ÄÇ\n      chart.getCanvas().off('mousewheel');\n    }\n  }\n\n  // ÈÄÇÂ∫î‰∏ãÈíª‰∫§‰∫íÈù¢ÂåÖÂ±ë\n  const enableDrillDown = enableDrillInteraction(options);\n  if (enableDrillDown) {\n    // ‰∏∫Èù¢ÂåÖÂ±ëÂú®Â∫ïÈÉ®ÁïôÂá∫ 25px ÁöÑÁ©∫Èó¥\n    chart.appendPadding = getAdjustAppendPadding(chart.appendPadding, get(drilldown, ['breadCrumb', 'position']));\n  }\n  return params;\n}\n\n/**\n * Áü©ÂΩ¢Ê†ëÂõæ\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<TreemapOptions>) {\n  return flow(\n    defaultOptions,\n    theme,\n    pattern('rectStyle'),\n    geometry,\n    axis,\n    legend,\n    tooltip,\n    interaction,\n    animation,\n    annotation()\n  )(params);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}