{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { get } from '@antv/util';\nimport { interaction, animation, theme, state, scale, annotation } from '../../adaptor/common';\nimport { interval } from '../../adaptor/geometries';\nimport { getLocale } from '../../core/locale';\nimport { findGeometry, flow, transformLabel, deepAssign } from '../../utils';\nimport { Y_FIELD, ABSOLUTE_FIELD, DIFF_FIELD, IS_TOTAL } from './constant';\nimport { transformData } from './utils';\nimport './shape';\n/**\n *  处理默认配置项\n * @param params\n * @returns\n */\n\nfunction defaultOptions(params) {\n  var _a = params.options,\n      locale = _a.locale,\n      total = _a.total;\n  var localeTotalLabel = getLocale(locale).get(['waterfall', 'total']);\n\n  if (total && typeof total.label !== 'string' && localeTotalLabel) {\n    // @ts-ignore\n    params.options.total.label = localeTotalLabel;\n  }\n\n  return params;\n}\n/**\n * 字段\n * @param params\n */\n\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var data = options.data,\n      xField = options.xField,\n      yField = options.yField,\n      total = options.total,\n      leaderLine = options.leaderLine,\n      columnWidthRatio = options.columnWidthRatio,\n      waterfallStyle = options.waterfallStyle,\n      risingFill = options.risingFill,\n      fallingFill = options.fallingFill,\n      color = options.color; // 数据处理\n\n  chart.data(transformData(data, xField, yField, total)); // 瀑布图自带的 colorMapping\n\n  var colorMapping = color || function (datum) {\n    if (get(datum, [IS_TOTAL])) {\n      return get(total, ['style', 'fill'], '');\n    }\n\n    return get(datum, [Y_FIELD, 1]) - get(datum, [Y_FIELD, 0]) > 0 ? risingFill : fallingFill;\n  };\n\n  var p = deepAssign({}, params, {\n    options: {\n      xField: xField,\n      yField: Y_FIELD,\n      seriesField: xField,\n      rawFields: [yField, DIFF_FIELD, IS_TOTAL, Y_FIELD],\n      widthRatio: columnWidthRatio,\n      interval: {\n        style: waterfallStyle,\n        shape: 'waterfall',\n        color: colorMapping\n      }\n    }\n  });\n  var ext = interval(p).ext;\n  var geometry = ext.geometry; // 将 waterfall leaderLineCfg 传入到自定义 shape 中\n\n  geometry.customInfo({\n    leaderLine: leaderLine\n  });\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\n\n\nfunction meta(params) {\n  var _a, _b;\n\n  var options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField,\n      meta = options.meta;\n  var Y_FIELD_META = deepAssign({}, {\n    alias: yField\n  }, get(meta, yField));\n  return flow(scale((_a = {}, _a[xField] = xAxis, _a[yField] = yAxis, _a[Y_FIELD] = yAxis, _a), deepAssign({}, meta, (_b = {}, _b[Y_FIELD] = Y_FIELD_META, _b[DIFF_FIELD] = Y_FIELD_META, _b[ABSOLUTE_FIELD] = Y_FIELD_META, _b))))(params);\n}\n/**\n * axis 配置\n * @param params\n */\n\n\nfunction axis(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField; // 为 false 则是不显示轴\n\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(yField, false);\n    chart.axis(Y_FIELD, false);\n  } else {\n    chart.axis(yField, yAxis);\n    chart.axis(Y_FIELD, yAxis);\n  }\n\n  return params;\n}\n/**\n * legend 配置 todo 添加 hover 交互\n * @param params\n */\n\n\nfunction legend(params) {\n  var chart = params.chart,\n      options = params.options;\n  var legend = options.legend,\n      total = options.total,\n      risingFill = options.risingFill,\n      fallingFill = options.fallingFill,\n      locale = options.locale;\n  var i18n = getLocale(locale);\n\n  if (legend === false) {\n    chart.legend(false);\n  } else {\n    var items = [{\n      name: i18n.get(['general', 'increase']),\n      value: 'increase',\n      marker: {\n        symbol: 'square',\n        style: {\n          r: 5,\n          fill: risingFill\n        }\n      }\n    }, {\n      name: i18n.get(['general', 'decrease']),\n      value: 'decrease',\n      marker: {\n        symbol: 'square',\n        style: {\n          r: 5,\n          fill: fallingFill\n        }\n      }\n    }];\n\n    if (total) {\n      items.push({\n        name: total.label || '',\n        value: 'total',\n        marker: {\n          symbol: 'square',\n          style: deepAssign({}, {\n            r: 5\n          }, get(total, 'style'))\n        }\n      });\n    }\n\n    chart.legend(deepAssign({}, {\n      custom: true,\n      position: 'top',\n      items: items\n    }, legend));\n    chart.removeInteraction('legend-filter');\n  }\n\n  return params;\n}\n/**\n * 数据标签\n * @param params\n */\n\n\nfunction label(params) {\n  var chart = params.chart,\n      options = params.options;\n  var label = options.label,\n      labelMode = options.labelMode,\n      xField = options.xField;\n  var geometry = findGeometry(chart, 'interval');\n\n  if (!label) {\n    geometry.label(false);\n  } else {\n    var callback = label.callback,\n        cfg = __rest(label, [\"callback\"]);\n\n    geometry.label({\n      fields: labelMode === 'absolute' ? [ABSOLUTE_FIELD, xField] : [DIFF_FIELD, xField],\n      callback: callback,\n      cfg: transformLabel(cfg)\n    });\n  }\n\n  return params;\n}\n/**\n * tooltip 配置\n * @param params\n */\n\n\nexport function tooltip(params) {\n  var chart = params.chart,\n      options = params.options;\n  var tooltip = options.tooltip,\n      xField = options.xField,\n      yField = options.yField;\n\n  if (tooltip !== false) {\n    chart.tooltip(__assign({\n      showCrosshairs: false,\n      showMarkers: false,\n      shared: true,\n      // tooltip 默认展示 y 字段值\n      fields: [yField]\n    }, tooltip)); // 瀑布图默认以 yField 作为 tooltip 内容\n\n    var geometry_1 = chart.geometries[0];\n    (tooltip === null || tooltip === void 0 ? void 0 : tooltip.formatter) ? geometry_1.tooltip(xField + \"*\" + yField, tooltip.formatter) : geometry_1.tooltip(yField);\n  } else {\n    chart.tooltip(false);\n  }\n\n  return params;\n}\n/**\n * 瀑布图适配器\n * @param params\n */\n\nexport function adaptor(params) {\n  return flow(defaultOptions, theme, geometry, meta, axis, legend, tooltip, label, state, interaction, animation, annotation())(params);\n}","map":{"version":3,"sources":["../../../src/plots/waterfall/adaptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { Geometry } from '@antv/g2';\nimport { get } from '@antv/util';\nimport { Datum } from '../../types';\nimport { Params } from '../../core/adaptor';\nimport { interaction, animation, theme, state, scale, annotation } from '../../adaptor/common';\nimport { interval } from '../../adaptor/geometries';\nimport { getLocale } from '../../core/locale';\nimport { findGeometry, flow, transformLabel, deepAssign } from '../../utils';\nimport { Y_FIELD, ABSOLUTE_FIELD, DIFF_FIELD, IS_TOTAL } from './constant';\nimport { WaterfallOptions } from './types';\nimport { transformData } from './utils';\nimport './shape';\n\n/**\n *  处理默认配置项\n * @param params\n * @returns\n */\nfunction defaultOptions(params: Params<WaterfallOptions>): Params<WaterfallOptions> {\n  const { locale, total } = params.options;\n\n  const localeTotalLabel = getLocale(locale).get(['waterfall', 'total']);\n\n  if (total && typeof total.label !== 'string' && localeTotalLabel) {\n    // @ts-ignore\n    params.options.total.label = localeTotalLabel;\n  }\n\n  return params;\n}\n\n/**\n * 字段\n * @param params\n */\nfunction geometry(params: Params<WaterfallOptions>): Params<WaterfallOptions> {\n  const { chart, options } = params;\n  const { data, xField, yField, total, leaderLine, columnWidthRatio, waterfallStyle, risingFill, fallingFill, color } =\n    options;\n\n  // 数据处理\n  chart.data(transformData(data, xField, yField, total));\n\n  // 瀑布图自带的 colorMapping\n  const colorMapping =\n    color ||\n    function (datum: Datum) {\n      if (get(datum, [IS_TOTAL])) {\n        return get(total, ['style', 'fill'], '');\n      }\n      return get(datum, [Y_FIELD, 1]) - get(datum, [Y_FIELD, 0]) > 0 ? risingFill : fallingFill;\n    };\n\n  const p = deepAssign({}, params, {\n    options: {\n      xField: xField,\n      yField: Y_FIELD,\n      seriesField: xField,\n      rawFields: [yField, DIFF_FIELD, IS_TOTAL, Y_FIELD],\n      widthRatio: columnWidthRatio,\n      interval: {\n        style: waterfallStyle,\n        shape: 'waterfall',\n        color: colorMapping,\n      },\n    },\n  });\n  const { ext } = interval(p);\n  const geometry = ext.geometry as Geometry;\n\n  // 将 waterfall leaderLineCfg 传入到自定义 shape 中\n  geometry.customInfo({ leaderLine });\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params: Params<WaterfallOptions>): Params<WaterfallOptions> {\n  const { options } = params;\n  const { xAxis, yAxis, xField, yField, meta } = options;\n\n  const Y_FIELD_META = deepAssign({}, { alias: yField }, get(meta, yField));\n\n  return flow(\n    scale(\n      {\n        [xField]: xAxis,\n        [yField]: yAxis,\n        [Y_FIELD]: yAxis,\n      },\n      deepAssign({}, meta, { [Y_FIELD]: Y_FIELD_META, [DIFF_FIELD]: Y_FIELD_META, [ABSOLUTE_FIELD]: Y_FIELD_META })\n    )\n  )(params);\n}\n\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params: Params<WaterfallOptions>): Params<WaterfallOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  // 为 false 则是不显示轴\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(yField, false);\n    chart.axis(Y_FIELD, false);\n  } else {\n    chart.axis(yField, yAxis);\n    chart.axis(Y_FIELD, yAxis);\n  }\n\n  return params;\n}\n\n/**\n * legend 配置 todo 添加 hover 交互\n * @param params\n */\nfunction legend(params: Params<WaterfallOptions>): Params<WaterfallOptions> {\n  const { chart, options } = params;\n  const { legend, total, risingFill, fallingFill, locale } = options;\n\n  const i18n = getLocale(locale);\n\n  if (legend === false) {\n    chart.legend(false);\n  } else {\n    const items = [\n      {\n        name: i18n.get(['general', 'increase']),\n        value: 'increase',\n        marker: { symbol: 'square', style: { r: 5, fill: risingFill } },\n      },\n      {\n        name: i18n.get(['general', 'decrease']),\n        value: 'decrease',\n        marker: { symbol: 'square', style: { r: 5, fill: fallingFill } },\n      },\n    ];\n\n    if (total) {\n      items.push({\n        name: total.label || '',\n        value: 'total',\n        marker: {\n          symbol: 'square',\n          style: deepAssign({}, { r: 5 }, get(total, 'style')),\n        },\n      });\n    }\n    chart.legend(\n      deepAssign(\n        {},\n        {\n          custom: true,\n          position: 'top',\n          items,\n        },\n        legend\n      )\n    );\n    chart.removeInteraction('legend-filter');\n  }\n\n  return params;\n}\n\n/**\n * 数据标签\n * @param params\n */\nfunction label(params: Params<WaterfallOptions>): Params<WaterfallOptions> {\n  const { chart, options } = params;\n  const { label, labelMode, xField } = options;\n\n  const geometry = findGeometry(chart, 'interval');\n\n  if (!label) {\n    geometry.label(false);\n  } else {\n    const { callback, ...cfg } = label;\n    geometry.label({\n      fields: labelMode === 'absolute' ? [ABSOLUTE_FIELD, xField] : [DIFF_FIELD, xField],\n      callback,\n      cfg: transformLabel(cfg),\n    });\n  }\n\n  return params;\n}\n\n/**\n * tooltip 配置\n * @param params\n */\nexport function tooltip(params: Params<WaterfallOptions>): Params<WaterfallOptions> {\n  const { chart, options } = params;\n  const { tooltip, xField, yField } = options;\n\n  if (tooltip !== false) {\n    chart.tooltip({\n      showCrosshairs: false,\n      showMarkers: false,\n      shared: true,\n      // tooltip 默认展示 y 字段值\n      fields: [yField],\n      ...tooltip,\n    });\n    // 瀑布图默认以 yField 作为 tooltip 内容\n    const geometry = chart.geometries[0];\n    tooltip?.formatter ? geometry.tooltip(`${xField}*${yField}`, tooltip.formatter) : geometry.tooltip(yField);\n  } else {\n    chart.tooltip(false);\n  }\n\n  return params;\n}\n\n/**\n * 瀑布图适配器\n * @param params\n */\nexport function adaptor(params: Params<WaterfallOptions>) {\n  return flow(\n    defaultOptions,\n    theme,\n    geometry,\n    meta,\n    axis,\n    legend,\n    tooltip,\n    label,\n    state,\n    interaction,\n    animation,\n    annotation()\n  )(params);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}