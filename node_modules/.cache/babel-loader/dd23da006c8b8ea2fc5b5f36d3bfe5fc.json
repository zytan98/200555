{"ast":null,"code":"/**\n * @fileOverview 自定义边\n * @description 自定义边中有大量逻辑同自定义节点重复，虽然可以提取成为 mixin ，但是考虑到代码的可读性，还是单独实现。\n */\nimport { __assign } from \"tslib\";\nimport { deepMix, mix, each, isNil, isNumber, isArray } from '@antv/util';\nimport { getLabelPosition, getLoopCfgs } from '../util/graphic';\nimport { distance, getCircleCenterByPoints } from '../util/math';\nimport { getControlPoint, getSpline } from '../util/path';\nimport Global from '../global';\nimport Shape from './shape';\nimport { shapeBase, CLS_LABEL_BG_SUFFIX } from './shapeBase';\nvar CLS_SHAPE = 'edge-shape'; // start,end 倒置，center 不变\n\nfunction revertAlign(labelPosition) {\n  var textAlign = labelPosition;\n\n  if (labelPosition === 'start') {\n    textAlign = 'end';\n  } else if (labelPosition === 'end') {\n    textAlign = 'start';\n  }\n\n  return textAlign;\n}\n\nvar singleEdge = {\n  itemType: 'edge',\n\n  /**\n   * 文本的位置\n   * @type {String}\n   */\n  labelPosition: 'center',\n\n  /**\n   * 文本的 x 偏移\n   * @type {Number}\n   */\n  refX: 0,\n\n  /**\n   * 文本的 y 偏移\n   * @type {Number}\n   */\n  refY: 0,\n\n  /**\n   * 文本是否跟着线自动旋转，默认 false\n   * @type {Boolean}\n   */\n  labelAutoRotate: false,\n  // 自定义边时的配置\n  options: {\n    size: Global.defaultEdge.size,\n    style: {\n      x: 0,\n      y: 0,\n      stroke: Global.defaultEdge.style.stroke,\n      lineAppendWidth: Global.defaultEdge.style.lineAppendWidth\n    },\n    labelCfg: {\n      style: {\n        fill: Global.edgeLabel.style.fill,\n        fontSize: Global.edgeLabel.style.fontSize\n      }\n    },\n    stateStyles: __assign({}, Global.edgeStateStyles)\n  },\n\n  /**\n   * 获取边的 path\n   * @internal 供扩展的边覆盖\n   * @param  {Array} points 构成边的点的集合\n   * @return {Array} 构成 path 的数组\n   */\n  getPath: function getPath(points) {\n    var path = [];\n    each(points, function (point, index) {\n      if (index === 0) {\n        path.push(['M', point.x, point.y]);\n      } else {\n        path.push(['L', point.x, point.y]);\n      }\n    });\n    return path;\n  },\n  getShapeStyle: function getShapeStyle(cfg) {\n    var defaultStyle = this.options.style;\n    var strokeStyle = {\n      stroke: cfg.color\n    }; // 如果设置了color，则覆盖默认的stroke属性\n\n    var style = mix({}, defaultStyle, strokeStyle, cfg.style);\n    var size = cfg.size || Global.defaultEdge.size;\n    cfg = this.getPathPoints(cfg);\n    var startPoint = cfg.startPoint,\n        endPoint = cfg.endPoint;\n    var controlPoints = this.getControlPoints(cfg);\n    var points = [startPoint]; // 添加起始点\n    // 添加控制点\n\n    if (controlPoints) {\n      points = points.concat(controlPoints);\n    } // 添加结束点\n\n\n    points.push(endPoint);\n    var path = this.getPath(points);\n    var styles = mix({}, Global.defaultEdge.style, {\n      stroke: Global.defaultEdge.color,\n      lineWidth: size,\n      path: path\n    }, style);\n    return styles;\n  },\n  updateShapeStyle: function updateShapeStyle(cfg, item) {\n    var group = item.getContainer();\n    var strokeStyle = {\n      stroke: cfg.color\n    };\n    var shape = group.find(function (element) {\n      return element.get('className') === 'edge-shape';\n    }) || item.getKeyShape();\n    var size = cfg.size;\n    cfg = this.getPathPoints(cfg);\n    var startPoint = cfg.startPoint,\n        endPoint = cfg.endPoint;\n    var controlPoints = this.getControlPoints(cfg); // || cfg.controlPoints;\n\n    var points = [startPoint]; // 添加起始点\n    // 添加控制点\n\n    if (controlPoints) {\n      points = points.concat(controlPoints);\n    } // 添加结束点\n\n\n    points.push(endPoint);\n    var currentAttr = shape.attr();\n    var previousStyle = mix({}, strokeStyle, currentAttr, cfg.style);\n    var source = cfg.sourceNode;\n    var target = cfg.targetNode;\n    var routeCfg = {\n      radius: previousStyle.radius\n    };\n\n    if (!controlPoints) {\n      routeCfg = {\n        source: source,\n        target: target,\n        offset: previousStyle.offset,\n        radius: previousStyle.radius\n      };\n    }\n\n    if (currentAttr.endArrow && previousStyle.endArrow === false) {\n      cfg.style.endArrow = {\n        path: ''\n      };\n    }\n\n    if (currentAttr.startArrow && previousStyle.startArrow === false) {// cfg.style.startArrow = {\n      //   path: '',\n      // };\n    }\n\n    var path = this.getPath(points, routeCfg);\n    var style = mix(strokeStyle, shape.attr(), {\n      lineWidth: size,\n      path: path\n    }, cfg.style);\n\n    if (shape) {\n      shape.attr(style);\n    }\n  },\n  getLabelStyleByPosition: function getLabelStyleByPosition(cfg, labelCfg, group) {\n    var labelPosition = labelCfg.position || this.labelPosition; // 文本的位置用户可以传入\n\n    var style = {};\n    var pathShape = group && group.find(function (element) {\n      return element.get('className') === CLS_SHAPE;\n    }); // 不对 pathShape 进行判空，如果线不存在，说明有问题了\n\n    var pointPercent;\n\n    if (labelPosition === 'start') {\n      pointPercent = 0;\n    } else if (labelPosition === 'end') {\n      pointPercent = 1;\n    } else {\n      pointPercent = 0.5;\n    } // 偏移量\n\n\n    var offsetX = labelCfg.refX || this.refX;\n    var offsetY = labelCfg.refY || this.refY; // 如果两个节点重叠，线就变成了一个点，这时候label的位置，就是这个点 + 绝对偏移\n\n    if (cfg.startPoint.x === cfg.endPoint.x && cfg.startPoint.y === cfg.endPoint.y) {\n      style.x = cfg.startPoint.x + offsetX;\n      style.y = cfg.startPoint.y + offsetY;\n      style.text = cfg.label;\n      return style;\n    }\n\n    var autoRotate;\n    if (isNil(labelCfg.autoRotate)) autoRotate = this.labelAutoRotate;else autoRotate = labelCfg.autoRotate;\n    var offsetStyle = getLabelPosition(pathShape, pointPercent, offsetX, offsetY, autoRotate);\n    style.x = offsetStyle.x;\n    style.y = offsetStyle.y;\n    style.rotate = offsetStyle.rotate;\n    style.textAlign = this._getTextAlign(labelPosition, offsetStyle.angle);\n    style.text = cfg.label;\n    return style;\n  },\n  getLabelBgStyleByPosition: function getLabelBgStyleByPosition(label, cfg, labelCfg, group) {\n    if (!label) {\n      return {};\n    }\n\n    var bbox = label.getBBox();\n    var backgroundStyle = labelCfg.style && labelCfg.style.background;\n\n    if (!backgroundStyle) {\n      return {};\n    }\n\n    var padding = backgroundStyle.padding;\n    var backgroundWidth = bbox.width + padding[1] + padding[3];\n    var backgroundHeight = bbox.height + padding[0] + padding[2];\n    var labelPosition = labelCfg.position || this.labelPosition;\n\n    var style = __assign(__assign({}, backgroundStyle), {\n      width: backgroundWidth,\n      height: backgroundHeight,\n      x: bbox.minX - padding[2],\n      y: bbox.minY - padding[0],\n      rotate: 0\n    });\n\n    var autoRotate;\n    if (isNil(labelCfg.autoRotate)) autoRotate = this.labelAutoRotate;else autoRotate = labelCfg.autoRotate;\n    var pathShape = group && group.find(function (element) {\n      return element.get('className') === CLS_SHAPE;\n    }); // 不对 pathShape 进行判空，如果线不存在，说明有问题了\n\n    var pointPercent;\n\n    if (labelPosition === 'start') {\n      pointPercent = 0;\n    } else if (labelPosition === 'end') {\n      pointPercent = 1;\n    } else {\n      pointPercent = 0.5;\n    } // 偏移量\n\n\n    var offsetX = labelCfg.refX || this.refX;\n    var offsetY = labelCfg.refY || this.refY; // // 如果两个节点重叠，线就变成了一个点，这时候label的位置，就是这个点 + 绝对偏移\n\n    if (cfg.startPoint.x === cfg.endPoint.x && cfg.startPoint.y === cfg.endPoint.y) {\n      style.x = cfg.startPoint.x + offsetX - backgroundWidth / 2;\n      style.y = cfg.startPoint.y + offsetY - backgroundHeight / 2;\n      return style;\n    }\n\n    var offsetStyle = getLabelPosition(pathShape, pointPercent, offsetX - backgroundWidth / 2, offsetY + backgroundHeight / 2, autoRotate);\n    var rad = offsetStyle.angle;\n\n    if (rad > 1 / 2 * Math.PI && rad < 3 * 1 / 2 * Math.PI) {\n      offsetStyle = getLabelPosition(pathShape, pointPercent, offsetX + backgroundWidth / 2, offsetY + backgroundHeight / 2, autoRotate);\n    }\n\n    if (autoRotate) {\n      style.x = offsetStyle.x;\n      style.y = offsetStyle.y;\n    }\n\n    style.rotate = offsetStyle.rotate;\n    return style;\n  },\n  // 获取文本对齐方式\n  _getTextAlign: function _getTextAlign(labelPosition, angle) {\n    var textAlign = 'center';\n\n    if (!angle) {\n      return labelPosition;\n    }\n\n    angle = angle % (Math.PI * 2); // 取模\n\n    if (labelPosition !== 'center') {\n      if (angle >= 0 && angle <= Math.PI / 2 || angle >= 3 / 2 * Math.PI && angle < 2 * Math.PI) {\n        textAlign = labelPosition;\n      } else {\n        textAlign = revertAlign(labelPosition);\n      }\n    }\n\n    return textAlign;\n  },\n\n  /**\n   * @internal 获取边的控制点\n   * @param  {Object} cfg 边的配置项\n   * @return {Array} 控制点的数组\n   */\n  getControlPoints: function getControlPoints(cfg) {\n    return cfg.controlPoints;\n  },\n\n  /**\n   * @internal 处理需要重计算点和边的情况\n   * @param {Object} cfg 边的配置项\n   * @return {Object} 边的配置项\n   */\n  getPathPoints: function getPathPoints(cfg) {\n    return cfg;\n  },\n\n  /**\n   * 绘制边\n   * @override\n   * @param  {Object} cfg   边的配置项\n   * @param  {G.Group} group 边的容器\n   * @return {IShape} 图形\n   */\n  drawShape: function drawShape(cfg, group) {\n    var shapeStyle = this.getShapeStyle(cfg);\n    var shape = group.addShape('path', {\n      className: CLS_SHAPE,\n      name: CLS_SHAPE,\n      attrs: shapeStyle\n    });\n    return shape;\n  },\n  drawLabel: function drawLabel(cfg, group) {\n    var defaultLabelCfg = this.options.labelCfg;\n    var defaultFontFamily;\n    if (typeof window !== 'undefined') defaultFontFamily = window.getComputedStyle(document.body, null).getPropertyValue('font-family') || 'Arial, sans-serif';else defaultFontFamily = 'Arial, sans-serif';\n    var labelCfg = deepMix({\n      fontFamily: defaultFontFamily\n    }, defaultLabelCfg, cfg.labelCfg);\n    var labelStyle = this.getLabelStyle(cfg, labelCfg, group);\n    var rotate = labelStyle.rotate;\n    delete labelStyle.rotate;\n    var label = group.addShape('text', {\n      attrs: labelStyle,\n      name: 'text-shape'\n    });\n\n    if (rotate) {\n      label.rotateAtStart(rotate);\n    }\n\n    if (labelStyle.background) {\n      var rect = this.drawLabelBg(cfg, group, label);\n      var labelBgClassname = this.itemType + CLS_LABEL_BG_SUFFIX;\n      rect.set('classname', labelBgClassname);\n      label.toFront();\n    }\n\n    return label;\n  },\n  drawLabelBg: function drawLabelBg(cfg, group, label) {\n    var defaultLabelCfg = this.options.labelCfg;\n    var labelCfg = deepMix({}, defaultLabelCfg, cfg.labelCfg);\n    var labelStyle = this.getLabelStyle(cfg, labelCfg, group);\n    var rotate = labelStyle.rotate;\n    var style = this.getLabelBgStyleByPosition(label, cfg, labelCfg, group);\n    delete style.rotate;\n    var rect = group.addShape('rect', {\n      name: 'text-bg-shape',\n      attrs: style\n    });\n    if (rotate) rect.rotateAtStart(rotate);\n    return rect;\n  }\n};\n\nvar singleEdgeDef = __assign(__assign({}, shapeBase), singleEdge);\n\nShape.registerEdge('single-edge', singleEdgeDef); // 直线, 不支持控制点\n\nShape.registerEdge('line', {\n  // 控制点不生效\n  getControlPoints: function getControlPoints() {\n    return undefined;\n  }\n}, 'single-edge'); // 直线\n\nShape.registerEdge('spline', {\n  getPath: function getPath(points) {\n    var path = getSpline(points);\n    return path;\n  }\n}, 'single-edge');\nShape.registerEdge('arc', {\n  curveOffset: 20,\n  clockwise: 1,\n  getControlPoints: function getControlPoints(cfg) {\n    var startPoint = cfg.startPoint,\n        endPoint = cfg.endPoint;\n    var midPoint = {\n      x: (startPoint.x + endPoint.x) / 2,\n      y: (startPoint.y + endPoint.y) / 2\n    };\n    var center;\n    var arcPoint; // 根据给定点计算圆弧\n\n    if (cfg.controlPoints !== undefined) {\n      arcPoint = cfg.controlPoints[0];\n      center = getCircleCenterByPoints(startPoint, arcPoint, endPoint); // 根据控制点和直线关系决定 clockwise值\n\n      if (startPoint.x <= endPoint.x && startPoint.y > endPoint.y) {\n        this.clockwise = center.x > arcPoint.x ? 0 : 1;\n      } else if (startPoint.x <= endPoint.x && startPoint.y < endPoint.y) {\n        this.clockwise = center.x > arcPoint.x ? 1 : 0;\n      } else if (startPoint.x > endPoint.x && startPoint.y <= endPoint.y) {\n        this.clockwise = center.y < arcPoint.y ? 0 : 1;\n      } else {\n        this.clockwise = center.y < arcPoint.y ? 1 : 0;\n      } // 若给定点和两端点共线，无法生成圆弧，绘制直线\n\n\n      if ((arcPoint.x - startPoint.x) / (arcPoint.y - startPoint.y) === (endPoint.x - startPoint.x) / (endPoint.y - startPoint.y)) {\n        return [];\n      }\n    } else {\n      // 根据直线连线中点的的偏移计算圆弧\n      // 若用户给定偏移量则根据其计算，否则按照默认偏移值计算\n      if (cfg.curveOffset === undefined) {\n        cfg.curveOffset = this.curveOffset;\n      }\n\n      if (isArray(cfg.curveOffset)) {\n        cfg.curveOffset = cfg.curveOffset[0];\n      }\n\n      if (cfg.curveOffset < 0) {\n        this.clockwise = 0;\n      } else {\n        this.clockwise = 1;\n      }\n\n      var vec = {\n        x: endPoint.x - startPoint.x,\n        y: endPoint.y - startPoint.y\n      };\n      var edgeAngle = Math.atan2(vec.y, vec.x);\n      arcPoint = {\n        x: cfg.curveOffset * Math.cos(-Math.PI / 2 + edgeAngle) + midPoint.x,\n        y: cfg.curveOffset * Math.sin(-Math.PI / 2 + edgeAngle) + midPoint.y\n      };\n      center = getCircleCenterByPoints(startPoint, arcPoint, endPoint);\n    }\n\n    var radius = distance(startPoint, center);\n    var controlPoints = [{\n      x: radius,\n      y: radius\n    }];\n    return controlPoints;\n  },\n  getPath: function getPath(points) {\n    var path = [];\n    path.push(['M', points[0].x, points[0].y]); // 控制点与端点共线\n\n    if (points.length === 2) {\n      path.push(['L', points[1].x, points[1].y]);\n    } else {\n      path.push(['A', points[1].x, points[1].y, 0, 0, this.clockwise, points[2].x, points[2].y]);\n    }\n\n    return path;\n  }\n}, 'single-edge');\nShape.registerEdge('quadratic', {\n  curvePosition: 0.5,\n  curveOffset: -20,\n  getControlPoints: function getControlPoints(cfg) {\n    var controlPoints = cfg.controlPoints; // 指定controlPoints\n\n    if (!controlPoints || !controlPoints.length) {\n      var startPoint = cfg.startPoint,\n          endPoint = cfg.endPoint;\n      if (cfg.curveOffset === undefined) cfg.curveOffset = this.curveOffset;\n      if (cfg.curvePosition === undefined) cfg.curvePosition = this.curvePosition;\n      if (isArray(this.curveOffset)) cfg.curveOffset = cfg.curveOffset[0];\n      if (isArray(this.curvePosition)) cfg.curvePosition = cfg.curveOffset[0];\n      var innerPoint = getControlPoint(startPoint, endPoint, cfg.curvePosition, cfg.curveOffset);\n      controlPoints = [innerPoint];\n    }\n\n    return controlPoints;\n  },\n  getPath: function getPath(points) {\n    var path = [];\n    path.push(['M', points[0].x, points[0].y]);\n    path.push(['Q', points[1].x, points[1].y, points[2].x, points[2].y]);\n    return path;\n  }\n}, 'single-edge');\nShape.registerEdge('cubic', {\n  curvePosition: [1 / 2, 1 / 2],\n  curveOffset: [-20, 20],\n  getControlPoints: function getControlPoints(cfg) {\n    var controlPoints = cfg.controlPoints; // 指定controlPoints\n\n    if (cfg.curveOffset === undefined) cfg.curveOffset = this.curveOffset;\n    if (cfg.curvePosition === undefined) cfg.curvePosition = this.curvePosition;\n    if (isNumber(cfg.curveOffset)) cfg.curveOffset = [cfg.curveOffset, -cfg.curveOffset];\n    if (isNumber(cfg.curvePosition)) cfg.curvePosition = [cfg.curvePosition, 1 - cfg.curvePosition];\n\n    if (!controlPoints || !controlPoints.length || controlPoints.length < 2) {\n      var startPoint = cfg.startPoint,\n          endPoint = cfg.endPoint;\n      var innerPoint1 = getControlPoint(startPoint, endPoint, cfg.curvePosition[0], cfg.curveOffset[0]);\n      var innerPoint2 = getControlPoint(startPoint, endPoint, cfg.curvePosition[1], cfg.curveOffset[1]);\n      controlPoints = [innerPoint1, innerPoint2];\n    }\n\n    return controlPoints;\n  },\n  getPath: function getPath(points) {\n    var path = [];\n    path.push(['M', points[0].x, points[0].y]);\n    path.push(['C', points[1].x, points[1].y, points[2].x, points[2].y, points[3].x, points[3].y]);\n    return path;\n  }\n}, 'single-edge'); // 垂直方向的三阶贝塞尔曲线，不再考虑用户外部传入的控制点\n\nShape.registerEdge('cubic-vertical', {\n  curvePosition: [1 / 2, 1 / 2],\n  minCurveOffset: [0, 0],\n  curveOffset: undefined,\n  getControlPoints: function getControlPoints(cfg) {\n    var startPoint = cfg.startPoint,\n        endPoint = cfg.endPoint;\n    if (cfg.curvePosition === undefined) cfg.curvePosition = this.curvePosition;\n    if (cfg.curveOffset === undefined) cfg.curveOffset = this.curveOffset;\n    if (cfg.minCurveOffset === undefined) cfg.minCurveOffset = this.minCurveOffset;\n    if (isNumber(cfg.curveOffset)) cfg.curveOffset = [cfg.curveOffset, -cfg.curveOffset];\n    if (isNumber(cfg.minCurveOffset)) cfg.minCurveOffset = [cfg.minCurveOffset, -cfg.minCurveOffset];\n    if (isNumber(cfg.curvePosition)) cfg.curvePosition = [cfg.curvePosition, 1 - cfg.curvePosition];\n    var yDist = endPoint.y - startPoint.y;\n    var curveOffset = [0, 0];\n\n    if (cfg.curveOffset) {\n      curveOffset = cfg.curveOffset;\n    } else if (Math.abs(yDist) < Math.abs(cfg.minCurveOffset[0])) {\n      curveOffset = cfg.minCurveOffset;\n    }\n\n    var innerPoint1 = {\n      x: startPoint.x,\n      y: startPoint.y + yDist * this.curvePosition[0] + curveOffset[0]\n    };\n    var innerPoint2 = {\n      x: endPoint.x,\n      y: endPoint.y - yDist * this.curvePosition[1] + curveOffset[1]\n    };\n    return [innerPoint1, innerPoint2];\n  }\n}, 'cubic'); // 水平方向的三阶贝塞尔曲线，不再考虑用户外部传入的控制点\n\nShape.registerEdge('cubic-horizontal', {\n  curvePosition: [1 / 2, 1 / 2],\n  minCurveOffset: [0, 0],\n  curveOffset: undefined,\n  getControlPoints: function getControlPoints(cfg) {\n    var startPoint = cfg.startPoint,\n        endPoint = cfg.endPoint;\n    if (cfg.curvePosition === undefined) cfg.curvePosition = this.curvePosition;\n    if (cfg.curveOffset === undefined) cfg.curveOffset = this.curveOffset;\n    if (cfg.minCurveOffset === undefined) cfg.minCurveOffset = this.minCurveOffset;\n    if (isNumber(cfg.curveOffset)) cfg.curveOffset = [cfg.curveOffset, -cfg.curveOffset];\n    if (isNumber(cfg.minCurveOffset)) cfg.minCurveOffset = [cfg.minCurveOffset, -cfg.minCurveOffset];\n    if (isNumber(cfg.curvePosition)) cfg.curvePosition = [cfg.curvePosition, 1 - cfg.curvePosition];\n    var xDist = endPoint.x - startPoint.x;\n    var curveOffset = [0, 0];\n\n    if (cfg.curveOffset) {\n      curveOffset = cfg.curveOffset;\n    } else if (Math.abs(xDist) < Math.abs(cfg.minCurveOffset[0])) {\n      curveOffset = cfg.minCurveOffset;\n    }\n\n    var innerPoint1 = {\n      x: startPoint.x + xDist * this.curvePosition[0] + curveOffset[0],\n      y: startPoint.y\n    };\n    var innerPoint2 = {\n      x: endPoint.x - xDist * this.curvePosition[1] + curveOffset[1],\n      y: endPoint.y\n    };\n    var controlPoints = [innerPoint1, innerPoint2];\n    return controlPoints;\n  }\n}, 'cubic');\nShape.registerEdge('loop', {\n  getPathPoints: function getPathPoints(cfg) {\n    return getLoopCfgs(cfg);\n  },\n  getControlPoints: function getControlPoints(cfg) {\n    return cfg.controlPoints;\n  },\n  afterDraw: function afterDraw(cfg) {\n    cfg.controlPoints = undefined;\n  },\n  afterUpdate: function afterUpdate(cfg) {\n    cfg.controlPoints = undefined;\n  }\n}, 'cubic');","map":{"version":3,"sources":["C:/Users/Home/Desktop/cs-2005/node_modules/@antv/g6-core/es/element/edge.js"],"names":["__assign","deepMix","mix","each","isNil","isNumber","isArray","getLabelPosition","getLoopCfgs","distance","getCircleCenterByPoints","getControlPoint","getSpline","Global","Shape","shapeBase","CLS_LABEL_BG_SUFFIX","CLS_SHAPE","revertAlign","labelPosition","textAlign","singleEdge","itemType","refX","refY","labelAutoRotate","options","size","defaultEdge","style","x","y","stroke","lineAppendWidth","labelCfg","fill","edgeLabel","fontSize","stateStyles","edgeStateStyles","getPath","points","path","point","index","push","getShapeStyle","cfg","defaultStyle","strokeStyle","color","getPathPoints","startPoint","endPoint","controlPoints","getControlPoints","concat","styles","lineWidth","updateShapeStyle","item","group","getContainer","shape","find","element","get","getKeyShape","currentAttr","attr","previousStyle","source","sourceNode","target","targetNode","routeCfg","radius","offset","endArrow","startArrow","getLabelStyleByPosition","position","pathShape","pointPercent","offsetX","offsetY","text","label","autoRotate","offsetStyle","rotate","_getTextAlign","angle","getLabelBgStyleByPosition","bbox","getBBox","backgroundStyle","background","padding","backgroundWidth","width","backgroundHeight","height","minX","minY","rad","Math","PI","drawShape","shapeStyle","addShape","className","name","attrs","drawLabel","defaultLabelCfg","defaultFontFamily","window","getComputedStyle","document","body","getPropertyValue","fontFamily","labelStyle","getLabelStyle","rotateAtStart","rect","drawLabelBg","labelBgClassname","set","toFront","singleEdgeDef","registerEdge","undefined","curveOffset","clockwise","midPoint","center","arcPoint","vec","edgeAngle","atan2","cos","sin","length","curvePosition","innerPoint","innerPoint1","innerPoint2","minCurveOffset","yDist","abs","xDist","afterDraw","afterUpdate"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,EAAkBC,GAAlB,EAAuBC,IAAvB,EAA6BC,KAA7B,EAAoCC,QAApC,EAA8CC,OAA9C,QAA6D,YAA7D;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,iBAA9C;AACA,SAASC,QAAT,EAAmBC,uBAAnB,QAAkD,cAAlD;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,cAA3C;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,SAAT,EAAoBC,mBAApB,QAA+C,aAA/C;AACA,IAAIC,SAAS,GAAG,YAAhB,C,CAA8B;;AAE9B,SAASC,WAAT,CAAqBC,aAArB,EAAoC;AAClC,MAAIC,SAAS,GAAGD,aAAhB;;AAEA,MAAIA,aAAa,KAAK,OAAtB,EAA+B;AAC7BC,IAAAA,SAAS,GAAG,KAAZ;AACD,GAFD,MAEO,IAAID,aAAa,KAAK,KAAtB,EAA6B;AAClCC,IAAAA,SAAS,GAAG,OAAZ;AACD;;AAED,SAAOA,SAAP;AACD;;AAED,IAAIC,UAAU,GAAG;AACfC,EAAAA,QAAQ,EAAE,MADK;;AAGf;AACF;AACA;AACA;AACEH,EAAAA,aAAa,EAAE,QAPA;;AASf;AACF;AACA;AACA;AACEI,EAAAA,IAAI,EAAE,CAbS;;AAef;AACF;AACA;AACA;AACEC,EAAAA,IAAI,EAAE,CAnBS;;AAqBf;AACF;AACA;AACA;AACEC,EAAAA,eAAe,EAAE,KAzBF;AA0Bf;AACAC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEd,MAAM,CAACe,WAAP,CAAmBD,IADlB;AAEPE,IAAAA,KAAK,EAAE;AACLC,MAAAA,CAAC,EAAE,CADE;AAELC,MAAAA,CAAC,EAAE,CAFE;AAGLC,MAAAA,MAAM,EAAEnB,MAAM,CAACe,WAAP,CAAmBC,KAAnB,CAAyBG,MAH5B;AAILC,MAAAA,eAAe,EAAEpB,MAAM,CAACe,WAAP,CAAmBC,KAAnB,CAAyBI;AAJrC,KAFA;AAQPC,IAAAA,QAAQ,EAAE;AACRL,MAAAA,KAAK,EAAE;AACLM,QAAAA,IAAI,EAAEtB,MAAM,CAACuB,SAAP,CAAiBP,KAAjB,CAAuBM,IADxB;AAELE,QAAAA,QAAQ,EAAExB,MAAM,CAACuB,SAAP,CAAiBP,KAAjB,CAAuBQ;AAF5B;AADC,KARH;AAcPC,IAAAA,WAAW,EAAEtC,QAAQ,CAAC,EAAD,EAAKa,MAAM,CAAC0B,eAAZ;AAdd,GA3BM;;AA4Cf;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC,MAAjB,EAAyB;AAChC,QAAIC,IAAI,GAAG,EAAX;AACAvC,IAAAA,IAAI,CAACsC,MAAD,EAAS,UAAUE,KAAV,EAAiBC,KAAjB,EAAwB;AACnC,UAAIA,KAAK,KAAK,CAAd,EAAiB;AACfF,QAAAA,IAAI,CAACG,IAAL,CAAU,CAAC,GAAD,EAAMF,KAAK,CAACb,CAAZ,EAAea,KAAK,CAACZ,CAArB,CAAV;AACD,OAFD,MAEO;AACLW,QAAAA,IAAI,CAACG,IAAL,CAAU,CAAC,GAAD,EAAMF,KAAK,CAACb,CAAZ,EAAea,KAAK,CAACZ,CAArB,CAAV;AACD;AACF,KANG,CAAJ;AAOA,WAAOW,IAAP;AACD,GA5Dc;AA6DfI,EAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBC,GAAvB,EAA4B;AACzC,QAAIC,YAAY,GAAG,KAAKtB,OAAL,CAAaG,KAAhC;AACA,QAAIoB,WAAW,GAAG;AAChBjB,MAAAA,MAAM,EAAEe,GAAG,CAACG;AADI,KAAlB,CAFyC,CAItC;;AAEH,QAAIrB,KAAK,GAAG3B,GAAG,CAAC,EAAD,EAAK8C,YAAL,EAAmBC,WAAnB,EAAgCF,GAAG,CAAClB,KAApC,CAAf;AACA,QAAIF,IAAI,GAAGoB,GAAG,CAACpB,IAAJ,IAAYd,MAAM,CAACe,WAAP,CAAmBD,IAA1C;AACAoB,IAAAA,GAAG,GAAG,KAAKI,aAAL,CAAmBJ,GAAnB,CAAN;AACA,QAAIK,UAAU,GAAGL,GAAG,CAACK,UAArB;AAAA,QACIC,QAAQ,GAAGN,GAAG,CAACM,QADnB;AAEA,QAAIC,aAAa,GAAG,KAAKC,gBAAL,CAAsBR,GAAtB,CAApB;AACA,QAAIN,MAAM,GAAG,CAACW,UAAD,CAAb,CAZyC,CAYd;AAC3B;;AAEA,QAAIE,aAAJ,EAAmB;AACjBb,MAAAA,MAAM,GAAGA,MAAM,CAACe,MAAP,CAAcF,aAAd,CAAT;AACD,KAjBwC,CAiBvC;;;AAGFb,IAAAA,MAAM,CAACI,IAAP,CAAYQ,QAAZ;AACA,QAAIX,IAAI,GAAG,KAAKF,OAAL,CAAaC,MAAb,CAAX;AACA,QAAIgB,MAAM,GAAGvD,GAAG,CAAC,EAAD,EAAKW,MAAM,CAACe,WAAP,CAAmBC,KAAxB,EAA+B;AAC7CG,MAAAA,MAAM,EAAEnB,MAAM,CAACe,WAAP,CAAmBsB,KADkB;AAE7CQ,MAAAA,SAAS,EAAE/B,IAFkC;AAG7Ce,MAAAA,IAAI,EAAEA;AAHuC,KAA/B,EAIbb,KAJa,CAAhB;AAKA,WAAO4B,MAAP;AACD,GAzFc;AA0FfE,EAAAA,gBAAgB,EAAE,SAASA,gBAAT,CAA0BZ,GAA1B,EAA+Ba,IAA/B,EAAqC;AACrD,QAAIC,KAAK,GAAGD,IAAI,CAACE,YAAL,EAAZ;AACA,QAAIb,WAAW,GAAG;AAChBjB,MAAAA,MAAM,EAAEe,GAAG,CAACG;AADI,KAAlB;AAGA,QAAIa,KAAK,GAAGF,KAAK,CAACG,IAAN,CAAW,UAAUC,OAAV,EAAmB;AACxC,aAAOA,OAAO,CAACC,GAAR,CAAY,WAAZ,MAA6B,YAApC;AACD,KAFW,KAENN,IAAI,CAACO,WAAL,EAFN;AAGA,QAAIxC,IAAI,GAAGoB,GAAG,CAACpB,IAAf;AACAoB,IAAAA,GAAG,GAAG,KAAKI,aAAL,CAAmBJ,GAAnB,CAAN;AACA,QAAIK,UAAU,GAAGL,GAAG,CAACK,UAArB;AAAA,QACIC,QAAQ,GAAGN,GAAG,CAACM,QADnB;AAEA,QAAIC,aAAa,GAAG,KAAKC,gBAAL,CAAsBR,GAAtB,CAApB,CAZqD,CAYL;;AAEhD,QAAIN,MAAM,GAAG,CAACW,UAAD,CAAb,CAdqD,CAc1B;AAC3B;;AAEA,QAAIE,aAAJ,EAAmB;AACjBb,MAAAA,MAAM,GAAGA,MAAM,CAACe,MAAP,CAAcF,aAAd,CAAT;AACD,KAnBoD,CAmBnD;;;AAGFb,IAAAA,MAAM,CAACI,IAAP,CAAYQ,QAAZ;AACA,QAAIe,WAAW,GAAGL,KAAK,CAACM,IAAN,EAAlB;AACA,QAAIC,aAAa,GAAGpE,GAAG,CAAC,EAAD,EAAK+C,WAAL,EAAkBmB,WAAlB,EAA+BrB,GAAG,CAAClB,KAAnC,CAAvB;AACA,QAAI0C,MAAM,GAAGxB,GAAG,CAACyB,UAAjB;AACA,QAAIC,MAAM,GAAG1B,GAAG,CAAC2B,UAAjB;AACA,QAAIC,QAAQ,GAAG;AACbC,MAAAA,MAAM,EAAEN,aAAa,CAACM;AADT,KAAf;;AAIA,QAAI,CAACtB,aAAL,EAAoB;AAClBqB,MAAAA,QAAQ,GAAG;AACTJ,QAAAA,MAAM,EAAEA,MADC;AAETE,QAAAA,MAAM,EAAEA,MAFC;AAGTI,QAAAA,MAAM,EAAEP,aAAa,CAACO,MAHb;AAITD,QAAAA,MAAM,EAAEN,aAAa,CAACM;AAJb,OAAX;AAMD;;AAED,QAAIR,WAAW,CAACU,QAAZ,IAAwBR,aAAa,CAACQ,QAAd,KAA2B,KAAvD,EAA8D;AAC5D/B,MAAAA,GAAG,CAAClB,KAAJ,CAAUiD,QAAV,GAAqB;AACnBpC,QAAAA,IAAI,EAAE;AADa,OAArB;AAGD;;AAED,QAAI0B,WAAW,CAACW,UAAZ,IAA0BT,aAAa,CAACS,UAAd,KAA6B,KAA3D,EAAkE,CAAC;AACjE;AACA;AACD;;AAED,QAAIrC,IAAI,GAAG,KAAKF,OAAL,CAAaC,MAAb,EAAqBkC,QAArB,CAAX;AACA,QAAI9C,KAAK,GAAG3B,GAAG,CAAC+C,WAAD,EAAcc,KAAK,CAACM,IAAN,EAAd,EAA4B;AACzCX,MAAAA,SAAS,EAAE/B,IAD8B;AAEzCe,MAAAA,IAAI,EAAEA;AAFmC,KAA5B,EAGZK,GAAG,CAAClB,KAHQ,CAAf;;AAKA,QAAIkC,KAAJ,EAAW;AACTA,MAAAA,KAAK,CAACM,IAAN,CAAWxC,KAAX;AACD;AACF,GAtJc;AAuJfmD,EAAAA,uBAAuB,EAAE,SAASA,uBAAT,CAAiCjC,GAAjC,EAAsCb,QAAtC,EAAgD2B,KAAhD,EAAuD;AAC9E,QAAI1C,aAAa,GAAGe,QAAQ,CAAC+C,QAAT,IAAqB,KAAK9D,aAA9C,CAD8E,CACjB;;AAE7D,QAAIU,KAAK,GAAG,EAAZ;AACA,QAAIqD,SAAS,GAAGrB,KAAK,IAAIA,KAAK,CAACG,IAAN,CAAW,UAAUC,OAAV,EAAmB;AACrD,aAAOA,OAAO,CAACC,GAAR,CAAY,WAAZ,MAA6BjD,SAApC;AACD,KAFwB,CAAzB,CAJ8E,CAM1E;;AAEJ,QAAIkE,YAAJ;;AAEA,QAAIhE,aAAa,KAAK,OAAtB,EAA+B;AAC7BgE,MAAAA,YAAY,GAAG,CAAf;AACD,KAFD,MAEO,IAAIhE,aAAa,KAAK,KAAtB,EAA6B;AAClCgE,MAAAA,YAAY,GAAG,CAAf;AACD,KAFM,MAEA;AACLA,MAAAA,YAAY,GAAG,GAAf;AACD,KAhB6E,CAgB5E;;;AAGF,QAAIC,OAAO,GAAGlD,QAAQ,CAACX,IAAT,IAAiB,KAAKA,IAApC;AACA,QAAI8D,OAAO,GAAGnD,QAAQ,CAACV,IAAT,IAAiB,KAAKA,IAApC,CApB8E,CAoBpC;;AAE1C,QAAIuB,GAAG,CAACK,UAAJ,CAAetB,CAAf,KAAqBiB,GAAG,CAACM,QAAJ,CAAavB,CAAlC,IAAuCiB,GAAG,CAACK,UAAJ,CAAerB,CAAf,KAAqBgB,GAAG,CAACM,QAAJ,CAAatB,CAA7E,EAAgF;AAC9EF,MAAAA,KAAK,CAACC,CAAN,GAAUiB,GAAG,CAACK,UAAJ,CAAetB,CAAf,GAAmBsD,OAA7B;AACAvD,MAAAA,KAAK,CAACE,CAAN,GAAUgB,GAAG,CAACK,UAAJ,CAAerB,CAAf,GAAmBsD,OAA7B;AACAxD,MAAAA,KAAK,CAACyD,IAAN,GAAavC,GAAG,CAACwC,KAAjB;AACA,aAAO1D,KAAP;AACD;;AAED,QAAI2D,UAAJ;AACA,QAAIpF,KAAK,CAAC8B,QAAQ,CAACsD,UAAV,CAAT,EAAgCA,UAAU,GAAG,KAAK/D,eAAlB,CAAhC,KAAuE+D,UAAU,GAAGtD,QAAQ,CAACsD,UAAtB;AACvE,QAAIC,WAAW,GAAGlF,gBAAgB,CAAC2E,SAAD,EAAYC,YAAZ,EAA0BC,OAA1B,EAAmCC,OAAnC,EAA4CG,UAA5C,CAAlC;AACA3D,IAAAA,KAAK,CAACC,CAAN,GAAU2D,WAAW,CAAC3D,CAAtB;AACAD,IAAAA,KAAK,CAACE,CAAN,GAAU0D,WAAW,CAAC1D,CAAtB;AACAF,IAAAA,KAAK,CAAC6D,MAAN,GAAeD,WAAW,CAACC,MAA3B;AACA7D,IAAAA,KAAK,CAACT,SAAN,GAAkB,KAAKuE,aAAL,CAAmBxE,aAAnB,EAAkCsE,WAAW,CAACG,KAA9C,CAAlB;AACA/D,IAAAA,KAAK,CAACyD,IAAN,GAAavC,GAAG,CAACwC,KAAjB;AACA,WAAO1D,KAAP;AACD,GA7Lc;AA8LfgE,EAAAA,yBAAyB,EAAE,SAASA,yBAAT,CAAmCN,KAAnC,EAA0CxC,GAA1C,EAA+Cb,QAA/C,EAAyD2B,KAAzD,EAAgE;AACzF,QAAI,CAAC0B,KAAL,EAAY;AACV,aAAO,EAAP;AACD;;AAED,QAAIO,IAAI,GAAGP,KAAK,CAACQ,OAAN,EAAX;AACA,QAAIC,eAAe,GAAG9D,QAAQ,CAACL,KAAT,IAAkBK,QAAQ,CAACL,KAAT,CAAeoE,UAAvD;;AAEA,QAAI,CAACD,eAAL,EAAsB;AACpB,aAAO,EAAP;AACD;;AAED,QAAIE,OAAO,GAAGF,eAAe,CAACE,OAA9B;AACA,QAAIC,eAAe,GAAGL,IAAI,CAACM,KAAL,GAAaF,OAAO,CAAC,CAAD,CAApB,GAA0BA,OAAO,CAAC,CAAD,CAAvD;AACA,QAAIG,gBAAgB,GAAGP,IAAI,CAACQ,MAAL,GAAcJ,OAAO,CAAC,CAAD,CAArB,GAA2BA,OAAO,CAAC,CAAD,CAAzD;AACA,QAAI/E,aAAa,GAAGe,QAAQ,CAAC+C,QAAT,IAAqB,KAAK9D,aAA9C;;AAEA,QAAIU,KAAK,GAAG7B,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKgG,eAAL,CAAT,EAAgC;AAClDI,MAAAA,KAAK,EAAED,eAD2C;AAElDG,MAAAA,MAAM,EAAED,gBAF0C;AAGlDvE,MAAAA,CAAC,EAAEgE,IAAI,CAACS,IAAL,GAAYL,OAAO,CAAC,CAAD,CAH4B;AAIlDnE,MAAAA,CAAC,EAAE+D,IAAI,CAACU,IAAL,GAAYN,OAAO,CAAC,CAAD,CAJ4B;AAKlDR,MAAAA,MAAM,EAAE;AAL0C,KAAhC,CAApB;;AAQA,QAAIF,UAAJ;AACA,QAAIpF,KAAK,CAAC8B,QAAQ,CAACsD,UAAV,CAAT,EAAgCA,UAAU,GAAG,KAAK/D,eAAlB,CAAhC,KAAuE+D,UAAU,GAAGtD,QAAQ,CAACsD,UAAtB;AACvE,QAAIN,SAAS,GAAGrB,KAAK,IAAIA,KAAK,CAACG,IAAN,CAAW,UAAUC,OAAV,EAAmB;AACrD,aAAOA,OAAO,CAACC,GAAR,CAAY,WAAZ,MAA6BjD,SAApC;AACD,KAFwB,CAAzB,CA3ByF,CA6BrF;;AAEJ,QAAIkE,YAAJ;;AAEA,QAAIhE,aAAa,KAAK,OAAtB,EAA+B;AAC7BgE,MAAAA,YAAY,GAAG,CAAf;AACD,KAFD,MAEO,IAAIhE,aAAa,KAAK,KAAtB,EAA6B;AAClCgE,MAAAA,YAAY,GAAG,CAAf;AACD,KAFM,MAEA;AACLA,MAAAA,YAAY,GAAG,GAAf;AACD,KAvCwF,CAuCvF;;;AAGF,QAAIC,OAAO,GAAGlD,QAAQ,CAACX,IAAT,IAAiB,KAAKA,IAApC;AACA,QAAI8D,OAAO,GAAGnD,QAAQ,CAACV,IAAT,IAAiB,KAAKA,IAApC,CA3CyF,CA2C/C;;AAE1C,QAAIuB,GAAG,CAACK,UAAJ,CAAetB,CAAf,KAAqBiB,GAAG,CAACM,QAAJ,CAAavB,CAAlC,IAAuCiB,GAAG,CAACK,UAAJ,CAAerB,CAAf,KAAqBgB,GAAG,CAACM,QAAJ,CAAatB,CAA7E,EAAgF;AAC9EF,MAAAA,KAAK,CAACC,CAAN,GAAUiB,GAAG,CAACK,UAAJ,CAAetB,CAAf,GAAmBsD,OAAnB,GAA6Be,eAAe,GAAG,CAAzD;AACAtE,MAAAA,KAAK,CAACE,CAAN,GAAUgB,GAAG,CAACK,UAAJ,CAAerB,CAAf,GAAmBsD,OAAnB,GAA6BgB,gBAAgB,GAAG,CAA1D;AACA,aAAOxE,KAAP;AACD;;AAED,QAAI4D,WAAW,GAAGlF,gBAAgB,CAAC2E,SAAD,EAAYC,YAAZ,EAA0BC,OAAO,GAAGe,eAAe,GAAG,CAAtD,EAAyDd,OAAO,GAAGgB,gBAAgB,GAAG,CAAtF,EAAyFb,UAAzF,CAAlC;AACA,QAAIiB,GAAG,GAAGhB,WAAW,CAACG,KAAtB;;AAEA,QAAIa,GAAG,GAAG,IAAI,CAAJ,GAAQC,IAAI,CAACC,EAAnB,IAAyBF,GAAG,GAAG,IAAI,CAAJ,GAAQ,CAAR,GAAYC,IAAI,CAACC,EAApD,EAAwD;AACtDlB,MAAAA,WAAW,GAAGlF,gBAAgB,CAAC2E,SAAD,EAAYC,YAAZ,EAA0BC,OAAO,GAAGe,eAAe,GAAG,CAAtD,EAAyDd,OAAO,GAAGgB,gBAAgB,GAAG,CAAtF,EAAyFb,UAAzF,CAA9B;AACD;;AAED,QAAIA,UAAJ,EAAgB;AACd3D,MAAAA,KAAK,CAACC,CAAN,GAAU2D,WAAW,CAAC3D,CAAtB;AACAD,MAAAA,KAAK,CAACE,CAAN,GAAU0D,WAAW,CAAC1D,CAAtB;AACD;;AAEDF,IAAAA,KAAK,CAAC6D,MAAN,GAAeD,WAAW,CAACC,MAA3B;AACA,WAAO7D,KAAP;AACD,GA/Pc;AAgQf;AACA8D,EAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBxE,aAAvB,EAAsCyE,KAAtC,EAA6C;AAC1D,QAAIxE,SAAS,GAAG,QAAhB;;AAEA,QAAI,CAACwE,KAAL,EAAY;AACV,aAAOzE,aAAP;AACD;;AAEDyE,IAAAA,KAAK,GAAGA,KAAK,IAAIc,IAAI,CAACC,EAAL,GAAU,CAAd,CAAb,CAP0D,CAO3B;;AAE/B,QAAIxF,aAAa,KAAK,QAAtB,EAAgC;AAC9B,UAAIyE,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAIc,IAAI,CAACC,EAAL,GAAU,CAAjC,IAAsCf,KAAK,IAAI,IAAI,CAAJ,GAAQc,IAAI,CAACC,EAAtB,IAA4Bf,KAAK,GAAG,IAAIc,IAAI,CAACC,EAAvF,EAA2F;AACzFvF,QAAAA,SAAS,GAAGD,aAAZ;AACD,OAFD,MAEO;AACLC,QAAAA,SAAS,GAAGF,WAAW,CAACC,aAAD,CAAvB;AACD;AACF;;AAED,WAAOC,SAAP;AACD,GAnRc;;AAqRf;AACF;AACA;AACA;AACA;AACEmC,EAAAA,gBAAgB,EAAE,SAASA,gBAAT,CAA0BR,GAA1B,EAA+B;AAC/C,WAAOA,GAAG,CAACO,aAAX;AACD,GA5Rc;;AA8Rf;AACF;AACA;AACA;AACA;AACEH,EAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBJ,GAAvB,EAA4B;AACzC,WAAOA,GAAP;AACD,GArSc;;AAuSf;AACF;AACA;AACA;AACA;AACA;AACA;AACE6D,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmB7D,GAAnB,EAAwBc,KAAxB,EAA+B;AACxC,QAAIgD,UAAU,GAAG,KAAK/D,aAAL,CAAmBC,GAAnB,CAAjB;AACA,QAAIgB,KAAK,GAAGF,KAAK,CAACiD,QAAN,CAAe,MAAf,EAAuB;AACjCC,MAAAA,SAAS,EAAE9F,SADsB;AAEjC+F,MAAAA,IAAI,EAAE/F,SAF2B;AAGjCgG,MAAAA,KAAK,EAAEJ;AAH0B,KAAvB,CAAZ;AAKA,WAAO9C,KAAP;AACD,GAtTc;AAuTfmD,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBnE,GAAnB,EAAwBc,KAAxB,EAA+B;AACxC,QAAIsD,eAAe,GAAG,KAAKzF,OAAL,CAAaQ,QAAnC;AACA,QAAIkF,iBAAJ;AACA,QAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmCD,iBAAiB,GAAGC,MAAM,CAACC,gBAAP,CAAwBC,QAAQ,CAACC,IAAjC,EAAuC,IAAvC,EAA6CC,gBAA7C,CAA8D,aAA9D,KAAgF,mBAApG,CAAnC,KAAgKL,iBAAiB,GAAG,mBAApB;AAChK,QAAIlF,QAAQ,GAAGjC,OAAO,CAAC;AACrByH,MAAAA,UAAU,EAAEN;AADS,KAAD,EAEnBD,eAFmB,EAEFpE,GAAG,CAACb,QAFF,CAAtB;AAGA,QAAIyF,UAAU,GAAG,KAAKC,aAAL,CAAmB7E,GAAnB,EAAwBb,QAAxB,EAAkC2B,KAAlC,CAAjB;AACA,QAAI6B,MAAM,GAAGiC,UAAU,CAACjC,MAAxB;AACA,WAAOiC,UAAU,CAACjC,MAAlB;AACA,QAAIH,KAAK,GAAG1B,KAAK,CAACiD,QAAN,CAAe,MAAf,EAAuB;AACjCG,MAAAA,KAAK,EAAEU,UAD0B;AAEjCX,MAAAA,IAAI,EAAE;AAF2B,KAAvB,CAAZ;;AAKA,QAAItB,MAAJ,EAAY;AACVH,MAAAA,KAAK,CAACsC,aAAN,CAAoBnC,MAApB;AACD;;AAED,QAAIiC,UAAU,CAAC1B,UAAf,EAA2B;AACzB,UAAI6B,IAAI,GAAG,KAAKC,WAAL,CAAiBhF,GAAjB,EAAsBc,KAAtB,EAA6B0B,KAA7B,CAAX;AACA,UAAIyC,gBAAgB,GAAG,KAAK1G,QAAL,GAAgBN,mBAAvC;AACA8G,MAAAA,IAAI,CAACG,GAAL,CAAS,WAAT,EAAsBD,gBAAtB;AACAzC,MAAAA,KAAK,CAAC2C,OAAN;AACD;;AAED,WAAO3C,KAAP;AACD,GAlVc;AAmVfwC,EAAAA,WAAW,EAAE,SAASA,WAAT,CAAqBhF,GAArB,EAA0Bc,KAA1B,EAAiC0B,KAAjC,EAAwC;AACnD,QAAI4B,eAAe,GAAG,KAAKzF,OAAL,CAAaQ,QAAnC;AACA,QAAIA,QAAQ,GAAGjC,OAAO,CAAC,EAAD,EAAKkH,eAAL,EAAsBpE,GAAG,CAACb,QAA1B,CAAtB;AACA,QAAIyF,UAAU,GAAG,KAAKC,aAAL,CAAmB7E,GAAnB,EAAwBb,QAAxB,EAAkC2B,KAAlC,CAAjB;AACA,QAAI6B,MAAM,GAAGiC,UAAU,CAACjC,MAAxB;AACA,QAAI7D,KAAK,GAAG,KAAKgE,yBAAL,CAA+BN,KAA/B,EAAsCxC,GAAtC,EAA2Cb,QAA3C,EAAqD2B,KAArD,CAAZ;AACA,WAAOhC,KAAK,CAAC6D,MAAb;AACA,QAAIoC,IAAI,GAAGjE,KAAK,CAACiD,QAAN,CAAe,MAAf,EAAuB;AAChCE,MAAAA,IAAI,EAAE,eAD0B;AAEhCC,MAAAA,KAAK,EAAEpF;AAFyB,KAAvB,CAAX;AAIA,QAAI6D,MAAJ,EAAYoC,IAAI,CAACD,aAAL,CAAmBnC,MAAnB;AACZ,WAAOoC,IAAP;AACD;AAhWc,CAAjB;;AAmWA,IAAIK,aAAa,GAAGnI,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKe,SAAL,CAAT,EAA0BM,UAA1B,CAA5B;;AAEAP,KAAK,CAACsH,YAAN,CAAmB,aAAnB,EAAkCD,aAAlC,E,CAAkD;;AAElDrH,KAAK,CAACsH,YAAN,CAAmB,MAAnB,EAA2B;AACzB;AACA7E,EAAAA,gBAAgB,EAAE,SAASA,gBAAT,GAA4B;AAC5C,WAAO8E,SAAP;AACD;AAJwB,CAA3B,EAKG,aALH,E,CAKmB;;AAEnBvH,KAAK,CAACsH,YAAN,CAAmB,QAAnB,EAA6B;AAC3B5F,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC,MAAjB,EAAyB;AAChC,QAAIC,IAAI,GAAG9B,SAAS,CAAC6B,MAAD,CAApB;AACA,WAAOC,IAAP;AACD;AAJ0B,CAA7B,EAKG,aALH;AAMA5B,KAAK,CAACsH,YAAN,CAAmB,KAAnB,EAA0B;AACxBE,EAAAA,WAAW,EAAE,EADW;AAExBC,EAAAA,SAAS,EAAE,CAFa;AAGxBhF,EAAAA,gBAAgB,EAAE,SAASA,gBAAT,CAA0BR,GAA1B,EAA+B;AAC/C,QAAIK,UAAU,GAAGL,GAAG,CAACK,UAArB;AAAA,QACIC,QAAQ,GAAGN,GAAG,CAACM,QADnB;AAEA,QAAImF,QAAQ,GAAG;AACb1G,MAAAA,CAAC,EAAE,CAACsB,UAAU,CAACtB,CAAX,GAAeuB,QAAQ,CAACvB,CAAzB,IAA8B,CADpB;AAEbC,MAAAA,CAAC,EAAE,CAACqB,UAAU,CAACrB,CAAX,GAAesB,QAAQ,CAACtB,CAAzB,IAA8B;AAFpB,KAAf;AAIA,QAAI0G,MAAJ;AACA,QAAIC,QAAJ,CAR+C,CAQjC;;AAEd,QAAI3F,GAAG,CAACO,aAAJ,KAAsB+E,SAA1B,EAAqC;AACnCK,MAAAA,QAAQ,GAAG3F,GAAG,CAACO,aAAJ,CAAkB,CAAlB,CAAX;AACAmF,MAAAA,MAAM,GAAG/H,uBAAuB,CAAC0C,UAAD,EAAasF,QAAb,EAAuBrF,QAAvB,CAAhC,CAFmC,CAE+B;;AAElE,UAAID,UAAU,CAACtB,CAAX,IAAgBuB,QAAQ,CAACvB,CAAzB,IAA8BsB,UAAU,CAACrB,CAAX,GAAesB,QAAQ,CAACtB,CAA1D,EAA6D;AAC3D,aAAKwG,SAAL,GAAiBE,MAAM,CAAC3G,CAAP,GAAW4G,QAAQ,CAAC5G,CAApB,GAAwB,CAAxB,GAA4B,CAA7C;AACD,OAFD,MAEO,IAAIsB,UAAU,CAACtB,CAAX,IAAgBuB,QAAQ,CAACvB,CAAzB,IAA8BsB,UAAU,CAACrB,CAAX,GAAesB,QAAQ,CAACtB,CAA1D,EAA6D;AAClE,aAAKwG,SAAL,GAAiBE,MAAM,CAAC3G,CAAP,GAAW4G,QAAQ,CAAC5G,CAApB,GAAwB,CAAxB,GAA4B,CAA7C;AACD,OAFM,MAEA,IAAIsB,UAAU,CAACtB,CAAX,GAAeuB,QAAQ,CAACvB,CAAxB,IAA6BsB,UAAU,CAACrB,CAAX,IAAgBsB,QAAQ,CAACtB,CAA1D,EAA6D;AAClE,aAAKwG,SAAL,GAAiBE,MAAM,CAAC1G,CAAP,GAAW2G,QAAQ,CAAC3G,CAApB,GAAwB,CAAxB,GAA4B,CAA7C;AACD,OAFM,MAEA;AACL,aAAKwG,SAAL,GAAiBE,MAAM,CAAC1G,CAAP,GAAW2G,QAAQ,CAAC3G,CAApB,GAAwB,CAAxB,GAA4B,CAA7C;AACD,OAZkC,CAYjC;;;AAGF,UAAI,CAAC2G,QAAQ,CAAC5G,CAAT,GAAasB,UAAU,CAACtB,CAAzB,KAA+B4G,QAAQ,CAAC3G,CAAT,GAAaqB,UAAU,CAACrB,CAAvD,MAA8D,CAACsB,QAAQ,CAACvB,CAAT,GAAasB,UAAU,CAACtB,CAAzB,KAA+BuB,QAAQ,CAACtB,CAAT,GAAaqB,UAAU,CAACrB,CAAvD,CAAlE,EAA6H;AAC3H,eAAO,EAAP;AACD;AACF,KAlBD,MAkBO;AACL;AACA;AACA,UAAIgB,GAAG,CAACuF,WAAJ,KAAoBD,SAAxB,EAAmC;AACjCtF,QAAAA,GAAG,CAACuF,WAAJ,GAAkB,KAAKA,WAAvB;AACD;;AAED,UAAIhI,OAAO,CAACyC,GAAG,CAACuF,WAAL,CAAX,EAA8B;AAC5BvF,QAAAA,GAAG,CAACuF,WAAJ,GAAkBvF,GAAG,CAACuF,WAAJ,CAAgB,CAAhB,CAAlB;AACD;;AAED,UAAIvF,GAAG,CAACuF,WAAJ,GAAkB,CAAtB,EAAyB;AACvB,aAAKC,SAAL,GAAiB,CAAjB;AACD,OAFD,MAEO;AACL,aAAKA,SAAL,GAAiB,CAAjB;AACD;;AAED,UAAII,GAAG,GAAG;AACR7G,QAAAA,CAAC,EAAEuB,QAAQ,CAACvB,CAAT,GAAasB,UAAU,CAACtB,CADnB;AAERC,QAAAA,CAAC,EAAEsB,QAAQ,CAACtB,CAAT,GAAaqB,UAAU,CAACrB;AAFnB,OAAV;AAIA,UAAI6G,SAAS,GAAGlC,IAAI,CAACmC,KAAL,CAAWF,GAAG,CAAC5G,CAAf,EAAkB4G,GAAG,CAAC7G,CAAtB,CAAhB;AACA4G,MAAAA,QAAQ,GAAG;AACT5G,QAAAA,CAAC,EAAEiB,GAAG,CAACuF,WAAJ,GAAkB5B,IAAI,CAACoC,GAAL,CAAS,CAACpC,IAAI,CAACC,EAAN,GAAW,CAAX,GAAeiC,SAAxB,CAAlB,GAAuDJ,QAAQ,CAAC1G,CAD1D;AAETC,QAAAA,CAAC,EAAEgB,GAAG,CAACuF,WAAJ,GAAkB5B,IAAI,CAACqC,GAAL,CAAS,CAACrC,IAAI,CAACC,EAAN,GAAW,CAAX,GAAeiC,SAAxB,CAAlB,GAAuDJ,QAAQ,CAACzG;AAF1D,OAAX;AAIA0G,MAAAA,MAAM,GAAG/H,uBAAuB,CAAC0C,UAAD,EAAasF,QAAb,EAAuBrF,QAAvB,CAAhC;AACD;;AAED,QAAIuB,MAAM,GAAGnE,QAAQ,CAAC2C,UAAD,EAAaqF,MAAb,CAArB;AACA,QAAInF,aAAa,GAAG,CAAC;AACnBxB,MAAAA,CAAC,EAAE8C,MADgB;AAEnB7C,MAAAA,CAAC,EAAE6C;AAFgB,KAAD,CAApB;AAIA,WAAOtB,aAAP;AACD,GAlEuB;AAmExBd,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC,MAAjB,EAAyB;AAChC,QAAIC,IAAI,GAAG,EAAX;AACAA,IAAAA,IAAI,CAACG,IAAL,CAAU,CAAC,GAAD,EAAMJ,MAAM,CAAC,CAAD,CAAN,CAAUX,CAAhB,EAAmBW,MAAM,CAAC,CAAD,CAAN,CAAUV,CAA7B,CAAV,EAFgC,CAEY;;AAE5C,QAAIU,MAAM,CAACuG,MAAP,KAAkB,CAAtB,EAAyB;AACvBtG,MAAAA,IAAI,CAACG,IAAL,CAAU,CAAC,GAAD,EAAMJ,MAAM,CAAC,CAAD,CAAN,CAAUX,CAAhB,EAAmBW,MAAM,CAAC,CAAD,CAAN,CAAUV,CAA7B,CAAV;AACD,KAFD,MAEO;AACLW,MAAAA,IAAI,CAACG,IAAL,CAAU,CAAC,GAAD,EAAMJ,MAAM,CAAC,CAAD,CAAN,CAAUX,CAAhB,EAAmBW,MAAM,CAAC,CAAD,CAAN,CAAUV,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,KAAKwG,SAA3C,EAAsD9F,MAAM,CAAC,CAAD,CAAN,CAAUX,CAAhE,EAAmEW,MAAM,CAAC,CAAD,CAAN,CAAUV,CAA7E,CAAV;AACD;;AAED,WAAOW,IAAP;AACD;AA9EuB,CAA1B,EA+EG,aA/EH;AAgFA5B,KAAK,CAACsH,YAAN,CAAmB,WAAnB,EAAgC;AAC9Ba,EAAAA,aAAa,EAAE,GADe;AAE9BX,EAAAA,WAAW,EAAE,CAAC,EAFgB;AAG9B/E,EAAAA,gBAAgB,EAAE,SAASA,gBAAT,CAA0BR,GAA1B,EAA+B;AAC/C,QAAIO,aAAa,GAAGP,GAAG,CAACO,aAAxB,CAD+C,CACR;;AAEvC,QAAI,CAACA,aAAD,IAAkB,CAACA,aAAa,CAAC0F,MAArC,EAA6C;AAC3C,UAAI5F,UAAU,GAAGL,GAAG,CAACK,UAArB;AAAA,UACIC,QAAQ,GAAGN,GAAG,CAACM,QADnB;AAEA,UAAIN,GAAG,CAACuF,WAAJ,KAAoBD,SAAxB,EAAmCtF,GAAG,CAACuF,WAAJ,GAAkB,KAAKA,WAAvB;AACnC,UAAIvF,GAAG,CAACkG,aAAJ,KAAsBZ,SAA1B,EAAqCtF,GAAG,CAACkG,aAAJ,GAAoB,KAAKA,aAAzB;AACrC,UAAI3I,OAAO,CAAC,KAAKgI,WAAN,CAAX,EAA+BvF,GAAG,CAACuF,WAAJ,GAAkBvF,GAAG,CAACuF,WAAJ,CAAgB,CAAhB,CAAlB;AAC/B,UAAIhI,OAAO,CAAC,KAAK2I,aAAN,CAAX,EAAiClG,GAAG,CAACkG,aAAJ,GAAoBlG,GAAG,CAACuF,WAAJ,CAAgB,CAAhB,CAApB;AACjC,UAAIY,UAAU,GAAGvI,eAAe,CAACyC,UAAD,EAAaC,QAAb,EAAuBN,GAAG,CAACkG,aAA3B,EAA0ClG,GAAG,CAACuF,WAA9C,CAAhC;AACAhF,MAAAA,aAAa,GAAG,CAAC4F,UAAD,CAAhB;AACD;;AAED,WAAO5F,aAAP;AACD,GAlB6B;AAmB9Bd,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC,MAAjB,EAAyB;AAChC,QAAIC,IAAI,GAAG,EAAX;AACAA,IAAAA,IAAI,CAACG,IAAL,CAAU,CAAC,GAAD,EAAMJ,MAAM,CAAC,CAAD,CAAN,CAAUX,CAAhB,EAAmBW,MAAM,CAAC,CAAD,CAAN,CAAUV,CAA7B,CAAV;AACAW,IAAAA,IAAI,CAACG,IAAL,CAAU,CAAC,GAAD,EAAMJ,MAAM,CAAC,CAAD,CAAN,CAAUX,CAAhB,EAAmBW,MAAM,CAAC,CAAD,CAAN,CAAUV,CAA7B,EAAgCU,MAAM,CAAC,CAAD,CAAN,CAAUX,CAA1C,EAA6CW,MAAM,CAAC,CAAD,CAAN,CAAUV,CAAvD,CAAV;AACA,WAAOW,IAAP;AACD;AAxB6B,CAAhC,EAyBG,aAzBH;AA0BA5B,KAAK,CAACsH,YAAN,CAAmB,OAAnB,EAA4B;AAC1Ba,EAAAA,aAAa,EAAE,CAAC,IAAI,CAAL,EAAQ,IAAI,CAAZ,CADW;AAE1BX,EAAAA,WAAW,EAAE,CAAC,CAAC,EAAF,EAAM,EAAN,CAFa;AAG1B/E,EAAAA,gBAAgB,EAAE,SAASA,gBAAT,CAA0BR,GAA1B,EAA+B;AAC/C,QAAIO,aAAa,GAAGP,GAAG,CAACO,aAAxB,CAD+C,CACR;;AAEvC,QAAIP,GAAG,CAACuF,WAAJ,KAAoBD,SAAxB,EAAmCtF,GAAG,CAACuF,WAAJ,GAAkB,KAAKA,WAAvB;AACnC,QAAIvF,GAAG,CAACkG,aAAJ,KAAsBZ,SAA1B,EAAqCtF,GAAG,CAACkG,aAAJ,GAAoB,KAAKA,aAAzB;AACrC,QAAI5I,QAAQ,CAAC0C,GAAG,CAACuF,WAAL,CAAZ,EAA+BvF,GAAG,CAACuF,WAAJ,GAAkB,CAACvF,GAAG,CAACuF,WAAL,EAAkB,CAACvF,GAAG,CAACuF,WAAvB,CAAlB;AAC/B,QAAIjI,QAAQ,CAAC0C,GAAG,CAACkG,aAAL,CAAZ,EAAiClG,GAAG,CAACkG,aAAJ,GAAoB,CAAClG,GAAG,CAACkG,aAAL,EAAoB,IAAIlG,GAAG,CAACkG,aAA5B,CAApB;;AAEjC,QAAI,CAAC3F,aAAD,IAAkB,CAACA,aAAa,CAAC0F,MAAjC,IAA2C1F,aAAa,CAAC0F,MAAd,GAAuB,CAAtE,EAAyE;AACvE,UAAI5F,UAAU,GAAGL,GAAG,CAACK,UAArB;AAAA,UACIC,QAAQ,GAAGN,GAAG,CAACM,QADnB;AAEA,UAAI8F,WAAW,GAAGxI,eAAe,CAACyC,UAAD,EAAaC,QAAb,EAAuBN,GAAG,CAACkG,aAAJ,CAAkB,CAAlB,CAAvB,EAA6ClG,GAAG,CAACuF,WAAJ,CAAgB,CAAhB,CAA7C,CAAjC;AACA,UAAIc,WAAW,GAAGzI,eAAe,CAACyC,UAAD,EAAaC,QAAb,EAAuBN,GAAG,CAACkG,aAAJ,CAAkB,CAAlB,CAAvB,EAA6ClG,GAAG,CAACuF,WAAJ,CAAgB,CAAhB,CAA7C,CAAjC;AACAhF,MAAAA,aAAa,GAAG,CAAC6F,WAAD,EAAcC,WAAd,CAAhB;AACD;;AAED,WAAO9F,aAAP;AACD,GApByB;AAqB1Bd,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC,MAAjB,EAAyB;AAChC,QAAIC,IAAI,GAAG,EAAX;AACAA,IAAAA,IAAI,CAACG,IAAL,CAAU,CAAC,GAAD,EAAMJ,MAAM,CAAC,CAAD,CAAN,CAAUX,CAAhB,EAAmBW,MAAM,CAAC,CAAD,CAAN,CAAUV,CAA7B,CAAV;AACAW,IAAAA,IAAI,CAACG,IAAL,CAAU,CAAC,GAAD,EAAMJ,MAAM,CAAC,CAAD,CAAN,CAAUX,CAAhB,EAAmBW,MAAM,CAAC,CAAD,CAAN,CAAUV,CAA7B,EAAgCU,MAAM,CAAC,CAAD,CAAN,CAAUX,CAA1C,EAA6CW,MAAM,CAAC,CAAD,CAAN,CAAUV,CAAvD,EAA0DU,MAAM,CAAC,CAAD,CAAN,CAAUX,CAApE,EAAuEW,MAAM,CAAC,CAAD,CAAN,CAAUV,CAAjF,CAAV;AACA,WAAOW,IAAP;AACD;AA1ByB,CAA5B,EA2BG,aA3BH,E,CA2BmB;;AAEnB5B,KAAK,CAACsH,YAAN,CAAmB,gBAAnB,EAAqC;AACnCa,EAAAA,aAAa,EAAE,CAAC,IAAI,CAAL,EAAQ,IAAI,CAAZ,CADoB;AAEnCI,EAAAA,cAAc,EAAE,CAAC,CAAD,EAAI,CAAJ,CAFmB;AAGnCf,EAAAA,WAAW,EAAED,SAHsB;AAInC9E,EAAAA,gBAAgB,EAAE,SAASA,gBAAT,CAA0BR,GAA1B,EAA+B;AAC/C,QAAIK,UAAU,GAAGL,GAAG,CAACK,UAArB;AAAA,QACIC,QAAQ,GAAGN,GAAG,CAACM,QADnB;AAEA,QAAIN,GAAG,CAACkG,aAAJ,KAAsBZ,SAA1B,EAAqCtF,GAAG,CAACkG,aAAJ,GAAoB,KAAKA,aAAzB;AACrC,QAAIlG,GAAG,CAACuF,WAAJ,KAAoBD,SAAxB,EAAmCtF,GAAG,CAACuF,WAAJ,GAAkB,KAAKA,WAAvB;AACnC,QAAIvF,GAAG,CAACsG,cAAJ,KAAuBhB,SAA3B,EAAsCtF,GAAG,CAACsG,cAAJ,GAAqB,KAAKA,cAA1B;AACtC,QAAIhJ,QAAQ,CAAC0C,GAAG,CAACuF,WAAL,CAAZ,EAA+BvF,GAAG,CAACuF,WAAJ,GAAkB,CAACvF,GAAG,CAACuF,WAAL,EAAkB,CAACvF,GAAG,CAACuF,WAAvB,CAAlB;AAC/B,QAAIjI,QAAQ,CAAC0C,GAAG,CAACsG,cAAL,CAAZ,EAAkCtG,GAAG,CAACsG,cAAJ,GAAqB,CAACtG,GAAG,CAACsG,cAAL,EAAqB,CAACtG,GAAG,CAACsG,cAA1B,CAArB;AAClC,QAAIhJ,QAAQ,CAAC0C,GAAG,CAACkG,aAAL,CAAZ,EAAiClG,GAAG,CAACkG,aAAJ,GAAoB,CAAClG,GAAG,CAACkG,aAAL,EAAoB,IAAIlG,GAAG,CAACkG,aAA5B,CAApB;AACjC,QAAIK,KAAK,GAAGjG,QAAQ,CAACtB,CAAT,GAAaqB,UAAU,CAACrB,CAApC;AACA,QAAIuG,WAAW,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAlB;;AAEA,QAAIvF,GAAG,CAACuF,WAAR,EAAqB;AACnBA,MAAAA,WAAW,GAAGvF,GAAG,CAACuF,WAAlB;AACD,KAFD,MAEO,IAAI5B,IAAI,CAAC6C,GAAL,CAASD,KAAT,IAAkB5C,IAAI,CAAC6C,GAAL,CAASxG,GAAG,CAACsG,cAAJ,CAAmB,CAAnB,CAAT,CAAtB,EAAuD;AAC5Df,MAAAA,WAAW,GAAGvF,GAAG,CAACsG,cAAlB;AACD;;AAED,QAAIF,WAAW,GAAG;AAChBrH,MAAAA,CAAC,EAAEsB,UAAU,CAACtB,CADE;AAEhBC,MAAAA,CAAC,EAAEqB,UAAU,CAACrB,CAAX,GAAeuH,KAAK,GAAG,KAAKL,aAAL,CAAmB,CAAnB,CAAvB,GAA+CX,WAAW,CAAC,CAAD;AAF7C,KAAlB;AAIA,QAAIc,WAAW,GAAG;AAChBtH,MAAAA,CAAC,EAAEuB,QAAQ,CAACvB,CADI;AAEhBC,MAAAA,CAAC,EAAEsB,QAAQ,CAACtB,CAAT,GAAauH,KAAK,GAAG,KAAKL,aAAL,CAAmB,CAAnB,CAArB,GAA6CX,WAAW,CAAC,CAAD;AAF3C,KAAlB;AAIA,WAAO,CAACa,WAAD,EAAcC,WAAd,CAAP;AACD;AA/BkC,CAArC,EAgCG,OAhCH,E,CAgCa;;AAEbtI,KAAK,CAACsH,YAAN,CAAmB,kBAAnB,EAAuC;AACrCa,EAAAA,aAAa,EAAE,CAAC,IAAI,CAAL,EAAQ,IAAI,CAAZ,CADsB;AAErCI,EAAAA,cAAc,EAAE,CAAC,CAAD,EAAI,CAAJ,CAFqB;AAGrCf,EAAAA,WAAW,EAAED,SAHwB;AAIrC9E,EAAAA,gBAAgB,EAAE,SAASA,gBAAT,CAA0BR,GAA1B,EAA+B;AAC/C,QAAIK,UAAU,GAAGL,GAAG,CAACK,UAArB;AAAA,QACIC,QAAQ,GAAGN,GAAG,CAACM,QADnB;AAEA,QAAIN,GAAG,CAACkG,aAAJ,KAAsBZ,SAA1B,EAAqCtF,GAAG,CAACkG,aAAJ,GAAoB,KAAKA,aAAzB;AACrC,QAAIlG,GAAG,CAACuF,WAAJ,KAAoBD,SAAxB,EAAmCtF,GAAG,CAACuF,WAAJ,GAAkB,KAAKA,WAAvB;AACnC,QAAIvF,GAAG,CAACsG,cAAJ,KAAuBhB,SAA3B,EAAsCtF,GAAG,CAACsG,cAAJ,GAAqB,KAAKA,cAA1B;AACtC,QAAIhJ,QAAQ,CAAC0C,GAAG,CAACuF,WAAL,CAAZ,EAA+BvF,GAAG,CAACuF,WAAJ,GAAkB,CAACvF,GAAG,CAACuF,WAAL,EAAkB,CAACvF,GAAG,CAACuF,WAAvB,CAAlB;AAC/B,QAAIjI,QAAQ,CAAC0C,GAAG,CAACsG,cAAL,CAAZ,EAAkCtG,GAAG,CAACsG,cAAJ,GAAqB,CAACtG,GAAG,CAACsG,cAAL,EAAqB,CAACtG,GAAG,CAACsG,cAA1B,CAArB;AAClC,QAAIhJ,QAAQ,CAAC0C,GAAG,CAACkG,aAAL,CAAZ,EAAiClG,GAAG,CAACkG,aAAJ,GAAoB,CAAClG,GAAG,CAACkG,aAAL,EAAoB,IAAIlG,GAAG,CAACkG,aAA5B,CAApB;AACjC,QAAIO,KAAK,GAAGnG,QAAQ,CAACvB,CAAT,GAAasB,UAAU,CAACtB,CAApC;AACA,QAAIwG,WAAW,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAlB;;AAEA,QAAIvF,GAAG,CAACuF,WAAR,EAAqB;AACnBA,MAAAA,WAAW,GAAGvF,GAAG,CAACuF,WAAlB;AACD,KAFD,MAEO,IAAI5B,IAAI,CAAC6C,GAAL,CAASC,KAAT,IAAkB9C,IAAI,CAAC6C,GAAL,CAASxG,GAAG,CAACsG,cAAJ,CAAmB,CAAnB,CAAT,CAAtB,EAAuD;AAC5Df,MAAAA,WAAW,GAAGvF,GAAG,CAACsG,cAAlB;AACD;;AAED,QAAIF,WAAW,GAAG;AAChBrH,MAAAA,CAAC,EAAEsB,UAAU,CAACtB,CAAX,GAAe0H,KAAK,GAAG,KAAKP,aAAL,CAAmB,CAAnB,CAAvB,GAA+CX,WAAW,CAAC,CAAD,CAD7C;AAEhBvG,MAAAA,CAAC,EAAEqB,UAAU,CAACrB;AAFE,KAAlB;AAIA,QAAIqH,WAAW,GAAG;AAChBtH,MAAAA,CAAC,EAAEuB,QAAQ,CAACvB,CAAT,GAAa0H,KAAK,GAAG,KAAKP,aAAL,CAAmB,CAAnB,CAArB,GAA6CX,WAAW,CAAC,CAAD,CAD3C;AAEhBvG,MAAAA,CAAC,EAAEsB,QAAQ,CAACtB;AAFI,KAAlB;AAIA,QAAIuB,aAAa,GAAG,CAAC6F,WAAD,EAAcC,WAAd,CAApB;AACA,WAAO9F,aAAP;AACD;AAhCoC,CAAvC,EAiCG,OAjCH;AAkCAxC,KAAK,CAACsH,YAAN,CAAmB,MAAnB,EAA2B;AACzBjF,EAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBJ,GAAvB,EAA4B;AACzC,WAAOvC,WAAW,CAACuC,GAAD,CAAlB;AACD,GAHwB;AAIzBQ,EAAAA,gBAAgB,EAAE,SAASA,gBAAT,CAA0BR,GAA1B,EAA+B;AAC/C,WAAOA,GAAG,CAACO,aAAX;AACD,GANwB;AAOzBmG,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmB1G,GAAnB,EAAwB;AACjCA,IAAAA,GAAG,CAACO,aAAJ,GAAoB+E,SAApB;AACD,GATwB;AAUzBqB,EAAAA,WAAW,EAAE,SAASA,WAAT,CAAqB3G,GAArB,EAA0B;AACrCA,IAAAA,GAAG,CAACO,aAAJ,GAAoB+E,SAApB;AACD;AAZwB,CAA3B,EAaG,OAbH","sourcesContent":["/**\n * @fileOverview 自定义边\n * @description 自定义边中有大量逻辑同自定义节点重复，虽然可以提取成为 mixin ，但是考虑到代码的可读性，还是单独实现。\n */\nimport { __assign } from \"tslib\";\nimport { deepMix, mix, each, isNil, isNumber, isArray } from '@antv/util';\nimport { getLabelPosition, getLoopCfgs } from '../util/graphic';\nimport { distance, getCircleCenterByPoints } from '../util/math';\nimport { getControlPoint, getSpline } from '../util/path';\nimport Global from '../global';\nimport Shape from './shape';\nimport { shapeBase, CLS_LABEL_BG_SUFFIX } from './shapeBase';\nvar CLS_SHAPE = 'edge-shape'; // start,end 倒置，center 不变\n\nfunction revertAlign(labelPosition) {\n  var textAlign = labelPosition;\n\n  if (labelPosition === 'start') {\n    textAlign = 'end';\n  } else if (labelPosition === 'end') {\n    textAlign = 'start';\n  }\n\n  return textAlign;\n}\n\nvar singleEdge = {\n  itemType: 'edge',\n\n  /**\n   * 文本的位置\n   * @type {String}\n   */\n  labelPosition: 'center',\n\n  /**\n   * 文本的 x 偏移\n   * @type {Number}\n   */\n  refX: 0,\n\n  /**\n   * 文本的 y 偏移\n   * @type {Number}\n   */\n  refY: 0,\n\n  /**\n   * 文本是否跟着线自动旋转，默认 false\n   * @type {Boolean}\n   */\n  labelAutoRotate: false,\n  // 自定义边时的配置\n  options: {\n    size: Global.defaultEdge.size,\n    style: {\n      x: 0,\n      y: 0,\n      stroke: Global.defaultEdge.style.stroke,\n      lineAppendWidth: Global.defaultEdge.style.lineAppendWidth\n    },\n    labelCfg: {\n      style: {\n        fill: Global.edgeLabel.style.fill,\n        fontSize: Global.edgeLabel.style.fontSize\n      }\n    },\n    stateStyles: __assign({}, Global.edgeStateStyles)\n  },\n\n  /**\n   * 获取边的 path\n   * @internal 供扩展的边覆盖\n   * @param  {Array} points 构成边的点的集合\n   * @return {Array} 构成 path 的数组\n   */\n  getPath: function getPath(points) {\n    var path = [];\n    each(points, function (point, index) {\n      if (index === 0) {\n        path.push(['M', point.x, point.y]);\n      } else {\n        path.push(['L', point.x, point.y]);\n      }\n    });\n    return path;\n  },\n  getShapeStyle: function getShapeStyle(cfg) {\n    var defaultStyle = this.options.style;\n    var strokeStyle = {\n      stroke: cfg.color\n    }; // 如果设置了color，则覆盖默认的stroke属性\n\n    var style = mix({}, defaultStyle, strokeStyle, cfg.style);\n    var size = cfg.size || Global.defaultEdge.size;\n    cfg = this.getPathPoints(cfg);\n    var startPoint = cfg.startPoint,\n        endPoint = cfg.endPoint;\n    var controlPoints = this.getControlPoints(cfg);\n    var points = [startPoint]; // 添加起始点\n    // 添加控制点\n\n    if (controlPoints) {\n      points = points.concat(controlPoints);\n    } // 添加结束点\n\n\n    points.push(endPoint);\n    var path = this.getPath(points);\n    var styles = mix({}, Global.defaultEdge.style, {\n      stroke: Global.defaultEdge.color,\n      lineWidth: size,\n      path: path\n    }, style);\n    return styles;\n  },\n  updateShapeStyle: function updateShapeStyle(cfg, item) {\n    var group = item.getContainer();\n    var strokeStyle = {\n      stroke: cfg.color\n    };\n    var shape = group.find(function (element) {\n      return element.get('className') === 'edge-shape';\n    }) || item.getKeyShape();\n    var size = cfg.size;\n    cfg = this.getPathPoints(cfg);\n    var startPoint = cfg.startPoint,\n        endPoint = cfg.endPoint;\n    var controlPoints = this.getControlPoints(cfg); // || cfg.controlPoints;\n\n    var points = [startPoint]; // 添加起始点\n    // 添加控制点\n\n    if (controlPoints) {\n      points = points.concat(controlPoints);\n    } // 添加结束点\n\n\n    points.push(endPoint);\n    var currentAttr = shape.attr();\n    var previousStyle = mix({}, strokeStyle, currentAttr, cfg.style);\n    var source = cfg.sourceNode;\n    var target = cfg.targetNode;\n    var routeCfg = {\n      radius: previousStyle.radius\n    };\n\n    if (!controlPoints) {\n      routeCfg = {\n        source: source,\n        target: target,\n        offset: previousStyle.offset,\n        radius: previousStyle.radius\n      };\n    }\n\n    if (currentAttr.endArrow && previousStyle.endArrow === false) {\n      cfg.style.endArrow = {\n        path: ''\n      };\n    }\n\n    if (currentAttr.startArrow && previousStyle.startArrow === false) {// cfg.style.startArrow = {\n      //   path: '',\n      // };\n    }\n\n    var path = this.getPath(points, routeCfg);\n    var style = mix(strokeStyle, shape.attr(), {\n      lineWidth: size,\n      path: path\n    }, cfg.style);\n\n    if (shape) {\n      shape.attr(style);\n    }\n  },\n  getLabelStyleByPosition: function getLabelStyleByPosition(cfg, labelCfg, group) {\n    var labelPosition = labelCfg.position || this.labelPosition; // 文本的位置用户可以传入\n\n    var style = {};\n    var pathShape = group && group.find(function (element) {\n      return element.get('className') === CLS_SHAPE;\n    }); // 不对 pathShape 进行判空，如果线不存在，说明有问题了\n\n    var pointPercent;\n\n    if (labelPosition === 'start') {\n      pointPercent = 0;\n    } else if (labelPosition === 'end') {\n      pointPercent = 1;\n    } else {\n      pointPercent = 0.5;\n    } // 偏移量\n\n\n    var offsetX = labelCfg.refX || this.refX;\n    var offsetY = labelCfg.refY || this.refY; // 如果两个节点重叠，线就变成了一个点，这时候label的位置，就是这个点 + 绝对偏移\n\n    if (cfg.startPoint.x === cfg.endPoint.x && cfg.startPoint.y === cfg.endPoint.y) {\n      style.x = cfg.startPoint.x + offsetX;\n      style.y = cfg.startPoint.y + offsetY;\n      style.text = cfg.label;\n      return style;\n    }\n\n    var autoRotate;\n    if (isNil(labelCfg.autoRotate)) autoRotate = this.labelAutoRotate;else autoRotate = labelCfg.autoRotate;\n    var offsetStyle = getLabelPosition(pathShape, pointPercent, offsetX, offsetY, autoRotate);\n    style.x = offsetStyle.x;\n    style.y = offsetStyle.y;\n    style.rotate = offsetStyle.rotate;\n    style.textAlign = this._getTextAlign(labelPosition, offsetStyle.angle);\n    style.text = cfg.label;\n    return style;\n  },\n  getLabelBgStyleByPosition: function getLabelBgStyleByPosition(label, cfg, labelCfg, group) {\n    if (!label) {\n      return {};\n    }\n\n    var bbox = label.getBBox();\n    var backgroundStyle = labelCfg.style && labelCfg.style.background;\n\n    if (!backgroundStyle) {\n      return {};\n    }\n\n    var padding = backgroundStyle.padding;\n    var backgroundWidth = bbox.width + padding[1] + padding[3];\n    var backgroundHeight = bbox.height + padding[0] + padding[2];\n    var labelPosition = labelCfg.position || this.labelPosition;\n\n    var style = __assign(__assign({}, backgroundStyle), {\n      width: backgroundWidth,\n      height: backgroundHeight,\n      x: bbox.minX - padding[2],\n      y: bbox.minY - padding[0],\n      rotate: 0\n    });\n\n    var autoRotate;\n    if (isNil(labelCfg.autoRotate)) autoRotate = this.labelAutoRotate;else autoRotate = labelCfg.autoRotate;\n    var pathShape = group && group.find(function (element) {\n      return element.get('className') === CLS_SHAPE;\n    }); // 不对 pathShape 进行判空，如果线不存在，说明有问题了\n\n    var pointPercent;\n\n    if (labelPosition === 'start') {\n      pointPercent = 0;\n    } else if (labelPosition === 'end') {\n      pointPercent = 1;\n    } else {\n      pointPercent = 0.5;\n    } // 偏移量\n\n\n    var offsetX = labelCfg.refX || this.refX;\n    var offsetY = labelCfg.refY || this.refY; // // 如果两个节点重叠，线就变成了一个点，这时候label的位置，就是这个点 + 绝对偏移\n\n    if (cfg.startPoint.x === cfg.endPoint.x && cfg.startPoint.y === cfg.endPoint.y) {\n      style.x = cfg.startPoint.x + offsetX - backgroundWidth / 2;\n      style.y = cfg.startPoint.y + offsetY - backgroundHeight / 2;\n      return style;\n    }\n\n    var offsetStyle = getLabelPosition(pathShape, pointPercent, offsetX - backgroundWidth / 2, offsetY + backgroundHeight / 2, autoRotate);\n    var rad = offsetStyle.angle;\n\n    if (rad > 1 / 2 * Math.PI && rad < 3 * 1 / 2 * Math.PI) {\n      offsetStyle = getLabelPosition(pathShape, pointPercent, offsetX + backgroundWidth / 2, offsetY + backgroundHeight / 2, autoRotate);\n    }\n\n    if (autoRotate) {\n      style.x = offsetStyle.x;\n      style.y = offsetStyle.y;\n    }\n\n    style.rotate = offsetStyle.rotate;\n    return style;\n  },\n  // 获取文本对齐方式\n  _getTextAlign: function _getTextAlign(labelPosition, angle) {\n    var textAlign = 'center';\n\n    if (!angle) {\n      return labelPosition;\n    }\n\n    angle = angle % (Math.PI * 2); // 取模\n\n    if (labelPosition !== 'center') {\n      if (angle >= 0 && angle <= Math.PI / 2 || angle >= 3 / 2 * Math.PI && angle < 2 * Math.PI) {\n        textAlign = labelPosition;\n      } else {\n        textAlign = revertAlign(labelPosition);\n      }\n    }\n\n    return textAlign;\n  },\n\n  /**\n   * @internal 获取边的控制点\n   * @param  {Object} cfg 边的配置项\n   * @return {Array} 控制点的数组\n   */\n  getControlPoints: function getControlPoints(cfg) {\n    return cfg.controlPoints;\n  },\n\n  /**\n   * @internal 处理需要重计算点和边的情况\n   * @param {Object} cfg 边的配置项\n   * @return {Object} 边的配置项\n   */\n  getPathPoints: function getPathPoints(cfg) {\n    return cfg;\n  },\n\n  /**\n   * 绘制边\n   * @override\n   * @param  {Object} cfg   边的配置项\n   * @param  {G.Group} group 边的容器\n   * @return {IShape} 图形\n   */\n  drawShape: function drawShape(cfg, group) {\n    var shapeStyle = this.getShapeStyle(cfg);\n    var shape = group.addShape('path', {\n      className: CLS_SHAPE,\n      name: CLS_SHAPE,\n      attrs: shapeStyle\n    });\n    return shape;\n  },\n  drawLabel: function drawLabel(cfg, group) {\n    var defaultLabelCfg = this.options.labelCfg;\n    var defaultFontFamily;\n    if (typeof window !== 'undefined') defaultFontFamily = window.getComputedStyle(document.body, null).getPropertyValue('font-family') || 'Arial, sans-serif';else defaultFontFamily = 'Arial, sans-serif';\n    var labelCfg = deepMix({\n      fontFamily: defaultFontFamily\n    }, defaultLabelCfg, cfg.labelCfg);\n    var labelStyle = this.getLabelStyle(cfg, labelCfg, group);\n    var rotate = labelStyle.rotate;\n    delete labelStyle.rotate;\n    var label = group.addShape('text', {\n      attrs: labelStyle,\n      name: 'text-shape'\n    });\n\n    if (rotate) {\n      label.rotateAtStart(rotate);\n    }\n\n    if (labelStyle.background) {\n      var rect = this.drawLabelBg(cfg, group, label);\n      var labelBgClassname = this.itemType + CLS_LABEL_BG_SUFFIX;\n      rect.set('classname', labelBgClassname);\n      label.toFront();\n    }\n\n    return label;\n  },\n  drawLabelBg: function drawLabelBg(cfg, group, label) {\n    var defaultLabelCfg = this.options.labelCfg;\n    var labelCfg = deepMix({}, defaultLabelCfg, cfg.labelCfg);\n    var labelStyle = this.getLabelStyle(cfg, labelCfg, group);\n    var rotate = labelStyle.rotate;\n    var style = this.getLabelBgStyleByPosition(label, cfg, labelCfg, group);\n    delete style.rotate;\n    var rect = group.addShape('rect', {\n      name: 'text-bg-shape',\n      attrs: style\n    });\n    if (rotate) rect.rotateAtStart(rotate);\n    return rect;\n  }\n};\n\nvar singleEdgeDef = __assign(__assign({}, shapeBase), singleEdge);\n\nShape.registerEdge('single-edge', singleEdgeDef); // 直线, 不支持控制点\n\nShape.registerEdge('line', {\n  // 控制点不生效\n  getControlPoints: function getControlPoints() {\n    return undefined;\n  }\n}, 'single-edge'); // 直线\n\nShape.registerEdge('spline', {\n  getPath: function getPath(points) {\n    var path = getSpline(points);\n    return path;\n  }\n}, 'single-edge');\nShape.registerEdge('arc', {\n  curveOffset: 20,\n  clockwise: 1,\n  getControlPoints: function getControlPoints(cfg) {\n    var startPoint = cfg.startPoint,\n        endPoint = cfg.endPoint;\n    var midPoint = {\n      x: (startPoint.x + endPoint.x) / 2,\n      y: (startPoint.y + endPoint.y) / 2\n    };\n    var center;\n    var arcPoint; // 根据给定点计算圆弧\n\n    if (cfg.controlPoints !== undefined) {\n      arcPoint = cfg.controlPoints[0];\n      center = getCircleCenterByPoints(startPoint, arcPoint, endPoint); // 根据控制点和直线关系决定 clockwise值\n\n      if (startPoint.x <= endPoint.x && startPoint.y > endPoint.y) {\n        this.clockwise = center.x > arcPoint.x ? 0 : 1;\n      } else if (startPoint.x <= endPoint.x && startPoint.y < endPoint.y) {\n        this.clockwise = center.x > arcPoint.x ? 1 : 0;\n      } else if (startPoint.x > endPoint.x && startPoint.y <= endPoint.y) {\n        this.clockwise = center.y < arcPoint.y ? 0 : 1;\n      } else {\n        this.clockwise = center.y < arcPoint.y ? 1 : 0;\n      } // 若给定点和两端点共线，无法生成圆弧，绘制直线\n\n\n      if ((arcPoint.x - startPoint.x) / (arcPoint.y - startPoint.y) === (endPoint.x - startPoint.x) / (endPoint.y - startPoint.y)) {\n        return [];\n      }\n    } else {\n      // 根据直线连线中点的的偏移计算圆弧\n      // 若用户给定偏移量则根据其计算，否则按照默认偏移值计算\n      if (cfg.curveOffset === undefined) {\n        cfg.curveOffset = this.curveOffset;\n      }\n\n      if (isArray(cfg.curveOffset)) {\n        cfg.curveOffset = cfg.curveOffset[0];\n      }\n\n      if (cfg.curveOffset < 0) {\n        this.clockwise = 0;\n      } else {\n        this.clockwise = 1;\n      }\n\n      var vec = {\n        x: endPoint.x - startPoint.x,\n        y: endPoint.y - startPoint.y\n      };\n      var edgeAngle = Math.atan2(vec.y, vec.x);\n      arcPoint = {\n        x: cfg.curveOffset * Math.cos(-Math.PI / 2 + edgeAngle) + midPoint.x,\n        y: cfg.curveOffset * Math.sin(-Math.PI / 2 + edgeAngle) + midPoint.y\n      };\n      center = getCircleCenterByPoints(startPoint, arcPoint, endPoint);\n    }\n\n    var radius = distance(startPoint, center);\n    var controlPoints = [{\n      x: radius,\n      y: radius\n    }];\n    return controlPoints;\n  },\n  getPath: function getPath(points) {\n    var path = [];\n    path.push(['M', points[0].x, points[0].y]); // 控制点与端点共线\n\n    if (points.length === 2) {\n      path.push(['L', points[1].x, points[1].y]);\n    } else {\n      path.push(['A', points[1].x, points[1].y, 0, 0, this.clockwise, points[2].x, points[2].y]);\n    }\n\n    return path;\n  }\n}, 'single-edge');\nShape.registerEdge('quadratic', {\n  curvePosition: 0.5,\n  curveOffset: -20,\n  getControlPoints: function getControlPoints(cfg) {\n    var controlPoints = cfg.controlPoints; // 指定controlPoints\n\n    if (!controlPoints || !controlPoints.length) {\n      var startPoint = cfg.startPoint,\n          endPoint = cfg.endPoint;\n      if (cfg.curveOffset === undefined) cfg.curveOffset = this.curveOffset;\n      if (cfg.curvePosition === undefined) cfg.curvePosition = this.curvePosition;\n      if (isArray(this.curveOffset)) cfg.curveOffset = cfg.curveOffset[0];\n      if (isArray(this.curvePosition)) cfg.curvePosition = cfg.curveOffset[0];\n      var innerPoint = getControlPoint(startPoint, endPoint, cfg.curvePosition, cfg.curveOffset);\n      controlPoints = [innerPoint];\n    }\n\n    return controlPoints;\n  },\n  getPath: function getPath(points) {\n    var path = [];\n    path.push(['M', points[0].x, points[0].y]);\n    path.push(['Q', points[1].x, points[1].y, points[2].x, points[2].y]);\n    return path;\n  }\n}, 'single-edge');\nShape.registerEdge('cubic', {\n  curvePosition: [1 / 2, 1 / 2],\n  curveOffset: [-20, 20],\n  getControlPoints: function getControlPoints(cfg) {\n    var controlPoints = cfg.controlPoints; // 指定controlPoints\n\n    if (cfg.curveOffset === undefined) cfg.curveOffset = this.curveOffset;\n    if (cfg.curvePosition === undefined) cfg.curvePosition = this.curvePosition;\n    if (isNumber(cfg.curveOffset)) cfg.curveOffset = [cfg.curveOffset, -cfg.curveOffset];\n    if (isNumber(cfg.curvePosition)) cfg.curvePosition = [cfg.curvePosition, 1 - cfg.curvePosition];\n\n    if (!controlPoints || !controlPoints.length || controlPoints.length < 2) {\n      var startPoint = cfg.startPoint,\n          endPoint = cfg.endPoint;\n      var innerPoint1 = getControlPoint(startPoint, endPoint, cfg.curvePosition[0], cfg.curveOffset[0]);\n      var innerPoint2 = getControlPoint(startPoint, endPoint, cfg.curvePosition[1], cfg.curveOffset[1]);\n      controlPoints = [innerPoint1, innerPoint2];\n    }\n\n    return controlPoints;\n  },\n  getPath: function getPath(points) {\n    var path = [];\n    path.push(['M', points[0].x, points[0].y]);\n    path.push(['C', points[1].x, points[1].y, points[2].x, points[2].y, points[3].x, points[3].y]);\n    return path;\n  }\n}, 'single-edge'); // 垂直方向的三阶贝塞尔曲线，不再考虑用户外部传入的控制点\n\nShape.registerEdge('cubic-vertical', {\n  curvePosition: [1 / 2, 1 / 2],\n  minCurveOffset: [0, 0],\n  curveOffset: undefined,\n  getControlPoints: function getControlPoints(cfg) {\n    var startPoint = cfg.startPoint,\n        endPoint = cfg.endPoint;\n    if (cfg.curvePosition === undefined) cfg.curvePosition = this.curvePosition;\n    if (cfg.curveOffset === undefined) cfg.curveOffset = this.curveOffset;\n    if (cfg.minCurveOffset === undefined) cfg.minCurveOffset = this.minCurveOffset;\n    if (isNumber(cfg.curveOffset)) cfg.curveOffset = [cfg.curveOffset, -cfg.curveOffset];\n    if (isNumber(cfg.minCurveOffset)) cfg.minCurveOffset = [cfg.minCurveOffset, -cfg.minCurveOffset];\n    if (isNumber(cfg.curvePosition)) cfg.curvePosition = [cfg.curvePosition, 1 - cfg.curvePosition];\n    var yDist = endPoint.y - startPoint.y;\n    var curveOffset = [0, 0];\n\n    if (cfg.curveOffset) {\n      curveOffset = cfg.curveOffset;\n    } else if (Math.abs(yDist) < Math.abs(cfg.minCurveOffset[0])) {\n      curveOffset = cfg.minCurveOffset;\n    }\n\n    var innerPoint1 = {\n      x: startPoint.x,\n      y: startPoint.y + yDist * this.curvePosition[0] + curveOffset[0]\n    };\n    var innerPoint2 = {\n      x: endPoint.x,\n      y: endPoint.y - yDist * this.curvePosition[1] + curveOffset[1]\n    };\n    return [innerPoint1, innerPoint2];\n  }\n}, 'cubic'); // 水平方向的三阶贝塞尔曲线，不再考虑用户外部传入的控制点\n\nShape.registerEdge('cubic-horizontal', {\n  curvePosition: [1 / 2, 1 / 2],\n  minCurveOffset: [0, 0],\n  curveOffset: undefined,\n  getControlPoints: function getControlPoints(cfg) {\n    var startPoint = cfg.startPoint,\n        endPoint = cfg.endPoint;\n    if (cfg.curvePosition === undefined) cfg.curvePosition = this.curvePosition;\n    if (cfg.curveOffset === undefined) cfg.curveOffset = this.curveOffset;\n    if (cfg.minCurveOffset === undefined) cfg.minCurveOffset = this.minCurveOffset;\n    if (isNumber(cfg.curveOffset)) cfg.curveOffset = [cfg.curveOffset, -cfg.curveOffset];\n    if (isNumber(cfg.minCurveOffset)) cfg.minCurveOffset = [cfg.minCurveOffset, -cfg.minCurveOffset];\n    if (isNumber(cfg.curvePosition)) cfg.curvePosition = [cfg.curvePosition, 1 - cfg.curvePosition];\n    var xDist = endPoint.x - startPoint.x;\n    var curveOffset = [0, 0];\n\n    if (cfg.curveOffset) {\n      curveOffset = cfg.curveOffset;\n    } else if (Math.abs(xDist) < Math.abs(cfg.minCurveOffset[0])) {\n      curveOffset = cfg.minCurveOffset;\n    }\n\n    var innerPoint1 = {\n      x: startPoint.x + xDist * this.curvePosition[0] + curveOffset[0],\n      y: startPoint.y\n    };\n    var innerPoint2 = {\n      x: endPoint.x - xDist * this.curvePosition[1] + curveOffset[1],\n      y: endPoint.y\n    };\n    var controlPoints = [innerPoint1, innerPoint2];\n    return controlPoints;\n  }\n}, 'cubic');\nShape.registerEdge('loop', {\n  getPathPoints: function getPathPoints(cfg) {\n    return getLoopCfgs(cfg);\n  },\n  getControlPoints: function getControlPoints(cfg) {\n    return cfg.controlPoints;\n  },\n  afterDraw: function afterDraw(cfg) {\n    cfg.controlPoints = undefined;\n  },\n  afterUpdate: function afterUpdate(cfg) {\n    cfg.controlPoints = undefined;\n  }\n}, 'cubic');"]},"metadata":{},"sourceType":"module"}