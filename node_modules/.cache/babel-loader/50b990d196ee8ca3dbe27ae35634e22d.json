{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { get, size, assign, each } from '@antv/util';\nimport Trend from './trend';\nimport Handler from './handler';\nimport { isString } from '@antv/util';\nimport ControllerBtn from './controllerBtn';\nimport { VALUE_CHANGE, TIMELINE_START, TIMEBAR_CONFIG_CHANGE, PLAY_PAUSE_BTN, NEXT_STEP_BTN, PRE_STEP_BTN, TIMELINE_END } from './constant';\n/**\n * 一些默认的样式配置\n */\n\nexport var BACKGROUND_STYLE = {\n  fill: '#416180',\n  opacity: 0.05\n};\nvar SIMPLE_BACKGROUND_STYLE = {\n  fill: '#416180',\n  opacity: 0.15,\n  radius: 5\n};\nexport var FOREGROUND_STYLE = {\n  fill: '#5B8FF9',\n  opacity: 0.3,\n  cursor: 'grab'\n};\nexport var DEFAULT_HANDLER_WIDTH = 2;\nexport var HANDLER_STYLE = {\n  width: DEFAULT_HANDLER_WIDTH,\n  height: 24\n};\nexport var TEXT_STYLE = {\n  textBaseline: 'middle',\n  fill: '#000',\n  opacity: 0.45\n};\nexport var TICK_LABEL_STYLE = {\n  textAlign: 'center',\n  textBaseline: 'top',\n  fill: '#607889',\n  opacity: 0.35\n};\nexport var TICK_LINE_STYLE = {\n  lineWidth: 1,\n  stroke: '#ccc'\n};\n\nvar TrendTimeBar =\n/** @class */\nfunction () {\n  function TrendTimeBar(cfg) {\n    var _this = this;\n\n    this.prevX = 0;\n\n    this.onMouseDown = function (handler) {\n      return function (e) {\n        // 1. 记录点击的滑块\n        _this.currentHandler = handler;\n        var event = e.originalEvent; // 2. 存储当前点击位置\n\n        event.stopPropagation();\n        event.preventDefault(); // 兼容移动端获取数据\n\n        _this.prevX = get(event, 'touches.0.pageX', event.pageX); // 3. 开始滑动的时候，绑定 move 和 up 事件\n\n        var containerDOM = _this.canvas.get('container');\n\n        containerDOM.addEventListener('mousemove', _this.onMouseMove);\n        containerDOM.addEventListener('mouseup', _this.onMouseUp);\n        containerDOM.addEventListener('mouseleave', _this.onMouseUp); // 移动端事件\n\n        containerDOM.addEventListener('touchmove', _this.onMouseMove);\n        containerDOM.addEventListener('touchend', _this.onMouseUp);\n        containerDOM.addEventListener('touchcancel', _this.onMouseUp);\n      };\n    };\n\n    this.onMouseMove = function (e) {\n      // 滑动过程中，计算偏移，更新滑块，然后 emit 数据出去\n      e.stopPropagation();\n      e.preventDefault();\n      var x = get(e, 'touches.0.pageX', e.pageX); // 横向的 slider 只处理 x\n\n      var offsetX = x - _this.prevX;\n\n      var offsetXRange = _this.adjustOffsetRange(offsetX / _this.width); // 更新 start end range 范围\n\n\n      _this.updateStartEnd(offsetXRange); // 更新 ui\n\n\n      _this.updateUI();\n\n      _this.prevX = x;\n    };\n\n    this.onMouseUp = function () {\n      // 结束之后，取消绑定的事件\n      if (_this.currentHandler) {\n        _this.currentHandler = undefined;\n      }\n\n      var containerDOM = _this.canvas.get('container');\n\n      if (containerDOM) {\n        containerDOM.removeEventListener('mousemove', _this.onMouseMove);\n        containerDOM.removeEventListener('mouseup', _this.onMouseUp); // 防止滑动到 canvas 外部之后，状态丢失\n\n        containerDOM.removeEventListener('mouseleave', _this.onMouseUp); // 移动端事件\n\n        containerDOM.removeEventListener('touchmove', _this.onMouseMove);\n        containerDOM.removeEventListener('touchend', _this.onMouseUp);\n        containerDOM.removeEventListener('touchcancel', _this.onMouseUp);\n      }\n    };\n\n    var _a = cfg.x,\n        x = _a === void 0 ? 0 : _a,\n        _b = cfg.y,\n        y = _b === void 0 ? 0 : _b,\n        _c = cfg.width,\n        width = _c === void 0 ? 100 : _c,\n        height = cfg.height,\n        _d = cfg.padding,\n        padding = _d === void 0 ? 10 : _d,\n        trendCfg = cfg.trendCfg,\n        _e = cfg.controllerCfg,\n        controllerCfg = _e === void 0 ? {\n      speed: 1\n    } : _e,\n        _f = cfg.backgroundStyle,\n        backgroundStyle = _f === void 0 ? {} : _f,\n        _g = cfg.foregroundStyle,\n        foregroundStyle = _g === void 0 ? {} : _g,\n        _h = cfg.handlerStyle,\n        handlerStyle = _h === void 0 ? {} : _h,\n        _j = cfg.textStyle,\n        textStyle = _j === void 0 ? {} : _j,\n        // 缩略轴的初始位置\n    _k = cfg.start,\n        // 缩略轴的初始位置\n    start = _k === void 0 ? 0 : _k,\n        _l = cfg.end,\n        end = _l === void 0 ? 1 : _l,\n        _m = cfg.minText,\n        minText = _m === void 0 ? '' : _m,\n        _o = cfg.maxText,\n        maxText = _o === void 0 ? '' : _o,\n        group = cfg.group,\n        graph = cfg.graph,\n        canvas = cfg.canvas,\n        _p = cfg.tick,\n        tick = _p === void 0 ? {\n      tickLabelStyle: {},\n      tickLineStyle: {},\n      tickLabelFormatter: function tickLabelFormatter(d) {\n        return d;\n      },\n      ticks: []\n    } : _p,\n        type = cfg.type;\n    this.graph = graph;\n    this.canvas = canvas;\n    this.group = group;\n    this.timeBarType = type; // position size\n\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.padding = padding;\n    this.ticks = tick.ticks;\n    this.trendCfg = trendCfg;\n    this.controllerCfg = controllerCfg;\n    this.currentSpeed = controllerCfg.speed || 1;\n    this.tickLabelFormatter = tick.tickLabelFormatter; // style\n\n    if (type === 'trend') {\n      this.backgroundStyle = __assign(__assign({}, BACKGROUND_STYLE), backgroundStyle);\n    } else if (type === 'simple') {\n      this.backgroundStyle = __assign(__assign({}, SIMPLE_BACKGROUND_STYLE), backgroundStyle);\n    }\n\n    this.foregroundStyle = __assign(__assign({}, FOREGROUND_STYLE), foregroundStyle);\n    this.handlerStyle = __assign(__assign({}, HANDLER_STYLE), handlerStyle);\n    this.textStyle = __assign(__assign({}, TEXT_STYLE), textStyle);\n    this.tickLabelStyle = __assign(__assign({}, TICK_LABEL_STYLE), tick.tickLabelStyle);\n    this.tickLineStyle = __assign(__assign({}, TICK_LINE_STYLE), tick.tickLineStyle);\n    this.currentMode = 'range'; // 初始信息\n\n    this.start = start;\n    this.end = end;\n    this.minText = minText;\n    this.maxText = maxText; // 初始化 fontFamily，如果有浏览器，取 body 上的字体，防止文字更新时局部渲染造成的重影\n\n    this.fontFamily = typeof window !== 'undefined' ? window.getComputedStyle(document.body, null).getPropertyValue('font-family') || 'Arial, sans-serif' : 'Arial, sans-serif';\n    this.renderSlider();\n  }\n  /**\n   * 更新配置\n   * @param cfg\n   */\n\n\n  TrendTimeBar.prototype.update = function (cfg) {\n    var x = cfg.x,\n        y = cfg.y,\n        width = cfg.width,\n        height = cfg.height,\n        minText = cfg.minText,\n        maxText = cfg.maxText,\n        start = cfg.start,\n        end = cfg.end; // start、end 只能是 0~1 范围\n\n    this.start = Math.min(1, Math.max(start, 0));\n    this.end = Math.min(1, Math.max(end, 0)); // 如果传了则更新，没有传则不更新\n    // @ts-ignore\n\n    assign(this, {\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      minText: minText,\n      maxText: maxText\n    }); // 更新 ui，不自动绘制\n\n    this.updateUI();\n  };\n\n  TrendTimeBar.prototype.setText = function (minText, maxText) {\n    this.minTextShape.attr('text', minText);\n    this.maxTextShape.attr('text', maxText);\n  };\n  /**\n   * 初始化组件结构\n   * @private\n   */\n\n\n  TrendTimeBar.prototype.renderSlider = function () {\n    var _this = this;\n\n    var _a = this,\n        width = _a.width,\n        height = _a.height,\n        timeBarType = _a.timeBarType; // 趋势图数据\n\n\n    if (timeBarType === 'trend' && size(get(this.trendCfg, 'data'))) {\n      var trendComponent = new Trend(__assign(__assign({\n        x: this.x,\n        y: this.y,\n        width: width,\n        height: height\n      }, this.trendCfg), {\n        group: this.group\n      }));\n      this.trendComponent = trendComponent;\n    }\n\n    var sliderGroup = this.group.addGroup({\n      name: 'slider-group'\n    }); // 1. 背景\n\n    sliderGroup.addShape('rect', {\n      attrs: __assign({\n        x: 0,\n        y: 0,\n        width: width,\n        height: height\n      }, this.backgroundStyle)\n    });\n    var textGroup = this.group.addGroup(); // 2. 左右文字\n\n    if (timeBarType === 'trend') {\n      this.minTextShape = textGroup.addShape('text', {\n        attrs: __assign({\n          x: 0,\n          y: height / 2 + this.y,\n          textAlign: 'right',\n          text: this.minText,\n          silent: false,\n          fontFamily: this.fontFamily || 'Arial, sans-serif'\n        }, this.textStyle),\n        capture: false\n      });\n      this.maxTextShape = textGroup.addShape('text', {\n        attrs: __assign({\n          y: height / 2 + this.y,\n          textAlign: 'left',\n          text: this.maxText,\n          silent: false,\n          fontFamily: this.fontFamily || 'Arial, sans-serif'\n        }, this.textStyle),\n        capture: false\n      });\n    } else {\n      this.minTextShape = textGroup.addShape('text', {\n        attrs: __assign({\n          x: 0,\n          y: this.y - 10,\n          textAlign: 'center',\n          text: this.minText,\n          silent: false,\n          fontFamily: this.fontFamily || 'Arial, sans-serif'\n        }, this.textStyle),\n        capture: false\n      });\n      this.maxTextShape = textGroup.addShape('text', {\n        attrs: __assign({\n          y: this.y - 10,\n          textAlign: 'center',\n          text: this.maxText,\n          silent: false,\n          fontFamily: this.fontFamily || 'Arial, sans-serif'\n        }, this.textStyle),\n        capture: false\n      });\n    } // 3. 前景 选中背景框\n\n\n    this.foregroundShape = this.group.addGroup().addShape('rect', {\n      attrs: __assign({\n        x: 0,\n        y: this.y,\n        height: height\n      }, this.foregroundStyle)\n    });\n    this.foregroundShape.on('mousedown', function (e) {\n      e.target.attr('cursor', 'grabbing');\n    });\n    this.foregroundShape.on('mouseup', function (e) {\n      e.target.attr('cursor', _this.foregroundStyle.cursor || 'grab');\n    }); // 滑块相关的大小信息\n\n    var handlerWidth = get(this.handlerStyle, 'width', 2);\n    var handlerHeight = get(this.handlerStyle, 'height', 24);\n    var minHandleGroup = this.group.addGroup({\n      name: 'minHandlerShape'\n    }); // 4. 左右滑块\n\n    this.minHandlerShape = new Handler({\n      name: 'minHandlerShape',\n      group: minHandleGroup,\n      type: timeBarType,\n      x: this.x,\n      y: this.y,\n      width: handlerWidth,\n      height: handlerHeight,\n      style: this.handlerStyle\n    });\n    var maxHandleGroup = this.group.addGroup({\n      name: 'maxHandlerShape'\n    });\n    this.maxHandlerShape = new Handler({\n      name: 'maxHandlerShape',\n      group: maxHandleGroup,\n      type: timeBarType,\n      x: this.x,\n      y: this.y,\n      width: handlerWidth,\n      height: handlerHeight,\n      style: this.handlerStyle\n    }); // 缩略图下面的时间刻度\n\n    var tickData = this.ticks;\n    var interval = width / (tickData.length - 1);\n    this.tickPosList = [];\n\n    if (this.textList && this.textList.length) {\n      this.textList.forEach(function (text) {\n        text.destroy();\n      });\n    }\n\n    var lastX = -Infinity;\n    this.textList = tickData.map(function (data, index) {\n      _this.tickPosList.push(_this.x + index * interval);\n\n      var label;\n\n      if (_this.tickLabelFormatter) {\n        label = _this.tickLabelFormatter(data);\n\n        if (!isString(label) && label) {\n          // return true\n          label = data.date;\n        }\n      } else {\n        label = data.date;\n      } // 文本刻度\n\n\n      var text = _this.group.addShape('text', {\n        attrs: __assign({\n          x: _this.x + index * interval,\n          y: _this.y + height + 5,\n          text: label,\n          fontFamily: _this.fontFamily || 'Arial, sans-serif'\n        }, _this.tickLabelStyle)\n      }); // 文本刻度上面的竖线\n\n\n      var line = _this.group.addShape('line', {\n        attrs: __assign({\n          x1: _this.x + index * interval,\n          y1: _this.y + height + 2,\n          x2: _this.x + index * interval,\n          y2: _this.y + height + 6\n        }, _this.tickLineStyle)\n      });\n\n      line.toBack();\n      var bbox = text.getBBox(); // 抽样，标签与标签间距不小于 10\n\n      if (bbox.minX > lastX) {\n        text.show();\n        line.show();\n        lastX = bbox.minX + bbox.width + 10;\n      } else {\n        text.hide();\n        line.hide();\n      }\n\n      return text;\n    }); // 渲染播放、快进和后退的控制按钮\n\n    this.controllerBtnGroup = new ControllerBtn(__assign({\n      group: this.group,\n      x: this.x,\n      y: this.y + height + 25,\n      width: width,\n      height: 35\n    }, this.controllerCfg)); // 初始化 minText 和 maxText，方便计算它们的 bbox\n\n    this.updateStartEnd(0); // 根据 start end 更新 ui 的位置信息\n\n    this.updateUI(); // 移动到对应的位置\n\n    sliderGroup.move(this.x, this.y); // 绑定事件鼠标事件\n\n    this.bindEvents();\n  };\n  /**\n   * 绑定事件：\n   *  - 点击\n   *  - 滑动\n   *  - 拖拽\n   *  - 滚动\n   * @private\n   */\n\n\n  TrendTimeBar.prototype.bindEvents = function () {\n    var _this = this; // 1. 左滑块的滑动\n\n\n    var minHandleShapeGroup = this.group.find(function (group) {\n      return group.get('name') === 'minHandlerShape';\n    });\n\n    if (minHandleShapeGroup) {\n      minHandleShapeGroup.on('minHandlerShape-handler:mousedown', this.onMouseDown(this.minHandlerShape));\n      minHandleShapeGroup.on('minHandlerShape-handler:touchstart', this.onMouseDown(this.minHandlerShape));\n    }\n\n    var maxHandleShapeGroup = this.group.find(function (group) {\n      return group.get('name') === 'maxHandlerShape';\n    }); // 2. 右滑块的滑动\n\n    if (maxHandleShapeGroup) {\n      maxHandleShapeGroup.on('maxHandlerShape-handler:mousedown', this.onMouseDown(this.maxHandlerShape));\n      maxHandleShapeGroup.on('maxHandlerShape-handler:touchstart', this.onMouseDown(this.maxHandlerShape));\n    } // 3. 前景选中区域\n\n\n    this.foregroundShape.on('mousedown', this.onMouseDown(this.foregroundShape));\n    this.foregroundShape.on('touchstart', this.onMouseDown(this.foregroundShape)); // 播放区按钮控制\n\n    /** 播放/暂停事件 */\n\n    this.group.on(PLAY_PAUSE_BTN + \":click\", function () {\n      _this.isPlay = !_this.isPlay;\n      _this.currentHandler = _this.maxHandlerShape;\n\n      _this.changePlayStatus();\n    }); // 处理前进一步的事件\n\n    this.group.on(NEXT_STEP_BTN + \":click\", function () {\n      _this.currentHandler = _this.maxHandlerShape;\n\n      _this.updateStartEnd(0.01);\n\n      _this.updateUI();\n    }); // 处理后退一步的事件\n\n    this.group.on(PRE_STEP_BTN + \":click\", function () {\n      _this.currentHandler = _this.maxHandlerShape;\n\n      _this.updateStartEnd(-0.01);\n\n      _this.updateUI();\n    });\n    this.group.on(TIMEBAR_CONFIG_CHANGE, function (_a) {\n      var type = _a.type,\n          speed = _a.speed;\n      _this.currentSpeed = speed;\n      _this.currentMode = type;\n\n      if (type === 'single') {\n        _this.minHandlerShape.hide();\n\n        _this.foregroundShape.hide();\n\n        _this.minTextShape.hide();\n      } else if (type === 'range') {\n        _this.minHandlerShape.show();\n\n        _this.foregroundShape.show();\n\n        _this.minTextShape.show();\n      }\n    });\n  };\n  /** 输入当前圆点位置，输出离哪个 tick 的位置最近 */\n\n\n  TrendTimeBar.prototype.adjustTickIndex = function (timeSelectX) {\n    for (var i = 0; i < this.tickPosList.length - 1; i++) {\n      if (this.tickPosList[i] <= timeSelectX && timeSelectX <= this.tickPosList[i + 1]) {\n        return Math.abs(this.tickPosList[i] - timeSelectX) < Math.abs(timeSelectX - this.tickPosList[i + 1]) ? i : i + 1;\n      }\n    }\n\n    return 0;\n  };\n  /**\n   * 调整 offsetRange，因为一些范围的限制\n   * @param offsetRange\n   */\n\n\n  TrendTimeBar.prototype.adjustOffsetRange = function (offsetRange) {\n    // 针对不同的滑动组件，处理的方式不同\n    switch (this.currentHandler) {\n      case this.minHandlerShape:\n        {\n          var min = 0 - this.start;\n          var max = 1 - this.start;\n          return Math.min(max, Math.max(min, offsetRange));\n        }\n\n      case this.maxHandlerShape:\n        {\n          var min = 0 - this.end;\n          var max = 1 - this.end;\n          return Math.min(max, Math.max(min, offsetRange));\n        }\n\n      case this.foregroundShape:\n        {\n          var min = 0 - this.start;\n          var max = 1 - this.end;\n          return Math.min(max, Math.max(min, offsetRange));\n        }\n\n      default:\n        return 0;\n    }\n  };\n  /**\n   * 更新起始、结束的控制块位置、文本、范围值（原始值）\n   * @param offsetRange\n   */\n\n\n  TrendTimeBar.prototype.updateStartEnd = function (offsetRange) {\n    var minData = this.ticks[this.adjustTickIndex(this.start * this.width)];\n    var maxData = this.ticks[this.adjustTickIndex(this.end * this.width)];\n\n    if (!this.currentHandler) {\n      this.minText = this.tickLabelFormatter ? this.tickLabelFormatter(minData) : minData.date;\n      this.maxText = this.tickLabelFormatter ? this.tickLabelFormatter(maxData) : maxData.date;\n      return;\n    } // 操作不同的组件，反馈不一样\n\n\n    switch (this.currentHandler) {\n      case this.minHandlerShape:\n        // 拖动最小滑块时使用当前最大值设置最大值的文本，以便恢复到默认值\n        this.maxText = this.maxTextShape.attr('text');\n        this.start += offsetRange;\n        this.minText = this.tickLabelFormatter ? this.tickLabelFormatter(minData) : minData.date;\n        break;\n\n      case this.maxHandlerShape:\n        // 拖动最大滑块时使用当前最小值设置最小值的文本，以便恢复到默认值\n        this.minText = this.minTextShape.attr('text');\n        this.end += offsetRange;\n        this.maxText = this.tickLabelFormatter ? this.tickLabelFormatter(maxData) : maxData.date;\n        break;\n\n      case this.foregroundShape:\n        this.start += offsetRange;\n        this.end += offsetRange;\n        this.minText = this.tickLabelFormatter ? this.tickLabelFormatter(minData) : minData.date;\n        this.maxText = this.tickLabelFormatter ? this.tickLabelFormatter(maxData) : maxData.date;\n        break;\n\n      default:\n        break;\n    }\n  };\n  /**\n   * 根据移动的比例来更新 ui，更新范围（0-1 范围的比例值）\n   * @private\n   */\n\n\n  TrendTimeBar.prototype.updateUI = function () {\n    var _this = this;\n\n    if (this.start < 0) {\n      this.start = 0;\n    }\n\n    if (this.end > 1) {\n      this.end = 1;\n    }\n\n    var min = this.x + this.start * this.width;\n    var max = this.x + this.end * this.width; // 1. foreground\n\n    this.foregroundShape.attr('x', min);\n    this.foregroundShape.attr('width', max - min); // 滑块相关的大小信息\n\n    var handlerWidth = get(this.handlerStyle, 'width', DEFAULT_HANDLER_WIDTH); // 设置文本\n\n    this.setText(this.minText, this.maxText);\n\n    var _a = this.dodgeText([min, max]),\n        minAttrs = _a[0],\n        maxAttrs = _a[1]; // 2. 左侧滑块和文字位置\n\n\n    this.minHandlerShape.setX(min - handlerWidth / 2);\n    each(minAttrs, function (v, k) {\n      return _this.minTextShape.attr(k, v);\n    }); // 3. 右侧滑块和文字位置\n\n    this.maxHandlerShape.setX(max - handlerWidth / 2);\n    each(maxAttrs, function (v, k) {\n      return _this.maxTextShape.attr(k, v);\n    });\n\n    if (this.currentMode === 'range') {\n      // 因为存储的 start、end 可能不一定是按大小存储的，所以排序一下，对外是 end >= start\n      this.graph.emit(VALUE_CHANGE, {\n        value: [this.start, this.end].sort()\n      });\n    } else if (this.currentMode === 'single') {\n      this.graph.emit(VALUE_CHANGE, {\n        value: [this.end, this.end]\n      });\n    }\n  };\n  /**\n   * 调整 text 的位置，自动躲避\n   * 根据位置，调整返回新的位置\n   * @param range\n   */\n\n\n  TrendTimeBar.prototype.dodgeText = function (range) {\n    var _a, _b;\n\n    var TEXTPADDING = 2;\n    var handlerWidth = get(this.handlerStyle, 'width', DEFAULT_HANDLER_WIDTH);\n    var minTextShape = this.minTextShape;\n    var maxTextShape = this.maxTextShape;\n    var min = range[0],\n        max = range[1];\n    var sorted = false; // 如果交换了位置，则对应的 min max 也交换\n\n    if (min > max) {\n      _a = [max, min], min = _a[0], max = _a[1];\n      _b = [maxTextShape, minTextShape], minTextShape = _b[0], maxTextShape = _b[1];\n      sorted = true;\n    } // 避让规则，优先显示在两侧，只有显示不下的时候，才显示在中间\n\n\n    var minBBox = minTextShape.getBBox();\n    var maxBBox = maxTextShape.getBBox();\n    var minAttrs = null;\n    var maxAttrs = null;\n\n    if (this.timeBarType === 'trend') {\n      minAttrs = min - minBBox.width < this.x + TEXTPADDING ? {\n        x: min + handlerWidth / 2 + TEXTPADDING,\n        textAlign: 'left'\n      } : {\n        x: min - handlerWidth / 2 - TEXTPADDING,\n        textAlign: 'right'\n      };\n      maxAttrs = max + maxBBox.width > this.x + this.width ? {\n        x: max - handlerWidth / 2 - TEXTPADDING,\n        textAlign: 'right'\n      } : {\n        x: max + handlerWidth / 2 + TEXTPADDING,\n        textAlign: 'left'\n      };\n    } else if (this.timeBarType === 'simple') {\n      minAttrs = minBBox.width > min - TEXTPADDING ? {\n        x: min + handlerWidth / 2 + TEXTPADDING,\n        textAlign: 'center'\n      } : {\n        x: min - handlerWidth / 2 - TEXTPADDING,\n        textAlign: 'center'\n      };\n      maxAttrs = maxBBox.width > this.width - max - TEXTPADDING ? {\n        x: max - handlerWidth / 2 - TEXTPADDING,\n        textAlign: 'center'\n      } : {\n        x: max + handlerWidth / 2 + TEXTPADDING,\n        textAlign: 'center'\n      };\n    }\n\n    return !sorted ? [minAttrs, maxAttrs] : [maxAttrs, minAttrs];\n  };\n\n  TrendTimeBar.prototype.startPlay = function () {\n    var _this = this;\n\n    return typeof window !== 'undefined' ? window.requestAnimationFrame(function () {\n      var _a = _this,\n          ticks = _a.ticks,\n          width = _a.width;\n      var speed = _this.currentSpeed;\n      var tickInterval = width / ticks.length;\n      var offsetX = tickInterval / ((10 - speed) * 1000 / 60);\n\n      var offsetXRange = _this.adjustOffsetRange(offsetX / _this.width);\n\n      _this.updateStartEnd(offsetXRange);\n\n      _this.updateUI();\n\n      if (_this.isPlay) {\n        _this.playHandler = _this.startPlay();\n      }\n    }) : undefined;\n  };\n\n  TrendTimeBar.prototype.changePlayStatus = function (isSync) {\n    if (isSync === void 0) {\n      isSync = true;\n    }\n\n    this.controllerBtnGroup.playButton.update({\n      isPlay: this.isPlay\n    });\n\n    if (this.isPlay) {\n      // 开始播放\n      this.playHandler = this.startPlay();\n      this.graph.emit(TIMELINE_START, null);\n    } else {\n      // 结束播放\n      if (this.playHandler) {\n        if (typeof window !== 'undefined') window.cancelAnimationFrame(this.playHandler);\n\n        if (isSync) {\n          this.graph.emit(TIMELINE_END, null);\n        }\n      }\n    }\n  };\n\n  TrendTimeBar.prototype.destory = function () {\n    this.graph.off(VALUE_CHANGE);\n    var group = this.group;\n    var minHandleShapeGroup = group.find(function (g) {\n      return g.get('name') === 'minHandlerShape';\n    });\n\n    if (minHandleShapeGroup) {\n      minHandleShapeGroup.off('minHandlerShape-handler:mousedown');\n      minHandleShapeGroup.off('minHandlerShape-handler:touchstart');\n      minHandleShapeGroup.destroy();\n    }\n\n    var maxHandleShapeGroup = group.find(function (g) {\n      return g.get('name') === 'maxHandlerShape';\n    }); // 2. 右滑块的滑动\n\n    if (maxHandleShapeGroup) {\n      maxHandleShapeGroup.off('maxHandlerShape-handler:mousedown');\n      maxHandleShapeGroup.off('maxHandlerShape-handler:touchstart');\n      maxHandleShapeGroup.destroy();\n    } // 3. 前景选中区域\n\n\n    this.foregroundShape.off('mousedown');\n    this.foregroundShape.off('touchstart');\n    this.foregroundShape.destroy();\n    group.off(PLAY_PAUSE_BTN + \":click\");\n    group.off(NEXT_STEP_BTN + \":click\");\n    group.off(PRE_STEP_BTN + \":click\");\n    group.off(TIMEBAR_CONFIG_CHANGE);\n    group.destroy();\n\n    if (this.trendComponent) {\n      this.trendComponent.destory();\n    }\n  };\n\n  return TrendTimeBar;\n}();\n\nexport default TrendTimeBar;","map":{"version":3,"sources":["C:/Users/Home/Desktop/cs-2005/node_modules/@antv/g6-plugin/es/timeBar/trendTimeBar.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","get","size","each","Trend","Handler","isString","ControllerBtn","VALUE_CHANGE","TIMELINE_START","TIMEBAR_CONFIG_CHANGE","PLAY_PAUSE_BTN","NEXT_STEP_BTN","PRE_STEP_BTN","TIMELINE_END","BACKGROUND_STYLE","fill","opacity","SIMPLE_BACKGROUND_STYLE","radius","FOREGROUND_STYLE","cursor","DEFAULT_HANDLER_WIDTH","HANDLER_STYLE","width","height","TEXT_STYLE","textBaseline","TICK_LABEL_STYLE","textAlign","TICK_LINE_STYLE","lineWidth","stroke","TrendTimeBar","cfg","_this","prevX","onMouseDown","handler","e","currentHandler","event","originalEvent","stopPropagation","preventDefault","pageX","containerDOM","canvas","addEventListener","onMouseMove","onMouseUp","x","offsetX","offsetXRange","adjustOffsetRange","updateStartEnd","updateUI","undefined","removeEventListener","_a","_b","y","_c","_d","padding","trendCfg","_e","controllerCfg","speed","_f","backgroundStyle","_g","foregroundStyle","_h","handlerStyle","_j","textStyle","_k","start","_l","end","_m","minText","_o","maxText","group","graph","_p","tick","tickLabelStyle","tickLineStyle","tickLabelFormatter","d","ticks","type","timeBarType","currentSpeed","currentMode","fontFamily","window","getComputedStyle","document","body","getPropertyValue","renderSlider","update","Math","min","max","setText","minTextShape","attr","maxTextShape","trendComponent","sliderGroup","addGroup","name","addShape","attrs","textGroup","text","silent","capture","foregroundShape","on","target","handlerWidth","handlerHeight","minHandleGroup","minHandlerShape","style","maxHandleGroup","maxHandlerShape","tickData","interval","tickPosList","textList","forEach","destroy","lastX","Infinity","map","data","index","push","label","date","line","x1","y1","x2","y2","toBack","bbox","getBBox","minX","show","hide","controllerBtnGroup","move","bindEvents","minHandleShapeGroup","find","maxHandleShapeGroup","isPlay","changePlayStatus","adjustTickIndex","timeSelectX","abs","offsetRange","minData","maxData","dodgeText","minAttrs","maxAttrs","setX","v","k","emit","value","sort","range","TEXTPADDING","sorted","minBBox","maxBBox","startPlay","requestAnimationFrame","tickInterval","playHandler","isSync","playButton","cancelAnimationFrame","destory","off","g"],"mappings":"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","sourcesContent":["var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { get, size, assign, each } from '@antv/util';\nimport Trend from './trend';\nimport Handler from './handler';\nimport { isString } from '@antv/util';\nimport ControllerBtn from './controllerBtn';\nimport { VALUE_CHANGE, TIMELINE_START, TIMEBAR_CONFIG_CHANGE, PLAY_PAUSE_BTN, NEXT_STEP_BTN, PRE_STEP_BTN, TIMELINE_END } from './constant';\n/**\n * 一些默认的样式配置\n */\n\nexport var BACKGROUND_STYLE = {\n  fill: '#416180',\n  opacity: 0.05\n};\nvar SIMPLE_BACKGROUND_STYLE = {\n  fill: '#416180',\n  opacity: 0.15,\n  radius: 5\n};\nexport var FOREGROUND_STYLE = {\n  fill: '#5B8FF9',\n  opacity: 0.3,\n  cursor: 'grab'\n};\nexport var DEFAULT_HANDLER_WIDTH = 2;\nexport var HANDLER_STYLE = {\n  width: DEFAULT_HANDLER_WIDTH,\n  height: 24\n};\nexport var TEXT_STYLE = {\n  textBaseline: 'middle',\n  fill: '#000',\n  opacity: 0.45\n};\nexport var TICK_LABEL_STYLE = {\n  textAlign: 'center',\n  textBaseline: 'top',\n  fill: '#607889',\n  opacity: 0.35\n};\nexport var TICK_LINE_STYLE = {\n  lineWidth: 1,\n  stroke: '#ccc'\n};\n\nvar TrendTimeBar =\n/** @class */\nfunction () {\n  function TrendTimeBar(cfg) {\n    var _this = this;\n\n    this.prevX = 0;\n\n    this.onMouseDown = function (handler) {\n      return function (e) {\n        // 1. 记录点击的滑块\n        _this.currentHandler = handler;\n        var event = e.originalEvent; // 2. 存储当前点击位置\n\n        event.stopPropagation();\n        event.preventDefault(); // 兼容移动端获取数据\n\n        _this.prevX = get(event, 'touches.0.pageX', event.pageX); // 3. 开始滑动的时候，绑定 move 和 up 事件\n\n        var containerDOM = _this.canvas.get('container');\n\n        containerDOM.addEventListener('mousemove', _this.onMouseMove);\n        containerDOM.addEventListener('mouseup', _this.onMouseUp);\n        containerDOM.addEventListener('mouseleave', _this.onMouseUp); // 移动端事件\n\n        containerDOM.addEventListener('touchmove', _this.onMouseMove);\n        containerDOM.addEventListener('touchend', _this.onMouseUp);\n        containerDOM.addEventListener('touchcancel', _this.onMouseUp);\n      };\n    };\n\n    this.onMouseMove = function (e) {\n      // 滑动过程中，计算偏移，更新滑块，然后 emit 数据出去\n      e.stopPropagation();\n      e.preventDefault();\n      var x = get(e, 'touches.0.pageX', e.pageX); // 横向的 slider 只处理 x\n\n      var offsetX = x - _this.prevX;\n\n      var offsetXRange = _this.adjustOffsetRange(offsetX / _this.width); // 更新 start end range 范围\n\n\n      _this.updateStartEnd(offsetXRange); // 更新 ui\n\n\n      _this.updateUI();\n\n      _this.prevX = x;\n    };\n\n    this.onMouseUp = function () {\n      // 结束之后，取消绑定的事件\n      if (_this.currentHandler) {\n        _this.currentHandler = undefined;\n      }\n\n      var containerDOM = _this.canvas.get('container');\n\n      if (containerDOM) {\n        containerDOM.removeEventListener('mousemove', _this.onMouseMove);\n        containerDOM.removeEventListener('mouseup', _this.onMouseUp); // 防止滑动到 canvas 外部之后，状态丢失\n\n        containerDOM.removeEventListener('mouseleave', _this.onMouseUp); // 移动端事件\n\n        containerDOM.removeEventListener('touchmove', _this.onMouseMove);\n        containerDOM.removeEventListener('touchend', _this.onMouseUp);\n        containerDOM.removeEventListener('touchcancel', _this.onMouseUp);\n      }\n    };\n\n    var _a = cfg.x,\n        x = _a === void 0 ? 0 : _a,\n        _b = cfg.y,\n        y = _b === void 0 ? 0 : _b,\n        _c = cfg.width,\n        width = _c === void 0 ? 100 : _c,\n        height = cfg.height,\n        _d = cfg.padding,\n        padding = _d === void 0 ? 10 : _d,\n        trendCfg = cfg.trendCfg,\n        _e = cfg.controllerCfg,\n        controllerCfg = _e === void 0 ? {\n      speed: 1\n    } : _e,\n        _f = cfg.backgroundStyle,\n        backgroundStyle = _f === void 0 ? {} : _f,\n        _g = cfg.foregroundStyle,\n        foregroundStyle = _g === void 0 ? {} : _g,\n        _h = cfg.handlerStyle,\n        handlerStyle = _h === void 0 ? {} : _h,\n        _j = cfg.textStyle,\n        textStyle = _j === void 0 ? {} : _j,\n        // 缩略轴的初始位置\n    _k = cfg.start,\n        // 缩略轴的初始位置\n    start = _k === void 0 ? 0 : _k,\n        _l = cfg.end,\n        end = _l === void 0 ? 1 : _l,\n        _m = cfg.minText,\n        minText = _m === void 0 ? '' : _m,\n        _o = cfg.maxText,\n        maxText = _o === void 0 ? '' : _o,\n        group = cfg.group,\n        graph = cfg.graph,\n        canvas = cfg.canvas,\n        _p = cfg.tick,\n        tick = _p === void 0 ? {\n      tickLabelStyle: {},\n      tickLineStyle: {},\n      tickLabelFormatter: function tickLabelFormatter(d) {\n        return d;\n      },\n      ticks: []\n    } : _p,\n        type = cfg.type;\n    this.graph = graph;\n    this.canvas = canvas;\n    this.group = group;\n    this.timeBarType = type; // position size\n\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.padding = padding;\n    this.ticks = tick.ticks;\n    this.trendCfg = trendCfg;\n    this.controllerCfg = controllerCfg;\n    this.currentSpeed = controllerCfg.speed || 1;\n    this.tickLabelFormatter = tick.tickLabelFormatter; // style\n\n    if (type === 'trend') {\n      this.backgroundStyle = __assign(__assign({}, BACKGROUND_STYLE), backgroundStyle);\n    } else if (type === 'simple') {\n      this.backgroundStyle = __assign(__assign({}, SIMPLE_BACKGROUND_STYLE), backgroundStyle);\n    }\n\n    this.foregroundStyle = __assign(__assign({}, FOREGROUND_STYLE), foregroundStyle);\n    this.handlerStyle = __assign(__assign({}, HANDLER_STYLE), handlerStyle);\n    this.textStyle = __assign(__assign({}, TEXT_STYLE), textStyle);\n    this.tickLabelStyle = __assign(__assign({}, TICK_LABEL_STYLE), tick.tickLabelStyle);\n    this.tickLineStyle = __assign(__assign({}, TICK_LINE_STYLE), tick.tickLineStyle);\n    this.currentMode = 'range'; // 初始信息\n\n    this.start = start;\n    this.end = end;\n    this.minText = minText;\n    this.maxText = maxText; // 初始化 fontFamily，如果有浏览器，取 body 上的字体，防止文字更新时局部渲染造成的重影\n\n    this.fontFamily = typeof window !== 'undefined' ? window.getComputedStyle(document.body, null).getPropertyValue('font-family') || 'Arial, sans-serif' : 'Arial, sans-serif';\n    this.renderSlider();\n  }\n  /**\n   * 更新配置\n   * @param cfg\n   */\n\n\n  TrendTimeBar.prototype.update = function (cfg) {\n    var x = cfg.x,\n        y = cfg.y,\n        width = cfg.width,\n        height = cfg.height,\n        minText = cfg.minText,\n        maxText = cfg.maxText,\n        start = cfg.start,\n        end = cfg.end; // start、end 只能是 0~1 范围\n\n    this.start = Math.min(1, Math.max(start, 0));\n    this.end = Math.min(1, Math.max(end, 0)); // 如果传了则更新，没有传则不更新\n    // @ts-ignore\n\n    assign(this, {\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      minText: minText,\n      maxText: maxText\n    }); // 更新 ui，不自动绘制\n\n    this.updateUI();\n  };\n\n  TrendTimeBar.prototype.setText = function (minText, maxText) {\n    this.minTextShape.attr('text', minText);\n    this.maxTextShape.attr('text', maxText);\n  };\n  /**\n   * 初始化组件结构\n   * @private\n   */\n\n\n  TrendTimeBar.prototype.renderSlider = function () {\n    var _this = this;\n\n    var _a = this,\n        width = _a.width,\n        height = _a.height,\n        timeBarType = _a.timeBarType; // 趋势图数据\n\n\n    if (timeBarType === 'trend' && size(get(this.trendCfg, 'data'))) {\n      var trendComponent = new Trend(__assign(__assign({\n        x: this.x,\n        y: this.y,\n        width: width,\n        height: height\n      }, this.trendCfg), {\n        group: this.group\n      }));\n      this.trendComponent = trendComponent;\n    }\n\n    var sliderGroup = this.group.addGroup({\n      name: 'slider-group'\n    }); // 1. 背景\n\n    sliderGroup.addShape('rect', {\n      attrs: __assign({\n        x: 0,\n        y: 0,\n        width: width,\n        height: height\n      }, this.backgroundStyle)\n    });\n    var textGroup = this.group.addGroup(); // 2. 左右文字\n\n    if (timeBarType === 'trend') {\n      this.minTextShape = textGroup.addShape('text', {\n        attrs: __assign({\n          x: 0,\n          y: height / 2 + this.y,\n          textAlign: 'right',\n          text: this.minText,\n          silent: false,\n          fontFamily: this.fontFamily || 'Arial, sans-serif'\n        }, this.textStyle),\n        capture: false\n      });\n      this.maxTextShape = textGroup.addShape('text', {\n        attrs: __assign({\n          y: height / 2 + this.y,\n          textAlign: 'left',\n          text: this.maxText,\n          silent: false,\n          fontFamily: this.fontFamily || 'Arial, sans-serif'\n        }, this.textStyle),\n        capture: false\n      });\n    } else {\n      this.minTextShape = textGroup.addShape('text', {\n        attrs: __assign({\n          x: 0,\n          y: this.y - 10,\n          textAlign: 'center',\n          text: this.minText,\n          silent: false,\n          fontFamily: this.fontFamily || 'Arial, sans-serif'\n        }, this.textStyle),\n        capture: false\n      });\n      this.maxTextShape = textGroup.addShape('text', {\n        attrs: __assign({\n          y: this.y - 10,\n          textAlign: 'center',\n          text: this.maxText,\n          silent: false,\n          fontFamily: this.fontFamily || 'Arial, sans-serif'\n        }, this.textStyle),\n        capture: false\n      });\n    } // 3. 前景 选中背景框\n\n\n    this.foregroundShape = this.group.addGroup().addShape('rect', {\n      attrs: __assign({\n        x: 0,\n        y: this.y,\n        height: height\n      }, this.foregroundStyle)\n    });\n    this.foregroundShape.on('mousedown', function (e) {\n      e.target.attr('cursor', 'grabbing');\n    });\n    this.foregroundShape.on('mouseup', function (e) {\n      e.target.attr('cursor', _this.foregroundStyle.cursor || 'grab');\n    }); // 滑块相关的大小信息\n\n    var handlerWidth = get(this.handlerStyle, 'width', 2);\n    var handlerHeight = get(this.handlerStyle, 'height', 24);\n    var minHandleGroup = this.group.addGroup({\n      name: 'minHandlerShape'\n    }); // 4. 左右滑块\n\n    this.minHandlerShape = new Handler({\n      name: 'minHandlerShape',\n      group: minHandleGroup,\n      type: timeBarType,\n      x: this.x,\n      y: this.y,\n      width: handlerWidth,\n      height: handlerHeight,\n      style: this.handlerStyle\n    });\n    var maxHandleGroup = this.group.addGroup({\n      name: 'maxHandlerShape'\n    });\n    this.maxHandlerShape = new Handler({\n      name: 'maxHandlerShape',\n      group: maxHandleGroup,\n      type: timeBarType,\n      x: this.x,\n      y: this.y,\n      width: handlerWidth,\n      height: handlerHeight,\n      style: this.handlerStyle\n    }); // 缩略图下面的时间刻度\n\n    var tickData = this.ticks;\n    var interval = width / (tickData.length - 1);\n    this.tickPosList = [];\n\n    if (this.textList && this.textList.length) {\n      this.textList.forEach(function (text) {\n        text.destroy();\n      });\n    }\n\n    var lastX = -Infinity;\n    this.textList = tickData.map(function (data, index) {\n      _this.tickPosList.push(_this.x + index * interval);\n\n      var label;\n\n      if (_this.tickLabelFormatter) {\n        label = _this.tickLabelFormatter(data);\n\n        if (!isString(label) && label) {\n          // return true\n          label = data.date;\n        }\n      } else {\n        label = data.date;\n      } // 文本刻度\n\n\n      var text = _this.group.addShape('text', {\n        attrs: __assign({\n          x: _this.x + index * interval,\n          y: _this.y + height + 5,\n          text: label,\n          fontFamily: _this.fontFamily || 'Arial, sans-serif'\n        }, _this.tickLabelStyle)\n      }); // 文本刻度上面的竖线\n\n\n      var line = _this.group.addShape('line', {\n        attrs: __assign({\n          x1: _this.x + index * interval,\n          y1: _this.y + height + 2,\n          x2: _this.x + index * interval,\n          y2: _this.y + height + 6\n        }, _this.tickLineStyle)\n      });\n\n      line.toBack();\n      var bbox = text.getBBox(); // 抽样，标签与标签间距不小于 10\n\n      if (bbox.minX > lastX) {\n        text.show();\n        line.show();\n        lastX = bbox.minX + bbox.width + 10;\n      } else {\n        text.hide();\n        line.hide();\n      }\n\n      return text;\n    }); // 渲染播放、快进和后退的控制按钮\n\n    this.controllerBtnGroup = new ControllerBtn(__assign({\n      group: this.group,\n      x: this.x,\n      y: this.y + height + 25,\n      width: width,\n      height: 35\n    }, this.controllerCfg)); // 初始化 minText 和 maxText，方便计算它们的 bbox\n\n    this.updateStartEnd(0); // 根据 start end 更新 ui 的位置信息\n\n    this.updateUI(); // 移动到对应的位置\n\n    sliderGroup.move(this.x, this.y); // 绑定事件鼠标事件\n\n    this.bindEvents();\n  };\n  /**\n   * 绑定事件：\n   *  - 点击\n   *  - 滑动\n   *  - 拖拽\n   *  - 滚动\n   * @private\n   */\n\n\n  TrendTimeBar.prototype.bindEvents = function () {\n    var _this = this; // 1. 左滑块的滑动\n\n\n    var minHandleShapeGroup = this.group.find(function (group) {\n      return group.get('name') === 'minHandlerShape';\n    });\n\n    if (minHandleShapeGroup) {\n      minHandleShapeGroup.on('minHandlerShape-handler:mousedown', this.onMouseDown(this.minHandlerShape));\n      minHandleShapeGroup.on('minHandlerShape-handler:touchstart', this.onMouseDown(this.minHandlerShape));\n    }\n\n    var maxHandleShapeGroup = this.group.find(function (group) {\n      return group.get('name') === 'maxHandlerShape';\n    }); // 2. 右滑块的滑动\n\n    if (maxHandleShapeGroup) {\n      maxHandleShapeGroup.on('maxHandlerShape-handler:mousedown', this.onMouseDown(this.maxHandlerShape));\n      maxHandleShapeGroup.on('maxHandlerShape-handler:touchstart', this.onMouseDown(this.maxHandlerShape));\n    } // 3. 前景选中区域\n\n\n    this.foregroundShape.on('mousedown', this.onMouseDown(this.foregroundShape));\n    this.foregroundShape.on('touchstart', this.onMouseDown(this.foregroundShape)); // 播放区按钮控制\n\n    /** 播放/暂停事件 */\n\n    this.group.on(PLAY_PAUSE_BTN + \":click\", function () {\n      _this.isPlay = !_this.isPlay;\n      _this.currentHandler = _this.maxHandlerShape;\n\n      _this.changePlayStatus();\n    }); // 处理前进一步的事件\n\n    this.group.on(NEXT_STEP_BTN + \":click\", function () {\n      _this.currentHandler = _this.maxHandlerShape;\n\n      _this.updateStartEnd(0.01);\n\n      _this.updateUI();\n    }); // 处理后退一步的事件\n\n    this.group.on(PRE_STEP_BTN + \":click\", function () {\n      _this.currentHandler = _this.maxHandlerShape;\n\n      _this.updateStartEnd(-0.01);\n\n      _this.updateUI();\n    });\n    this.group.on(TIMEBAR_CONFIG_CHANGE, function (_a) {\n      var type = _a.type,\n          speed = _a.speed;\n      _this.currentSpeed = speed;\n      _this.currentMode = type;\n\n      if (type === 'single') {\n        _this.minHandlerShape.hide();\n\n        _this.foregroundShape.hide();\n\n        _this.minTextShape.hide();\n      } else if (type === 'range') {\n        _this.minHandlerShape.show();\n\n        _this.foregroundShape.show();\n\n        _this.minTextShape.show();\n      }\n    });\n  };\n  /** 输入当前圆点位置，输出离哪个 tick 的位置最近 */\n\n\n  TrendTimeBar.prototype.adjustTickIndex = function (timeSelectX) {\n    for (var i = 0; i < this.tickPosList.length - 1; i++) {\n      if (this.tickPosList[i] <= timeSelectX && timeSelectX <= this.tickPosList[i + 1]) {\n        return Math.abs(this.tickPosList[i] - timeSelectX) < Math.abs(timeSelectX - this.tickPosList[i + 1]) ? i : i + 1;\n      }\n    }\n\n    return 0;\n  };\n  /**\n   * 调整 offsetRange，因为一些范围的限制\n   * @param offsetRange\n   */\n\n\n  TrendTimeBar.prototype.adjustOffsetRange = function (offsetRange) {\n    // 针对不同的滑动组件，处理的方式不同\n    switch (this.currentHandler) {\n      case this.minHandlerShape:\n        {\n          var min = 0 - this.start;\n          var max = 1 - this.start;\n          return Math.min(max, Math.max(min, offsetRange));\n        }\n\n      case this.maxHandlerShape:\n        {\n          var min = 0 - this.end;\n          var max = 1 - this.end;\n          return Math.min(max, Math.max(min, offsetRange));\n        }\n\n      case this.foregroundShape:\n        {\n          var min = 0 - this.start;\n          var max = 1 - this.end;\n          return Math.min(max, Math.max(min, offsetRange));\n        }\n\n      default:\n        return 0;\n    }\n  };\n  /**\n   * 更新起始、结束的控制块位置、文本、范围值（原始值）\n   * @param offsetRange\n   */\n\n\n  TrendTimeBar.prototype.updateStartEnd = function (offsetRange) {\n    var minData = this.ticks[this.adjustTickIndex(this.start * this.width)];\n    var maxData = this.ticks[this.adjustTickIndex(this.end * this.width)];\n\n    if (!this.currentHandler) {\n      this.minText = this.tickLabelFormatter ? this.tickLabelFormatter(minData) : minData.date;\n      this.maxText = this.tickLabelFormatter ? this.tickLabelFormatter(maxData) : maxData.date;\n      return;\n    } // 操作不同的组件，反馈不一样\n\n\n    switch (this.currentHandler) {\n      case this.minHandlerShape:\n        // 拖动最小滑块时使用当前最大值设置最大值的文本，以便恢复到默认值\n        this.maxText = this.maxTextShape.attr('text');\n        this.start += offsetRange;\n        this.minText = this.tickLabelFormatter ? this.tickLabelFormatter(minData) : minData.date;\n        break;\n\n      case this.maxHandlerShape:\n        // 拖动最大滑块时使用当前最小值设置最小值的文本，以便恢复到默认值\n        this.minText = this.minTextShape.attr('text');\n        this.end += offsetRange;\n        this.maxText = this.tickLabelFormatter ? this.tickLabelFormatter(maxData) : maxData.date;\n        break;\n\n      case this.foregroundShape:\n        this.start += offsetRange;\n        this.end += offsetRange;\n        this.minText = this.tickLabelFormatter ? this.tickLabelFormatter(minData) : minData.date;\n        this.maxText = this.tickLabelFormatter ? this.tickLabelFormatter(maxData) : maxData.date;\n        break;\n\n      default:\n        break;\n    }\n  };\n  /**\n   * 根据移动的比例来更新 ui，更新范围（0-1 范围的比例值）\n   * @private\n   */\n\n\n  TrendTimeBar.prototype.updateUI = function () {\n    var _this = this;\n\n    if (this.start < 0) {\n      this.start = 0;\n    }\n\n    if (this.end > 1) {\n      this.end = 1;\n    }\n\n    var min = this.x + this.start * this.width;\n    var max = this.x + this.end * this.width; // 1. foreground\n\n    this.foregroundShape.attr('x', min);\n    this.foregroundShape.attr('width', max - min); // 滑块相关的大小信息\n\n    var handlerWidth = get(this.handlerStyle, 'width', DEFAULT_HANDLER_WIDTH); // 设置文本\n\n    this.setText(this.minText, this.maxText);\n\n    var _a = this.dodgeText([min, max]),\n        minAttrs = _a[0],\n        maxAttrs = _a[1]; // 2. 左侧滑块和文字位置\n\n\n    this.minHandlerShape.setX(min - handlerWidth / 2);\n    each(minAttrs, function (v, k) {\n      return _this.minTextShape.attr(k, v);\n    }); // 3. 右侧滑块和文字位置\n\n    this.maxHandlerShape.setX(max - handlerWidth / 2);\n    each(maxAttrs, function (v, k) {\n      return _this.maxTextShape.attr(k, v);\n    });\n\n    if (this.currentMode === 'range') {\n      // 因为存储的 start、end 可能不一定是按大小存储的，所以排序一下，对外是 end >= start\n      this.graph.emit(VALUE_CHANGE, {\n        value: [this.start, this.end].sort()\n      });\n    } else if (this.currentMode === 'single') {\n      this.graph.emit(VALUE_CHANGE, {\n        value: [this.end, this.end]\n      });\n    }\n  };\n  /**\n   * 调整 text 的位置，自动躲避\n   * 根据位置，调整返回新的位置\n   * @param range\n   */\n\n\n  TrendTimeBar.prototype.dodgeText = function (range) {\n    var _a, _b;\n\n    var TEXTPADDING = 2;\n    var handlerWidth = get(this.handlerStyle, 'width', DEFAULT_HANDLER_WIDTH);\n    var minTextShape = this.minTextShape;\n    var maxTextShape = this.maxTextShape;\n    var min = range[0],\n        max = range[1];\n    var sorted = false; // 如果交换了位置，则对应的 min max 也交换\n\n    if (min > max) {\n      _a = [max, min], min = _a[0], max = _a[1];\n      _b = [maxTextShape, minTextShape], minTextShape = _b[0], maxTextShape = _b[1];\n      sorted = true;\n    } // 避让规则，优先显示在两侧，只有显示不下的时候，才显示在中间\n\n\n    var minBBox = minTextShape.getBBox();\n    var maxBBox = maxTextShape.getBBox();\n    var minAttrs = null;\n    var maxAttrs = null;\n\n    if (this.timeBarType === 'trend') {\n      minAttrs = min - minBBox.width < this.x + TEXTPADDING ? {\n        x: min + handlerWidth / 2 + TEXTPADDING,\n        textAlign: 'left'\n      } : {\n        x: min - handlerWidth / 2 - TEXTPADDING,\n        textAlign: 'right'\n      };\n      maxAttrs = max + maxBBox.width > this.x + this.width ? {\n        x: max - handlerWidth / 2 - TEXTPADDING,\n        textAlign: 'right'\n      } : {\n        x: max + handlerWidth / 2 + TEXTPADDING,\n        textAlign: 'left'\n      };\n    } else if (this.timeBarType === 'simple') {\n      minAttrs = minBBox.width > min - TEXTPADDING ? {\n        x: min + handlerWidth / 2 + TEXTPADDING,\n        textAlign: 'center'\n      } : {\n        x: min - handlerWidth / 2 - TEXTPADDING,\n        textAlign: 'center'\n      };\n      maxAttrs = maxBBox.width > this.width - max - TEXTPADDING ? {\n        x: max - handlerWidth / 2 - TEXTPADDING,\n        textAlign: 'center'\n      } : {\n        x: max + handlerWidth / 2 + TEXTPADDING,\n        textAlign: 'center'\n      };\n    }\n\n    return !sorted ? [minAttrs, maxAttrs] : [maxAttrs, minAttrs];\n  };\n\n  TrendTimeBar.prototype.startPlay = function () {\n    var _this = this;\n\n    return typeof window !== 'undefined' ? window.requestAnimationFrame(function () {\n      var _a = _this,\n          ticks = _a.ticks,\n          width = _a.width;\n      var speed = _this.currentSpeed;\n      var tickInterval = width / ticks.length;\n      var offsetX = tickInterval / ((10 - speed) * 1000 / 60);\n\n      var offsetXRange = _this.adjustOffsetRange(offsetX / _this.width);\n\n      _this.updateStartEnd(offsetXRange);\n\n      _this.updateUI();\n\n      if (_this.isPlay) {\n        _this.playHandler = _this.startPlay();\n      }\n    }) : undefined;\n  };\n\n  TrendTimeBar.prototype.changePlayStatus = function (isSync) {\n    if (isSync === void 0) {\n      isSync = true;\n    }\n\n    this.controllerBtnGroup.playButton.update({\n      isPlay: this.isPlay\n    });\n\n    if (this.isPlay) {\n      // 开始播放\n      this.playHandler = this.startPlay();\n      this.graph.emit(TIMELINE_START, null);\n    } else {\n      // 结束播放\n      if (this.playHandler) {\n        if (typeof window !== 'undefined') window.cancelAnimationFrame(this.playHandler);\n\n        if (isSync) {\n          this.graph.emit(TIMELINE_END, null);\n        }\n      }\n    }\n  };\n\n  TrendTimeBar.prototype.destory = function () {\n    this.graph.off(VALUE_CHANGE);\n    var group = this.group;\n    var minHandleShapeGroup = group.find(function (g) {\n      return g.get('name') === 'minHandlerShape';\n    });\n\n    if (minHandleShapeGroup) {\n      minHandleShapeGroup.off('minHandlerShape-handler:mousedown');\n      minHandleShapeGroup.off('minHandlerShape-handler:touchstart');\n      minHandleShapeGroup.destroy();\n    }\n\n    var maxHandleShapeGroup = group.find(function (g) {\n      return g.get('name') === 'maxHandlerShape';\n    }); // 2. 右滑块的滑动\n\n    if (maxHandleShapeGroup) {\n      maxHandleShapeGroup.off('maxHandlerShape-handler:mousedown');\n      maxHandleShapeGroup.off('maxHandlerShape-handler:touchstart');\n      maxHandleShapeGroup.destroy();\n    } // 3. 前景选中区域\n\n\n    this.foregroundShape.off('mousedown');\n    this.foregroundShape.off('touchstart');\n    this.foregroundShape.destroy();\n    group.off(PLAY_PAUSE_BTN + \":click\");\n    group.off(NEXT_STEP_BTN + \":click\");\n    group.off(PRE_STEP_BTN + \":click\");\n    group.off(TIMEBAR_CONFIG_CHANGE);\n    group.destroy();\n\n    if (this.trendComponent) {\n      this.trendComponent.destory();\n    }\n  };\n\n  return TrendTimeBar;\n}();\n\nexport default TrendTimeBar;"]},"metadata":{},"sourceType":"module"}