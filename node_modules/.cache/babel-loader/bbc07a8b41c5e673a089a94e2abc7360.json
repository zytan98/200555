{"ast":null,"code":"import { useEffect, useState } from 'react';\n\nvar useFullscreen = function (el) {\n  var _a = useState(false),\n      fullscreen = _a[0],\n      setFullscreen = _a[1];\n\n  var handleFullScreenChange = function () {\n    // if exit fullscreen\n    if (!document.fullscreenElement) {\n      setFullscreen(false);\n    }\n  };\n\n  var enterFullscreen = function () {\n    if (el && el.requestFullscreen) {\n      el.requestFullscreen().then(function () {\n        setFullscreen(true);\n      }).catch(function (err) {\n        console.error('requestFullscreen error: ', err);\n      });\n    }\n  };\n\n  var exitFullscreen = function () {\n    if (document.exitFullscreen) {\n      document.exitFullscreen().then(function () {\n        setFullscreen(false);\n      }).catch(function (err) {\n        console.error('exitFullscreen error: ', err);\n      });\n    }\n  };\n\n  var toggleFullscreen = function () {\n    // 切换是否全屏\n    if (!el) {\n      console.error('need dom');\n      return;\n    }\n\n    if (!fullscreen) {\n      enterFullscreen();\n    } else {\n      exitFullscreen();\n    }\n  };\n\n  useEffect(function () {\n    // 用户按Esc键退出全屏 或者 退出全屏都会触发这个事件\n    document.addEventListener('fullscreenchange', handleFullScreenChange, false);\n    return function () {\n      document.removeEventListener('fullscreenchange', handleFullScreenChange);\n    };\n  }, []);\n  return [fullscreen, toggleFullscreen];\n};\n\nexport default useFullscreen;","map":{"version":3,"sources":["C:/Users/Home/Desktop/cs-2005/node_modules/@ant-design/charts/es/graphs/hooks/useFullscreen.js"],"names":["useEffect","useState","useFullscreen","el","_a","fullscreen","setFullscreen","handleFullScreenChange","document","fullscreenElement","enterFullscreen","requestFullscreen","then","catch","err","console","error","exitFullscreen","toggleFullscreen","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AACA,IAAIC,aAAa,GAAG,UAAUC,EAAV,EAAc;AAC9B,MAAIC,EAAE,GAAGH,QAAQ,CAAC,KAAD,CAAjB;AAAA,MAA0BI,UAAU,GAAGD,EAAE,CAAC,CAAD,CAAzC;AAAA,MAA8CE,aAAa,GAAGF,EAAE,CAAC,CAAD,CAAhE;;AACA,MAAIG,sBAAsB,GAAG,YAAY;AACrC;AACA,QAAI,CAACC,QAAQ,CAACC,iBAAd,EAAiC;AAC7BH,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH;AACJ,GALD;;AAMA,MAAII,eAAe,GAAG,YAAY;AAC9B,QAAIP,EAAE,IAAIA,EAAE,CAACQ,iBAAb,EAAgC;AAC5BR,MAAAA,EAAE,CAACQ,iBAAH,GACKC,IADL,CACU,YAAY;AAClBN,QAAAA,aAAa,CAAC,IAAD,CAAb;AACH,OAHD,EAIKO,KAJL,CAIW,UAAUC,GAAV,EAAe;AACtBC,QAAAA,OAAO,CAACC,KAAR,CAAc,2BAAd,EAA2CF,GAA3C;AACH,OAND;AAOH;AACJ,GAVD;;AAWA,MAAIG,cAAc,GAAG,YAAY;AAC7B,QAAIT,QAAQ,CAACS,cAAb,EAA6B;AACzBT,MAAAA,QAAQ,CACHS,cADL,GAEKL,IAFL,CAEU,YAAY;AAClBN,QAAAA,aAAa,CAAC,KAAD,CAAb;AACH,OAJD,EAKKO,KALL,CAKW,UAAUC,GAAV,EAAe;AACtBC,QAAAA,OAAO,CAACC,KAAR,CAAc,wBAAd,EAAwCF,GAAxC;AACH,OAPD;AAQH;AACJ,GAXD;;AAYA,MAAII,gBAAgB,GAAG,YAAY;AAC/B;AACA,QAAI,CAACf,EAAL,EAAS;AACLY,MAAAA,OAAO,CAACC,KAAR,CAAc,UAAd;AACA;AACH;;AACD,QAAI,CAACX,UAAL,EAAiB;AACbK,MAAAA,eAAe;AAClB,KAFD,MAGK;AACDO,MAAAA,cAAc;AACjB;AACJ,GAZD;;AAaAjB,EAAAA,SAAS,CAAC,YAAY;AAClB;AACAQ,IAAAA,QAAQ,CAACW,gBAAT,CAA0B,kBAA1B,EAA8CZ,sBAA9C,EAAsE,KAAtE;AACA,WAAO,YAAY;AACfC,MAAAA,QAAQ,CAACY,mBAAT,CAA6B,kBAA7B,EAAiDb,sBAAjD;AACH,KAFD;AAGH,GANQ,EAMN,EANM,CAAT;AAOA,SAAO,CAACF,UAAD,EAAaa,gBAAb,CAAP;AACH,CApDD;;AAqDA,eAAehB,aAAf","sourcesContent":["import { useEffect, useState } from 'react';\nvar useFullscreen = function (el) {\n    var _a = useState(false), fullscreen = _a[0], setFullscreen = _a[1];\n    var handleFullScreenChange = function () {\n        // if exit fullscreen\n        if (!document.fullscreenElement) {\n            setFullscreen(false);\n        }\n    };\n    var enterFullscreen = function () {\n        if (el && el.requestFullscreen) {\n            el.requestFullscreen()\n                .then(function () {\n                setFullscreen(true);\n            })\n                .catch(function (err) {\n                console.error('requestFullscreen error: ', err);\n            });\n        }\n    };\n    var exitFullscreen = function () {\n        if (document.exitFullscreen) {\n            document\n                .exitFullscreen()\n                .then(function () {\n                setFullscreen(false);\n            })\n                .catch(function (err) {\n                console.error('exitFullscreen error: ', err);\n            });\n        }\n    };\n    var toggleFullscreen = function () {\n        // 切换是否全屏\n        if (!el) {\n            console.error('need dom');\n            return;\n        }\n        if (!fullscreen) {\n            enterFullscreen();\n        }\n        else {\n            exitFullscreen();\n        }\n    };\n    useEffect(function () {\n        // 用户按Esc键退出全屏 或者 退出全屏都会触发这个事件\n        document.addEventListener('fullscreenchange', handleFullScreenChange, false);\n        return function () {\n            document.removeEventListener('fullscreenchange', handleFullScreenChange);\n        };\n    }, []);\n    return [fullscreen, toggleFullscreen];\n};\nexport default useFullscreen;\n"]},"metadata":{},"sourceType":"module"}