{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nimport { __assign } from \"tslib\";\nimport Global from '../global';\nimport { ext } from '@antv/matrix-util';\nimport { deepMix, each, mix, isBoolean, isPlainObject, clone } from '@antv/util';\nimport { cloneBesidesImg } from '../util/graphic';\nvar transform = ext.transform;\nvar CLS_SHAPE_SUFFIX = '-shape';\nvar CLS_LABEL_SUFFIX = '-label';\nvar ARROWS = ['startArrow', 'endArrow'];\nvar SHAPE_DEFAULT_ATTRS = {\n  lineWidth: 1,\n  stroke: undefined,\n  fill: undefined,\n  lineAppendWidth: 1,\n  opacity: undefined,\n  strokeOpacity: undefined,\n  fillOpacity: undefined,\n  x: 0,\n  y: 0,\n  r: 10,\n  width: 20,\n  height: 20,\n  shadowColor: undefined,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0\n};\nvar PATH_SHAPE_DEFAULT_ATTRS = {\n  lineWidth: 1,\n  stroke: '#000',\n  lineDash: undefined,\n  startArrow: false,\n  endArrow: false,\n  opacity: undefined,\n  strokeOpacity: undefined,\n  fillOpacity: undefined,\n  shadowColor: undefined,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0\n};\nvar SHAPES_DEFAULT_ATTRS = {\n  edge: PATH_SHAPE_DEFAULT_ATTRS,\n  node: SHAPE_DEFAULT_ATTRS,\n  combo: SHAPE_DEFAULT_ATTRS\n};\nexport var CLS_LABEL_BG_SUFFIX = '-label-bg'; // 单个 shape 带有一个 label，共用这段代码\n\nexport var shapeBase = {\n  // 默认样式及配置\n  options: {},\n  itemType: '',\n\n  /**\n   * 形状的类型，例如 circle，ellipse，polyline...\n   */\n  type: '',\n  getCustomConfig: function getCustomConfig(cfg) {\n    return {};\n  },\n  getOptions: function getOptions(cfg) {\n    return deepMix({\n      // 解决局部渲染导致的文字移动残影问题\n      labelCfg: {\n        style: {\n          fontFamily: typeof window !== 'undefined' ? window.getComputedStyle(document.body, null).getPropertyValue('font-family') || 'Arial, sans-serif' : 'Arial, sans-serif'\n        }\n      },\n      descriptionCfg: {\n        style: {\n          fontFamily: typeof window !== 'undefined' ? window.getComputedStyle(document.body, null).getPropertyValue('font-family') || 'Arial, sans-serif' : 'Arial, sans-serif'\n        }\n      }\n    }, this.options, this.getCustomConfig(cfg) || {}, cfg);\n  },\n\n  /**\n   * 绘制节点/边，包含文本\n   * @override\n   * @param  {Object} cfg 节点的配置项\n   * @param  {G.Group} group 节点的容器\n   * @return {IShape} 绘制的图形\n   */\n  draw: function draw(cfg, group) {\n    var shape = this.drawShape(cfg, group);\n    shape.set('className', this.itemType + CLS_SHAPE_SUFFIX);\n\n    if (cfg.label) {\n      var label = this.drawLabel(cfg, group);\n      label.set('className', this.itemType + CLS_LABEL_SUFFIX);\n    }\n\n    return shape;\n  },\n\n  /**\n   * 绘制完成后的操作，便于用户继承现有的节点、边\n   * @param cfg\n   * @param group\n   * @param keyShape\n   */\n  afterDraw: function afterDraw(cfg, group, keyShape) {},\n  drawShape: function drawShape(cfg, group) {\n    return null;\n  },\n  drawLabel: function drawLabel(cfg, group) {\n    var defaultLabelCfg = this.getOptions(cfg).labelCfg; // image的情况下有可能为null\n\n    var labelCfg = defaultLabelCfg || {};\n    var labelStyle = this.getLabelStyle(cfg, labelCfg, group);\n    var rotate = labelStyle.rotate;\n    delete labelStyle.rotate;\n    var label = group.addShape('text', {\n      attrs: labelStyle,\n      draggable: true,\n      className: 'text-shape',\n      name: 'text-shape'\n    });\n\n    if (rotate) {\n      var labelBBox = label.getBBox();\n      var labelMatrix = label.getMatrix();\n\n      if (!labelMatrix) {\n        labelMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n      }\n\n      if (labelStyle.rotateCenter) {\n        switch (labelStyle.rotateCenter) {\n          case 'center':\n            labelMatrix = transform(labelMatrix, [['t', -labelBBox.width / 2, -labelBBox.height / 2], ['r', rotate], ['t', labelBBox.width / 2, labelBBox.height / 2]]);\n            break;\n\n          case 'lefttop':\n            labelMatrix = transform(labelMatrix, [['t', -labelStyle.x, -labelStyle.y], ['r', rotate], ['t', labelStyle.x, labelStyle.y]]);\n            break;\n\n          case 'leftcenter':\n            labelMatrix = transform(labelMatrix, [['t', -labelStyle.x, -labelStyle.y - labelBBox.height / 2], ['r', rotate], ['t', labelStyle.x, labelStyle.y + labelBBox.height / 2]]);\n            break;\n\n          default:\n            labelMatrix = transform(labelMatrix, [['t', -labelBBox.width / 2, -labelBBox.height / 2], ['r', rotate], ['t', labelBBox.width / 2, labelBBox.height / 2]]);\n            break;\n        }\n      } else {\n        labelMatrix = transform(labelMatrix, [['t', -labelStyle.x, -labelStyle.y - labelBBox.height / 2], ['r', rotate], ['t', labelStyle.x, labelStyle.y + labelBBox.height / 2]]);\n      }\n\n      label.setMatrix(labelMatrix);\n    }\n\n    if (labelStyle.background) {\n      var rect = this.drawLabelBg(cfg, group, label);\n      var labelBgClassname = this.itemType + CLS_LABEL_BG_SUFFIX;\n      rect.set('classname', labelBgClassname);\n      label.toFront();\n    }\n\n    return label;\n  },\n  drawLabelBg: function drawLabelBg(cfg, group, label) {\n    var defaultLabelCfg = this.options.labelCfg;\n    var labelCfg = mix({}, defaultLabelCfg, cfg.labelCfg);\n    var style = this.getLabelBgStyleByPosition(label, cfg, labelCfg, group);\n    var rect = group.addShape('rect', {\n      name: 'text-bg-shape',\n      attrs: style\n    });\n    return rect;\n  },\n  getLabelStyleByPosition: function getLabelStyleByPosition(cfg, labelCfg, group) {\n    return {\n      text: cfg.label\n    };\n  },\n  getLabelBgStyleByPosition: function getLabelBgStyleByPosition(label, cfg, labelCfg, group) {\n    return {};\n  },\n\n  /**\n   * 获取文本的配置项\n   * @param cfg 节点的配置项\n   * @param labelCfg 文本的配置项\n   * @param group 父容器，label 的定位可能与图形相关\n   */\n  getLabelStyle: function getLabelStyle(cfg, labelCfg, group) {\n    var calculateStyle = this.getLabelStyleByPosition(cfg, labelCfg, group);\n    var attrName = this.itemType + \"Label\"; // 取 nodeLabel，edgeLabel 的配置项\n\n    var defaultStyle = Global[attrName] ? Global[attrName].style : null;\n\n    var labelStyle = __assign(__assign(__assign({}, defaultStyle), calculateStyle), labelCfg.style);\n\n    return labelStyle;\n  },\n\n  /**\n   * 获取图形的配置项\n   * @param cfg\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    return cfg.style;\n  },\n\n  /**\n   * 更新节点，包含文本\n   * @override\n   * @param  {Object} cfg 节点/边的配置项\n   * @param  {G6.Item} item 节点/边\n   */\n  update: function update(cfg, item) {\n    this.updateShapeStyle(cfg, item);\n    this.updateLabel(cfg, item);\n  },\n  updateShapeStyle: function updateShapeStyle(cfg, item) {\n    var group = item.getContainer();\n    var shape = item.getKeyShape();\n    var shapeStyle = mix({}, shape.attr(), cfg.style);\n\n    var _loop_1 = function _loop_1(key) {\n      var _a;\n\n      var style = shapeStyle[key];\n\n      if (isPlainObject(style)) {\n        // 更新图元素样式，支持更新子元素\n        var subShape = group.find(function (element) {\n          return element.get('name') === key;\n        });\n\n        if (subShape) {\n          subShape.attr(style);\n        }\n      } else {\n        shape.attr((_a = {}, _a[key] = style, _a));\n      }\n    };\n\n    for (var key in shapeStyle) {\n      _loop_1(key);\n    }\n  },\n  updateLabel: function updateLabel(cfg, item) {\n    var group = item.getContainer();\n    var defaultLabelCfg = this.getOptions({}).labelCfg;\n    var labelClassName = this.itemType + CLS_LABEL_SUFFIX;\n    var label = group.find(function (element) {\n      return element.get('className') === labelClassName;\n    });\n    var labelBgClassname = this.itemType + CLS_LABEL_BG_SUFFIX;\n    var labelBg = group.find(function (element) {\n      return element.get('classname') === labelBgClassname;\n    }); // 防止 cfg.label = \"\" 的情况\n\n    if (cfg.label || cfg.label === '') {\n      // 若传入的新配置中有 label，（用户没传入但原先有 label，label 也会有值）\n      if (!label) {\n        // 若原先不存在 label，则绘制一个新的 label\n        var newLabel = this.drawLabel(cfg, group);\n        newLabel.set('className', labelClassName);\n      } else {\n        // 若原先存在 label，则更新样式。与 getLabelStyle 不同在于这里需要融合当前 label 的样式\n        // 用于融合 style 以外的属性：position, offset, ...\n        var currentLabelCfg = {};\n\n        if (item.getModel) {\n          currentLabelCfg = item.getModel().labelCfg;\n        } // 这里不能去掉\n\n\n        var labelCfg = deepMix({}, defaultLabelCfg, currentLabelCfg, cfg.labelCfg); // 获取位置信息\n\n        var calculateStyle = this.getLabelStyleByPosition(cfg, labelCfg, group); // 取 nodeLabel，edgeLabel 的配置项\n\n        var cfgStyle = cfg.labelCfg ? cfg.labelCfg.style : undefined;\n        var cfgBgStyle = labelCfg.style && labelCfg.style.background; // 需要融合当前\b label 的样式 label.attr()。不再需要全局/默认样式，因为已经应用在当前的 label 上\n\n        var labelStyle = __assign(__assign(__assign({}, label.attr()), calculateStyle), cfgStyle);\n\n        var rotate = labelStyle.rotate;\n        delete labelStyle.rotate; // 计算 label 的旋转矩阵\n\n        if (rotate) {\n          // if G 4.x define the rotateAtStart, use it directly instead of using the following codes\n          var rotateMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n          rotateMatrix = transform(rotateMatrix, [['t', -labelStyle.x, -labelStyle.y], ['r', rotate], ['t', labelStyle.x, labelStyle.y]]);\n          label.resetMatrix();\n          label.attr(__assign(__assign({}, labelStyle), {\n            matrix: rotateMatrix\n          }));\n        } else {\n          label.resetMatrix();\n          label.attr(labelStyle);\n        }\n\n        if (!labelBg) {\n          if (labelStyle.background) {\n            labelBg = this.drawLabelBg(cfg, group, label);\n            labelBg.set('classname', labelBgClassname);\n            label.toFront();\n          }\n        } else if (labelStyle.background) {\n          var calculateBgStyle = this.getLabelBgStyleByPosition(label, cfg, labelCfg, group);\n\n          var labelBgStyle = __assign(__assign({}, calculateBgStyle), cfgBgStyle);\n\n          labelBg.resetMatrix();\n\n          if (rotate) {\n            var bgRotateMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n            bgRotateMatrix = transform(bgRotateMatrix, [['t', -labelBgStyle.x, -labelBgStyle.y], ['r', rotate], ['t', labelBgStyle.x, labelBgStyle.y]]);\n            labelBgStyle.matrix = bgRotateMatrix;\n          }\n\n          labelBg.attr(labelBgStyle);\n        } else {\n          group.removeChild(labelBg);\n        }\n      }\n    }\n  },\n  // update(cfg, item) // 默认不定义\n  afterUpdate: function afterUpdate(cfg, item) {},\n\n  /**\n   * 设置节点的状态，主要是交互状态，业务状态请在 draw 方法中实现\n   * 单图形的节点仅考虑 selected、active 状态，有其他状态需求的用户自己复写这个方法\n   * @override\n   * @param  {String} name 状态名称\n   * @param  {String | Boolean} value 状态值\n   * @param  {G6.Item} item 节点\n   */\n  setState: function setState(name, value, item) {\n    var _a, _b;\n\n    var shape = item.get('keyShape');\n\n    if (!shape) {\n      return;\n    }\n\n    var type = item.getType();\n    var stateName = isBoolean(value) ? name : name + \":\" + value;\n    var shapeStateStyle = this.getStateStyle(stateName, item);\n    var itemStateStyle = item.getStateStyle(stateName); // const originStyle = item.getOriginStyle();\n    // 不允许设置一个不存在的状态\n\n    if (!itemStateStyle && !shapeStateStyle) {\n      return;\n    } // 要设置或取消的状态的样式\n    // 当没有 state 状态时，默认使用 model.stateStyles 中的样式\n\n\n    var styles = mix({}, itemStateStyle || shapeStateStyle);\n    var group = item.getContainer(); // 从图元素现有的样式中删除本次要取消的 states 中存在的属性值。使用对象检索更快\n\n    var keptAttrs = {\n      x: 1,\n      y: 1,\n      cx: 1,\n      cy: 1\n    };\n\n    if (type === 'combo') {\n      keptAttrs.r = 1;\n      keptAttrs.width = 1;\n      keptAttrs.height = 1;\n    }\n\n    if (value) {\n      var _loop_2 = function _loop_2(key) {\n        var _c;\n\n        var style = styles[key];\n\n        if (isPlainObject(style) && !ARROWS.includes(key)) {\n          var subShape = group.find(function (element) {\n            return element.get('name') === key;\n          });\n\n          if (subShape) {\n            subShape.attr(style);\n          }\n        } else {\n          // 非纯对象，则认为是设置到 keyShape 上面的\n          shape.attr((_c = {}, _c[key] = style, _c));\n        }\n      }; // style 为要设置的状态的样式\n\n\n      for (var key in styles) {\n        _loop_2(key);\n      }\n    } else {\n      // 所有生效的 state 的样式\n      var enableStatesStyle = cloneBesidesImg(item.getCurrentStatesStyle());\n      var model = item.getModel(); // 原始样式\n\n      var originStyle_1 = mix({}, model.style, cloneBesidesImg(item.getOriginStyle()));\n      var keyShapeName_1 = shape.get('name'); // cloning  shape.attr(), keys.forEach to avoid cloning the img attr, which leads to maximum clone heap #2383\n      // const keyShapeStyles = clone(shape.attr())\n\n      var shapeAttrs_1 = shape.attr();\n      var keyShapeStyles_1 = {};\n      Object.keys(shapeAttrs_1).forEach(function (key) {\n        if (key === 'img') return;\n        var attr = shapeAttrs_1[key];\n\n        if (attr && _typeof(attr) === 'object') {\n          keyShapeStyles_1[key] = clone(attr);\n        } else {\n          keyShapeStyles_1[key] = attr;\n        }\n      }); // 已有样式 - 要取消的状态的样式\n\n      var filtetDisableStatesStyle = {};\n\n      var _loop_3 = function _loop_3(p) {\n        var style = styles[p];\n\n        if (isPlainObject(style) && !ARROWS.includes(p)) {\n          var subShape_1 = group.find(function (element) {\n            return element.get('name') === p;\n          });\n\n          if (subShape_1) {\n            var subShapeStyles_1 = clone(subShape_1.attr());\n            each(style, function (v, key) {\n              if (p === keyShapeName_1 && keyShapeStyles_1[key] && !keptAttrs[key]) {\n                delete keyShapeStyles_1[key];\n                var value_1 = originStyle_1[p][key] || SHAPES_DEFAULT_ATTRS[type][key];\n                shape.attr(key, value_1);\n              } else if (subShapeStyles_1[key] || subShapeStyles_1[key] === 0) {\n                delete subShapeStyles_1[key];\n                var value_2 = originStyle_1[p][key] || SHAPES_DEFAULT_ATTRS[type][key];\n                subShape_1.attr(key, value_2);\n              }\n            });\n            filtetDisableStatesStyle[p] = subShapeStyles_1;\n          }\n        } else {\n          if (keyShapeStyles_1[p] && !keptAttrs[p]) {\n            delete keyShapeStyles_1[p];\n            var value_3 = originStyle_1[p] || (originStyle_1[keyShapeName_1] ? originStyle_1[keyShapeName_1][p] : undefined) || SHAPES_DEFAULT_ATTRS[type][p];\n            shape.attr(p, value_3);\n          }\n        }\n      }; // styles 为要取消的状态的样式\n\n\n      for (var p in styles) {\n        _loop_3(p);\n      } // 从图元素现有的样式中删除本次要取消的 states 中存在的属性值后，\n      // 如果 keyShape 有 name 属性，则 filtetDisableStatesStyle 的格式为 { keyShapeName: {} }\n      // 否则为普通对象\n\n\n      if (!keyShapeName_1) {\n        mix(filtetDisableStatesStyle, keyShapeStyles_1);\n      } else {\n        filtetDisableStatesStyle[keyShapeName_1] = keyShapeStyles_1;\n      }\n\n      for (var key in enableStatesStyle) {\n        if (keptAttrs[key]) continue;\n        var enableStyle = enableStatesStyle[key];\n\n        if (!isPlainObject(enableStyle) || ARROWS.includes(key)) {\n          // 把样式属性merge到keyShape中\n          if (!keyShapeName_1) {\n            mix(originStyle_1, (_a = {}, _a[key] = enableStyle, _a));\n          } else {\n            mix(originStyle_1[keyShapeName_1], (_b = {}, _b[key] = enableStyle, _b));\n            delete originStyle_1[key];\n          }\n\n          delete enableStatesStyle[key];\n        }\n      }\n\n      var originstyles = {};\n      deepMix(originstyles, originStyle_1, filtetDisableStatesStyle, enableStatesStyle);\n      var keyShapeSetted = false;\n\n      var _loop_4 = function _loop_4(originKey) {\n        var _d, _e;\n\n        var style = originstyles[originKey];\n\n        if (isPlainObject(style) && !ARROWS.includes(originKey)) {\n          var subShape = group.find(function (element) {\n            return element.get('name') === originKey;\n          });\n\n          if (subShape) {\n            if (originKey === keyShapeName_1) {\n              if (type === 'combo') {\n                delete style.r;\n                delete style.width;\n                delete style.height;\n              }\n\n              keyShapeSetted = true;\n            }\n\n            subShape.attr(style);\n          }\n        } else if (!keyShapeSetted) {\n          var value_4 = style || SHAPES_DEFAULT_ATTRS[type][originKey]; // 当更新 combo 状态时，当不存在 keyShapeName 时候，则认为是设置到 keyShape 上面的\n\n          if (type === 'combo') {\n            if (!keyShapeName_1) {\n              shape.attr((_d = {}, _d[originKey] = value_4, _d));\n            }\n          } else {\n            shape.attr((_e = {}, _e[originKey] = value_4, _e));\n          }\n        }\n      };\n\n      for (var originKey in originstyles) {\n        _loop_4(originKey);\n      }\n    }\n  },\n\n  /**\n   * 获取不同状态下的样式\n   *\n   * @param {string} name 状态名称\n   * @param {Item} item Node或Edge的实例\n   * @return {object} 样式\n   */\n  getStateStyle: function getStateStyle(name, item) {\n    var model = item.getModel();\n    var type = item.getType();\n\n    var _a = this.getOptions(model),\n        stateStyles = _a.stateStyles,\n        _b = _a.style,\n        style = _b === void 0 ? {} : _b;\n\n    var modelStateStyle = model.stateStyles ? model.stateStyles[name] : stateStyles && stateStyles[name];\n\n    if (type === 'combo') {\n      return clone(modelStateStyle);\n    }\n\n    return mix({}, style, modelStateStyle);\n  },\n\n  /**\n   * 获取控制点\n   * @param  {Object} cfg 节点、边的配置项\n   * @return {Array|null} 控制点的数组,如果为 null，则没有控制点\n   */\n  getControlPoints: function getControlPoints(cfg) {\n    return cfg.controlPoints;\n  },\n\n  /**\n   * 获取控制点\n   * @param  {Object} cfg 节点、边的配置项\n   * @return {Array|null} 锚点的数组,如果为 null，则没有锚点\n   */\n  getAnchorPoints: function getAnchorPoints(cfg) {\n    var anchorPoints = this.getOptions(cfg).anchorPoints;\n    return anchorPoints;\n  }\n};","map":{"version":3,"sources":["C:/Users/Home/Desktop/cs-2005/node_modules/@antv/g6-core/es/element/shapeBase.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","__assign","Global","ext","deepMix","each","mix","isBoolean","isPlainObject","clone","cloneBesidesImg","transform","CLS_SHAPE_SUFFIX","CLS_LABEL_SUFFIX","ARROWS","SHAPE_DEFAULT_ATTRS","lineWidth","stroke","undefined","fill","lineAppendWidth","opacity","strokeOpacity","fillOpacity","x","y","r","width","height","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","PATH_SHAPE_DEFAULT_ATTRS","lineDash","startArrow","endArrow","SHAPES_DEFAULT_ATTRS","edge","node","combo","CLS_LABEL_BG_SUFFIX","shapeBase","options","itemType","type","getCustomConfig","cfg","getOptions","labelCfg","style","fontFamily","window","getComputedStyle","document","body","getPropertyValue","descriptionCfg","draw","group","shape","drawShape","set","label","drawLabel","afterDraw","keyShape","defaultLabelCfg","labelStyle","getLabelStyle","rotate","addShape","attrs","draggable","className","name","labelBBox","getBBox","labelMatrix","getMatrix","rotateCenter","setMatrix","background","rect","drawLabelBg","labelBgClassname","toFront","getLabelBgStyleByPosition","getLabelStyleByPosition","text","calculateStyle","attrName","defaultStyle","getShapeStyle","update","item","updateShapeStyle","updateLabel","getContainer","getKeyShape","shapeStyle","attr","_loop_1","key","_a","subShape","find","element","get","labelClassName","labelBg","newLabel","currentLabelCfg","getModel","cfgStyle","cfgBgStyle","rotateMatrix","resetMatrix","matrix","calculateBgStyle","labelBgStyle","bgRotateMatrix","removeChild","afterUpdate","setState","value","_b","getType","stateName","shapeStateStyle","getStateStyle","itemStateStyle","styles","keptAttrs","cx","cy","_loop_2","_c","includes","enableStatesStyle","getCurrentStatesStyle","model","originStyle_1","getOriginStyle","keyShapeName_1","shapeAttrs_1","keyShapeStyles_1","Object","keys","forEach","filtetDisableStatesStyle","_loop_3","p","subShape_1","subShapeStyles_1","v","value_1","value_2","value_3","enableStyle","originstyles","keyShapeSetted","_loop_4","originKey","_d","_e","value_4","stateStyles","modelStateStyle","getControlPoints","controlPoints","getAnchorPoints","anchorPoints"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { __assign } from \"tslib\";\nimport Global from '../global';\nimport { ext } from '@antv/matrix-util';\nimport { deepMix, each, mix, isBoolean, isPlainObject, clone } from '@antv/util';\nimport { cloneBesidesImg } from '../util/graphic';\nvar transform = ext.transform;\nvar CLS_SHAPE_SUFFIX = '-shape';\nvar CLS_LABEL_SUFFIX = '-label';\nvar ARROWS = ['startArrow', 'endArrow'];\nvar SHAPE_DEFAULT_ATTRS = {\n  lineWidth: 1,\n  stroke: undefined,\n  fill: undefined,\n  lineAppendWidth: 1,\n  opacity: undefined,\n  strokeOpacity: undefined,\n  fillOpacity: undefined,\n  x: 0,\n  y: 0,\n  r: 10,\n  width: 20,\n  height: 20,\n  shadowColor: undefined,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0\n};\nvar PATH_SHAPE_DEFAULT_ATTRS = {\n  lineWidth: 1,\n  stroke: '#000',\n  lineDash: undefined,\n  startArrow: false,\n  endArrow: false,\n  opacity: undefined,\n  strokeOpacity: undefined,\n  fillOpacity: undefined,\n  shadowColor: undefined,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0\n};\nvar SHAPES_DEFAULT_ATTRS = {\n  edge: PATH_SHAPE_DEFAULT_ATTRS,\n  node: SHAPE_DEFAULT_ATTRS,\n  combo: SHAPE_DEFAULT_ATTRS\n};\nexport var CLS_LABEL_BG_SUFFIX = '-label-bg'; // 单个 shape 带有一个 label，共用这段代码\n\nexport var shapeBase = {\n  // 默认样式及配置\n  options: {},\n  itemType: '',\n\n  /**\n   * 形状的类型，例如 circle，ellipse，polyline...\n   */\n  type: '',\n  getCustomConfig: function getCustomConfig(cfg) {\n    return {};\n  },\n  getOptions: function getOptions(cfg) {\n    return deepMix({\n      // 解决局部渲染导致的文字移动残影问题\n      labelCfg: {\n        style: {\n          fontFamily: typeof window !== 'undefined' ? window.getComputedStyle(document.body, null).getPropertyValue('font-family') || 'Arial, sans-serif' : 'Arial, sans-serif'\n        }\n      },\n      descriptionCfg: {\n        style: {\n          fontFamily: typeof window !== 'undefined' ? window.getComputedStyle(document.body, null).getPropertyValue('font-family') || 'Arial, sans-serif' : 'Arial, sans-serif'\n        }\n      }\n    }, this.options, this.getCustomConfig(cfg) || {}, cfg);\n  },\n\n  /**\n   * 绘制节点/边，包含文本\n   * @override\n   * @param  {Object} cfg 节点的配置项\n   * @param  {G.Group} group 节点的容器\n   * @return {IShape} 绘制的图形\n   */\n  draw: function draw(cfg, group) {\n    var shape = this.drawShape(cfg, group);\n    shape.set('className', this.itemType + CLS_SHAPE_SUFFIX);\n\n    if (cfg.label) {\n      var label = this.drawLabel(cfg, group);\n      label.set('className', this.itemType + CLS_LABEL_SUFFIX);\n    }\n\n    return shape;\n  },\n\n  /**\n   * 绘制完成后的操作，便于用户继承现有的节点、边\n   * @param cfg\n   * @param group\n   * @param keyShape\n   */\n  afterDraw: function afterDraw(cfg, group, keyShape) {},\n  drawShape: function drawShape(cfg, group) {\n    return null;\n  },\n  drawLabel: function drawLabel(cfg, group) {\n    var defaultLabelCfg = this.getOptions(cfg).labelCfg; // image的情况下有可能为null\n\n    var labelCfg = defaultLabelCfg || {};\n    var labelStyle = this.getLabelStyle(cfg, labelCfg, group);\n    var rotate = labelStyle.rotate;\n    delete labelStyle.rotate;\n    var label = group.addShape('text', {\n      attrs: labelStyle,\n      draggable: true,\n      className: 'text-shape',\n      name: 'text-shape'\n    });\n\n    if (rotate) {\n      var labelBBox = label.getBBox();\n      var labelMatrix = label.getMatrix();\n\n      if (!labelMatrix) {\n        labelMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n      }\n\n      if (labelStyle.rotateCenter) {\n        switch (labelStyle.rotateCenter) {\n          case 'center':\n            labelMatrix = transform(labelMatrix, [['t', -labelBBox.width / 2, -labelBBox.height / 2], ['r', rotate], ['t', labelBBox.width / 2, labelBBox.height / 2]]);\n            break;\n\n          case 'lefttop':\n            labelMatrix = transform(labelMatrix, [['t', -labelStyle.x, -labelStyle.y], ['r', rotate], ['t', labelStyle.x, labelStyle.y]]);\n            break;\n\n          case 'leftcenter':\n            labelMatrix = transform(labelMatrix, [['t', -labelStyle.x, -labelStyle.y - labelBBox.height / 2], ['r', rotate], ['t', labelStyle.x, labelStyle.y + labelBBox.height / 2]]);\n            break;\n\n          default:\n            labelMatrix = transform(labelMatrix, [['t', -labelBBox.width / 2, -labelBBox.height / 2], ['r', rotate], ['t', labelBBox.width / 2, labelBBox.height / 2]]);\n            break;\n        }\n      } else {\n        labelMatrix = transform(labelMatrix, [['t', -labelStyle.x, -labelStyle.y - labelBBox.height / 2], ['r', rotate], ['t', labelStyle.x, labelStyle.y + labelBBox.height / 2]]);\n      }\n\n      label.setMatrix(labelMatrix);\n    }\n\n    if (labelStyle.background) {\n      var rect = this.drawLabelBg(cfg, group, label);\n      var labelBgClassname = this.itemType + CLS_LABEL_BG_SUFFIX;\n      rect.set('classname', labelBgClassname);\n      label.toFront();\n    }\n\n    return label;\n  },\n  drawLabelBg: function drawLabelBg(cfg, group, label) {\n    var defaultLabelCfg = this.options.labelCfg;\n    var labelCfg = mix({}, defaultLabelCfg, cfg.labelCfg);\n    var style = this.getLabelBgStyleByPosition(label, cfg, labelCfg, group);\n    var rect = group.addShape('rect', {\n      name: 'text-bg-shape',\n      attrs: style\n    });\n    return rect;\n  },\n  getLabelStyleByPosition: function getLabelStyleByPosition(cfg, labelCfg, group) {\n    return {\n      text: cfg.label\n    };\n  },\n  getLabelBgStyleByPosition: function getLabelBgStyleByPosition(label, cfg, labelCfg, group) {\n    return {};\n  },\n\n  /**\n   * 获取文本的配置项\n   * @param cfg 节点的配置项\n   * @param labelCfg 文本的配置项\n   * @param group 父容器，label 的定位可能与图形相关\n   */\n  getLabelStyle: function getLabelStyle(cfg, labelCfg, group) {\n    var calculateStyle = this.getLabelStyleByPosition(cfg, labelCfg, group);\n    var attrName = this.itemType + \"Label\"; // 取 nodeLabel，edgeLabel 的配置项\n\n    var defaultStyle = Global[attrName] ? Global[attrName].style : null;\n\n    var labelStyle = __assign(__assign(__assign({}, defaultStyle), calculateStyle), labelCfg.style);\n\n    return labelStyle;\n  },\n\n  /**\n   * 获取图形的配置项\n   * @param cfg\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    return cfg.style;\n  },\n\n  /**\n   * 更新节点，包含文本\n   * @override\n   * @param  {Object} cfg 节点/边的配置项\n   * @param  {G6.Item} item 节点/边\n   */\n  update: function update(cfg, item) {\n    this.updateShapeStyle(cfg, item);\n    this.updateLabel(cfg, item);\n  },\n  updateShapeStyle: function updateShapeStyle(cfg, item) {\n    var group = item.getContainer();\n    var shape = item.getKeyShape();\n    var shapeStyle = mix({}, shape.attr(), cfg.style);\n\n    var _loop_1 = function _loop_1(key) {\n      var _a;\n\n      var style = shapeStyle[key];\n\n      if (isPlainObject(style)) {\n        // 更新图元素样式，支持更新子元素\n        var subShape = group.find(function (element) {\n          return element.get('name') === key;\n        });\n\n        if (subShape) {\n          subShape.attr(style);\n        }\n      } else {\n        shape.attr((_a = {}, _a[key] = style, _a));\n      }\n    };\n\n    for (var key in shapeStyle) {\n      _loop_1(key);\n    }\n  },\n  updateLabel: function updateLabel(cfg, item) {\n    var group = item.getContainer();\n    var defaultLabelCfg = this.getOptions({}).labelCfg;\n    var labelClassName = this.itemType + CLS_LABEL_SUFFIX;\n    var label = group.find(function (element) {\n      return element.get('className') === labelClassName;\n    });\n    var labelBgClassname = this.itemType + CLS_LABEL_BG_SUFFIX;\n    var labelBg = group.find(function (element) {\n      return element.get('classname') === labelBgClassname;\n    }); // 防止 cfg.label = \"\" 的情况\n\n    if (cfg.label || cfg.label === '') {\n      // 若传入的新配置中有 label，（用户没传入但原先有 label，label 也会有值）\n      if (!label) {\n        // 若原先不存在 label，则绘制一个新的 label\n        var newLabel = this.drawLabel(cfg, group);\n        newLabel.set('className', labelClassName);\n      } else {\n        // 若原先存在 label，则更新样式。与 getLabelStyle 不同在于这里需要融合当前 label 的样式\n        // 用于融合 style 以外的属性：position, offset, ...\n        var currentLabelCfg = {};\n\n        if (item.getModel) {\n          currentLabelCfg = item.getModel().labelCfg;\n        } // 这里不能去掉\n\n\n        var labelCfg = deepMix({}, defaultLabelCfg, currentLabelCfg, cfg.labelCfg); // 获取位置信息\n\n        var calculateStyle = this.getLabelStyleByPosition(cfg, labelCfg, group); // 取 nodeLabel，edgeLabel 的配置项\n\n        var cfgStyle = cfg.labelCfg ? cfg.labelCfg.style : undefined;\n        var cfgBgStyle = labelCfg.style && labelCfg.style.background; // 需要融合当前\b label 的样式 label.attr()。不再需要全局/默认样式，因为已经应用在当前的 label 上\n\n        var labelStyle = __assign(__assign(__assign({}, label.attr()), calculateStyle), cfgStyle);\n\n        var rotate = labelStyle.rotate;\n        delete labelStyle.rotate; // 计算 label 的旋转矩阵\n\n        if (rotate) {\n          // if G 4.x define the rotateAtStart, use it directly instead of using the following codes\n          var rotateMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n          rotateMatrix = transform(rotateMatrix, [['t', -labelStyle.x, -labelStyle.y], ['r', rotate], ['t', labelStyle.x, labelStyle.y]]);\n          label.resetMatrix();\n          label.attr(__assign(__assign({}, labelStyle), {\n            matrix: rotateMatrix\n          }));\n        } else {\n          label.resetMatrix();\n          label.attr(labelStyle);\n        }\n\n        if (!labelBg) {\n          if (labelStyle.background) {\n            labelBg = this.drawLabelBg(cfg, group, label);\n            labelBg.set('classname', labelBgClassname);\n            label.toFront();\n          }\n        } else if (labelStyle.background) {\n          var calculateBgStyle = this.getLabelBgStyleByPosition(label, cfg, labelCfg, group);\n\n          var labelBgStyle = __assign(__assign({}, calculateBgStyle), cfgBgStyle);\n\n          labelBg.resetMatrix();\n\n          if (rotate) {\n            var bgRotateMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n            bgRotateMatrix = transform(bgRotateMatrix, [['t', -labelBgStyle.x, -labelBgStyle.y], ['r', rotate], ['t', labelBgStyle.x, labelBgStyle.y]]);\n            labelBgStyle.matrix = bgRotateMatrix;\n          }\n\n          labelBg.attr(labelBgStyle);\n        } else {\n          group.removeChild(labelBg);\n        }\n      }\n    }\n  },\n  // update(cfg, item) // 默认不定义\n  afterUpdate: function afterUpdate(cfg, item) {},\n\n  /**\n   * 设置节点的状态，主要是交互状态，业务状态请在 draw 方法中实现\n   * 单图形的节点仅考虑 selected、active 状态，有其他状态需求的用户自己复写这个方法\n   * @override\n   * @param  {String} name 状态名称\n   * @param  {String | Boolean} value 状态值\n   * @param  {G6.Item} item 节点\n   */\n  setState: function setState(name, value, item) {\n    var _a, _b;\n\n    var shape = item.get('keyShape');\n\n    if (!shape) {\n      return;\n    }\n\n    var type = item.getType();\n    var stateName = isBoolean(value) ? name : name + \":\" + value;\n    var shapeStateStyle = this.getStateStyle(stateName, item);\n    var itemStateStyle = item.getStateStyle(stateName); // const originStyle = item.getOriginStyle();\n    // 不允许设置一个不存在的状态\n\n    if (!itemStateStyle && !shapeStateStyle) {\n      return;\n    } // 要设置或取消的状态的样式\n    // 当没有 state 状态时，默认使用 model.stateStyles 中的样式\n\n\n    var styles = mix({}, itemStateStyle || shapeStateStyle);\n    var group = item.getContainer(); // 从图元素现有的样式中删除本次要取消的 states 中存在的属性值。使用对象检索更快\n\n    var keptAttrs = {\n      x: 1,\n      y: 1,\n      cx: 1,\n      cy: 1\n    };\n\n    if (type === 'combo') {\n      keptAttrs.r = 1;\n      keptAttrs.width = 1;\n      keptAttrs.height = 1;\n    }\n\n    if (value) {\n      var _loop_2 = function _loop_2(key) {\n        var _c;\n\n        var style = styles[key];\n\n        if (isPlainObject(style) && !ARROWS.includes(key)) {\n          var subShape = group.find(function (element) {\n            return element.get('name') === key;\n          });\n\n          if (subShape) {\n            subShape.attr(style);\n          }\n        } else {\n          // 非纯对象，则认为是设置到 keyShape 上面的\n          shape.attr((_c = {}, _c[key] = style, _c));\n        }\n      }; // style 为要设置的状态的样式\n\n\n      for (var key in styles) {\n        _loop_2(key);\n      }\n    } else {\n      // 所有生效的 state 的样式\n      var enableStatesStyle = cloneBesidesImg(item.getCurrentStatesStyle());\n      var model = item.getModel(); // 原始样式\n\n      var originStyle_1 = mix({}, model.style, cloneBesidesImg(item.getOriginStyle()));\n      var keyShapeName_1 = shape.get('name'); // cloning  shape.attr(), keys.forEach to avoid cloning the img attr, which leads to maximum clone heap #2383\n      // const keyShapeStyles = clone(shape.attr())\n\n      var shapeAttrs_1 = shape.attr();\n      var keyShapeStyles_1 = {};\n      Object.keys(shapeAttrs_1).forEach(function (key) {\n        if (key === 'img') return;\n        var attr = shapeAttrs_1[key];\n\n        if (attr && _typeof(attr) === 'object') {\n          keyShapeStyles_1[key] = clone(attr);\n        } else {\n          keyShapeStyles_1[key] = attr;\n        }\n      }); // 已有样式 - 要取消的状态的样式\n\n      var filtetDisableStatesStyle = {};\n\n      var _loop_3 = function _loop_3(p) {\n        var style = styles[p];\n\n        if (isPlainObject(style) && !ARROWS.includes(p)) {\n          var subShape_1 = group.find(function (element) {\n            return element.get('name') === p;\n          });\n\n          if (subShape_1) {\n            var subShapeStyles_1 = clone(subShape_1.attr());\n            each(style, function (v, key) {\n              if (p === keyShapeName_1 && keyShapeStyles_1[key] && !keptAttrs[key]) {\n                delete keyShapeStyles_1[key];\n                var value_1 = originStyle_1[p][key] || SHAPES_DEFAULT_ATTRS[type][key];\n                shape.attr(key, value_1);\n              } else if (subShapeStyles_1[key] || subShapeStyles_1[key] === 0) {\n                delete subShapeStyles_1[key];\n                var value_2 = originStyle_1[p][key] || SHAPES_DEFAULT_ATTRS[type][key];\n                subShape_1.attr(key, value_2);\n              }\n            });\n            filtetDisableStatesStyle[p] = subShapeStyles_1;\n          }\n        } else {\n          if (keyShapeStyles_1[p] && !keptAttrs[p]) {\n            delete keyShapeStyles_1[p];\n            var value_3 = originStyle_1[p] || (originStyle_1[keyShapeName_1] ? originStyle_1[keyShapeName_1][p] : undefined) || SHAPES_DEFAULT_ATTRS[type][p];\n            shape.attr(p, value_3);\n          }\n        }\n      }; // styles 为要取消的状态的样式\n\n\n      for (var p in styles) {\n        _loop_3(p);\n      } // 从图元素现有的样式中删除本次要取消的 states 中存在的属性值后，\n      // 如果 keyShape 有 name 属性，则 filtetDisableStatesStyle 的格式为 { keyShapeName: {} }\n      // 否则为普通对象\n\n\n      if (!keyShapeName_1) {\n        mix(filtetDisableStatesStyle, keyShapeStyles_1);\n      } else {\n        filtetDisableStatesStyle[keyShapeName_1] = keyShapeStyles_1;\n      }\n\n      for (var key in enableStatesStyle) {\n        if (keptAttrs[key]) continue;\n        var enableStyle = enableStatesStyle[key];\n\n        if (!isPlainObject(enableStyle) || ARROWS.includes(key)) {\n          // 把样式属性merge到keyShape中\n          if (!keyShapeName_1) {\n            mix(originStyle_1, (_a = {}, _a[key] = enableStyle, _a));\n          } else {\n            mix(originStyle_1[keyShapeName_1], (_b = {}, _b[key] = enableStyle, _b));\n            delete originStyle_1[key];\n          }\n\n          delete enableStatesStyle[key];\n        }\n      }\n\n      var originstyles = {};\n      deepMix(originstyles, originStyle_1, filtetDisableStatesStyle, enableStatesStyle);\n      var keyShapeSetted = false;\n\n      var _loop_4 = function _loop_4(originKey) {\n        var _d, _e;\n\n        var style = originstyles[originKey];\n\n        if (isPlainObject(style) && !ARROWS.includes(originKey)) {\n          var subShape = group.find(function (element) {\n            return element.get('name') === originKey;\n          });\n\n          if (subShape) {\n            if (originKey === keyShapeName_1) {\n              if (type === 'combo') {\n                delete style.r;\n                delete style.width;\n                delete style.height;\n              }\n\n              keyShapeSetted = true;\n            }\n\n            subShape.attr(style);\n          }\n        } else if (!keyShapeSetted) {\n          var value_4 = style || SHAPES_DEFAULT_ATTRS[type][originKey]; // 当更新 combo 状态时，当不存在 keyShapeName 时候，则认为是设置到 keyShape 上面的\n\n          if (type === 'combo') {\n            if (!keyShapeName_1) {\n              shape.attr((_d = {}, _d[originKey] = value_4, _d));\n            }\n          } else {\n            shape.attr((_e = {}, _e[originKey] = value_4, _e));\n          }\n        }\n      };\n\n      for (var originKey in originstyles) {\n        _loop_4(originKey);\n      }\n    }\n  },\n\n  /**\n   * 获取不同状态下的样式\n   *\n   * @param {string} name 状态名称\n   * @param {Item} item Node或Edge的实例\n   * @return {object} 样式\n   */\n  getStateStyle: function getStateStyle(name, item) {\n    var model = item.getModel();\n    var type = item.getType();\n\n    var _a = this.getOptions(model),\n        stateStyles = _a.stateStyles,\n        _b = _a.style,\n        style = _b === void 0 ? {} : _b;\n\n    var modelStateStyle = model.stateStyles ? model.stateStyles[name] : stateStyles && stateStyles[name];\n\n    if (type === 'combo') {\n      return clone(modelStateStyle);\n    }\n\n    return mix({}, style, modelStateStyle);\n  },\n\n  /**\n   * 获取控制点\n   * @param  {Object} cfg 节点、边的配置项\n   * @return {Array|null} 控制点的数组,如果为 null，则没有控制点\n   */\n  getControlPoints: function getControlPoints(cfg) {\n    return cfg.controlPoints;\n  },\n\n  /**\n   * 获取控制点\n   * @param  {Object} cfg 节点、边的配置项\n   * @return {Array|null} 锚点的数组,如果为 null，则没有锚点\n   */\n  getAnchorPoints: function getAnchorPoints(cfg) {\n    var anchorPoints = this.getOptions(cfg).anchorPoints;\n    return anchorPoints;\n  }\n};"]},"metadata":{},"sourceType":"module"}