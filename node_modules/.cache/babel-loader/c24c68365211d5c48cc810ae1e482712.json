{"ast":null,"code":"import React, { useEffect, useRef, Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport useFullscreen from '../hooks/useFullscreen';\nimport { setStyles } from '../utils';\n\nvar Toolbar = function (_a) {\n  var toolbarCfg = _a.toolbarCfg,\n      container = _a.container,\n      graph = _a.graph;\n  var useGraph = useRef();\n  var width = useRef();\n  var height = useRef();\n  var zoom = useRef(1);\n  var _b = toolbarCfg.zoomFactor,\n      zoomFactor = _b === void 0 ? 0.25 : _b,\n      renderIcon = toolbarCfg.renderIcon;\n\n  var _c = useFullscreen(container),\n      fullscreen = _c[0],\n      toggleFullscreen = _c[1]; // 获取当全屏时的窗口大小\n\n\n  var getWindow = function () {\n    return [window.outerWidth, window.outerHeight];\n  }; // 切换全屏时保存 graph 尺寸\n\n\n  var toggleWidth = function (f) {\n    var _a;\n\n    var size = f ? getWindow() : [width.current, height.current];\n    (_a = useGraph.current) === null || _a === void 0 ? void 0 : _a.changeSize(size[0], size[1]);\n  }; // 获取缩放中心\n\n\n  var getCenter = function () {\n    if (!container) {\n      return {\n        x: 0,\n        y: 0\n      };\n    }\n\n    return {\n      x: container.clientWidth / 2,\n      y: container.clientHeight / 2\n    };\n  }; // in 放大\n\n\n  var zoomIn = function () {\n    var _a;\n\n    (_a = useGraph.current) === null || _a === void 0 ? void 0 : _a.zoom(Math.min(zoom.current + zoomFactor, 5), getCenter());\n  }; // out 缩小\n\n\n  var zoomOut = function () {\n    var _a;\n\n    (_a = useGraph.current) === null || _a === void 0 ? void 0 : _a.zoom(Math.max(zoom.current - zoomFactor, 0.25), getCenter());\n  };\n\n  useEffect(function () {\n    if (graph) {\n      useGraph.current = graph;\n      width.current = container === null || container === void 0 ? void 0 : container.clientWidth;\n      height.current = container === null || container === void 0 ? void 0 : container.clientHeight;\n    }\n  }, [graph]);\n\n  var setToggleFullscreen = function () {\n    toggleFullscreen();\n    toggleWidth(!document.fullscreenElement);\n  };\n\n  if (renderIcon) {\n    return renderIcon(zoomIn, zoomOut, toggleFullscreen);\n  }\n\n  return React.createElement(Fragment, null, !fullscreen ? React.createElement(\"span\", {\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: setToggleFullscreen\n  }, \"\\u2610\") : React.createElement(\"span\", {\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: setToggleFullscreen\n  }, \"\\u2684\"), React.createElement(\"span\", {\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: zoomIn\n  }, \"+\"), React.createElement(\"span\", {\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: zoomIn\n  }, \"-\"));\n};\n\nexport var createToolbar = function (_a) {\n  var _b;\n\n  var graph = _a.graph,\n      container = _a.container,\n      toolbarCfg = _a.toolbarCfg;\n  var style = toolbarCfg.style,\n      show = toolbarCfg.show,\n      className = toolbarCfg.className;\n  var toolbarId = graph.get('id') + \"-toolbar\";\n  var exist = document.querySelector(\"#\" + toolbarId);\n\n  if (exist) {\n    (_b = exist.parentNode) === null || _b === void 0 ? void 0 : _b.removeChild(exist);\n  }\n\n  if (!show) {\n    return;\n  }\n\n  var defaultStyle = {\n    position: 'absolute',\n    right: '12px',\n    top: '12px',\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '6px',\n    borderRadius: '2px',\n    fontSize: '24px',\n    textAlign: 'center',\n    lineHeight: '24px',\n    color: 'rgba(0,0,0,.65)',\n    backgroundColor: '#fff',\n    boxShadow: '0 0 3px #ccc'\n  };\n  var mountPoint = document.createElement('div');\n  mountPoint.id = toolbarId;\n  mountPoint.className = className !== null && className !== void 0 ? className : 'charts-toolbar';\n  setStyles(mountPoint, defaultStyle);\n  setStyles(mountPoint, style);\n  ReactDOM.render(React.createElement(Toolbar, {\n    graph: graph,\n    container: container,\n    toolbarCfg: toolbarCfg\n  }), mountPoint); // @ts-ignore\n\n  container.appendChild(mountPoint);\n};","map":{"version":3,"sources":["C:/Users/Home/Desktop/cs-2005/node_modules/@ant-design/charts/es/graphs/components/toolbar.js"],"names":["React","useEffect","useRef","Fragment","ReactDOM","useFullscreen","setStyles","Toolbar","_a","toolbarCfg","container","graph","useGraph","width","height","zoom","_b","zoomFactor","renderIcon","_c","fullscreen","toggleFullscreen","getWindow","window","outerWidth","outerHeight","toggleWidth","f","size","current","changeSize","getCenter","x","y","clientWidth","clientHeight","zoomIn","Math","min","zoomOut","max","setToggleFullscreen","document","fullscreenElement","createElement","style","cursor","onClick","createToolbar","show","className","toolbarId","get","exist","querySelector","parentNode","removeChild","defaultStyle","position","right","top","display","flexDirection","padding","borderRadius","fontSize","textAlign","lineHeight","color","backgroundColor","boxShadow","mountPoint","id","render","appendChild"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport useFullscreen from '../hooks/useFullscreen';\nimport { setStyles } from '../utils';\nvar Toolbar = function (_a) {\n    var toolbarCfg = _a.toolbarCfg, container = _a.container, graph = _a.graph;\n    var useGraph = useRef();\n    var width = useRef();\n    var height = useRef();\n    var zoom = useRef(1);\n    var _b = toolbarCfg.zoomFactor, zoomFactor = _b === void 0 ? 0.25 : _b, renderIcon = toolbarCfg.renderIcon;\n    var _c = useFullscreen(container), fullscreen = _c[0], toggleFullscreen = _c[1];\n    // 获取当全屏时的窗口大小\n    var getWindow = function () {\n        return [window.outerWidth, window.outerHeight];\n    };\n    // 切换全屏时保存 graph 尺寸\n    var toggleWidth = function (f) {\n        var _a;\n        var size = f ? getWindow() : [width.current, height.current];\n        (_a = useGraph.current) === null || _a === void 0 ? void 0 : _a.changeSize(size[0], size[1]);\n    };\n    // 获取缩放中心\n    var getCenter = function () {\n        if (!container) {\n            return {\n                x: 0,\n                y: 0,\n            };\n        }\n        return {\n            x: container.clientWidth / 2,\n            y: container.clientHeight / 2,\n        };\n    };\n    // in 放大\n    var zoomIn = function () {\n        var _a;\n        (_a = useGraph.current) === null || _a === void 0 ? void 0 : _a.zoom(Math.min(zoom.current + zoomFactor, 5), getCenter());\n    };\n    // out 缩小\n    var zoomOut = function () {\n        var _a;\n        (_a = useGraph.current) === null || _a === void 0 ? void 0 : _a.zoom(Math.max(zoom.current - zoomFactor, 0.25), getCenter());\n    };\n    useEffect(function () {\n        if (graph) {\n            useGraph.current = graph;\n            width.current = container === null || container === void 0 ? void 0 : container.clientWidth;\n            height.current = container === null || container === void 0 ? void 0 : container.clientHeight;\n        }\n    }, [graph]);\n    var setToggleFullscreen = function () {\n        toggleFullscreen();\n        toggleWidth(!document.fullscreenElement);\n    };\n    if (renderIcon) {\n        return renderIcon(zoomIn, zoomOut, toggleFullscreen);\n    }\n    return (React.createElement(Fragment, null,\n        !fullscreen ? (React.createElement(\"span\", { style: {\n                cursor: 'pointer',\n            }, onClick: setToggleFullscreen }, \"\\u2610\")) : (React.createElement(\"span\", { style: {\n                cursor: 'pointer',\n            }, onClick: setToggleFullscreen }, \"\\u2684\")),\n        React.createElement(\"span\", { style: {\n                cursor: 'pointer',\n            }, onClick: zoomIn }, \"+\"),\n        React.createElement(\"span\", { style: {\n                cursor: 'pointer',\n            }, onClick: zoomIn }, \"-\")));\n};\nexport var createToolbar = function (_a) {\n    var _b;\n    var graph = _a.graph, container = _a.container, toolbarCfg = _a.toolbarCfg;\n    var style = toolbarCfg.style, show = toolbarCfg.show, className = toolbarCfg.className;\n    var toolbarId = graph.get('id') + \"-toolbar\";\n    var exist = document.querySelector(\"#\" + toolbarId);\n    if (exist) {\n        (_b = exist.parentNode) === null || _b === void 0 ? void 0 : _b.removeChild(exist);\n    }\n    if (!show) {\n        return;\n    }\n    var defaultStyle = {\n        position: 'absolute',\n        right: '12px',\n        top: '12px',\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '6px',\n        borderRadius: '2px',\n        fontSize: '24px',\n        textAlign: 'center',\n        lineHeight: '24px',\n        color: 'rgba(0,0,0,.65)',\n        backgroundColor: '#fff',\n        boxShadow: '0 0 3px #ccc',\n    };\n    var mountPoint = document.createElement('div');\n    mountPoint.id = toolbarId;\n    mountPoint.className = className !== null && className !== void 0 ? className : 'charts-toolbar';\n    setStyles(mountPoint, defaultStyle);\n    setStyles(mountPoint, style);\n    ReactDOM.render(React.createElement(Toolbar, { graph: graph, container: container, toolbarCfg: toolbarCfg }), mountPoint);\n    // @ts-ignore\n    container.appendChild(mountPoint);\n};\n"]},"metadata":{},"sourceType":"module"}