{"ast":null,"code":"import _initializerDefineProperty from \"@babel/runtime/helpers/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/initializerWarningHelper\";\n\nvar _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _class3, _temp;\n\nimport { IDENTIFIER } from '@antv/g-webgpu-core';\nimport { inject, injectable, named } from 'inversify';\nexport var Renderable = (_dec = injectable(), _dec2 = inject(IDENTIFIER.MeshComponentManager), _dec3 = inject(IDENTIFIER.CullableComponentManager), _dec4 = inject(IDENTIFIER.TransformComponentManager), _dec5 = inject(IDENTIFIER.Systems), _dec6 = named(IDENTIFIER.SceneGraphSystem), _dec(_class = (_class2 = (_temp = _class3 = /*#__PURE__*/function () {\n  function Renderable() {\n    _classCallCheck(this, Renderable);\n\n    this.attributes = {};\n    this.config = void 0;\n\n    _initializerDefineProperty(this, \"mesh\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"cullable\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"transform\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"sceneGraphSystem\", _descriptor4, this);\n\n    this.meshComponent = void 0;\n    this.transformComponent = void 0;\n    this.entity = void 0;\n  }\n\n  _createClass(Renderable, [{\n    key: \"getEntity\",\n    value: function getEntity() {\n      return this.entity;\n    }\n  }, {\n    key: \"getTransformComponent\",\n    value: function getTransformComponent() {\n      return this.transformComponent;\n    }\n  }, {\n    key: \"getMeshComponent\",\n    value: function getMeshComponent() {\n      return this.meshComponent;\n    }\n  }, {\n    key: \"setConfig\",\n    value: function setConfig(config) {\n      this.config = config;\n    }\n  }, {\n    key: \"setEntity\",\n    value: function setEntity(entity) {\n      this.entity = entity;\n      this.cullable.create(entity);\n      this.meshComponent = this.mesh.create(entity);\n      this.transformComponent = this.transform.create(entity);\n      this.onEntityCreated();\n    }\n  }, {\n    key: \"setMaterial\",\n    value: function setMaterial(material) {\n      this.meshComponent.material = material;\n      return this;\n    }\n  }, {\n    key: \"setGeometry\",\n    value: function setGeometry(geometry) {\n      this.meshComponent.geometry = geometry;\n      return this;\n    }\n  }, {\n    key: \"setAttributes\",\n    value: function setAttributes(attributes) {\n      var _this = this;\n\n      Object.keys(attributes).forEach(function (name) {\n        if (attributes[name] !== undefined && attributes[name] !== _this.attributes[name]) {\n          _this.onAttributeChanged({\n            name: name,\n            data: attributes[name]\n          });\n\n          _this.attributes[name] = attributes[name];\n        }\n      });\n    }\n  }, {\n    key: \"setVisible\",\n    value: function setVisible(visible) {\n      var _this2 = this;\n\n      this.meshComponent.visible = visible;\n      this.meshComponent.children.forEach(function (childEntity) {\n        var child = _this2.mesh.getComponentByEntity(childEntity);\n\n        if (child) {\n          child.visible = visible;\n        }\n      });\n      return this;\n    }\n  }, {\n    key: \"isVisible\",\n    value: function isVisible() {\n      return this.meshComponent.visible;\n    }\n  }, {\n    key: \"attach\",\n    value: function attach(parentRenderable) {\n      this.sceneGraphSystem.attach(this.entity, parentRenderable.entity);\n      return this;\n    }\n  }, {\n    key: \"detach\",\n    value: function detach() {\n      this.sceneGraphSystem.detach(this.entity);\n      return this;\n    }\n  }, {\n    key: \"detachChildren\",\n    value: function detachChildren() {\n      this.sceneGraphSystem.detachChildren(this.entity);\n      return this;\n    }\n  }, {\n    key: \"onEntityCreated\",\n    value: function onEntityCreated() {//\n    }\n  }, {\n    key: \"onAttributeChanged\",\n    value: function onAttributeChanged(_ref) {\n      var name = _ref.name,\n          data = _ref.data;\n\n      if (this.meshComponent && this.meshComponent.material) {\n        this.meshComponent.material.setUniform(this.convertAttributeName2UniformName(name), data);\n      }\n    }\n  }, {\n    key: \"convertAttributeName2UniformName\",\n    value: function convertAttributeName2UniformName(attributeName) {\n      return attributeName;\n    }\n  }]);\n\n  return Renderable;\n}(), _class3.POINT = 'point', _class3.LINE = 'line', _class3.GRID = 'grid', _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"mesh\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"cullable\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"transform\", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, \"sceneGraphSystem\", [_dec5, _dec6], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class);","map":{"version":3,"sources":["../../src/renderable/Renderable.ts"],"names":["injectable","Renderable","inject","IDENTIFIER","named","Object","attributes","name","data","child","parentRenderable"],"mappings":"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","sourcesContent":["import {\n  BufferData,\n  ComponentManager,\n  CullableComponent,\n  Entity,\n  GeometryComponent,\n  HierarchyComponent,\n  IDENTIFIER,\n  MaterialComponent,\n  MeshComponent,\n  SceneGraphSystem,\n  TransformComponent,\n} from '@antv/g-webgpu-core';\nimport { inject, injectable, named } from 'inversify';\n\nexport interface IRenderable<T> {\n  setConfig(config: T): void;\n  setAttributes(attributes: Record<string, BufferData | undefined>): void;\n  setEntity(entity: Entity): void;\n  setMaterial(material: MaterialComponent): void;\n  setGeometry(geometry: GeometryComponent): void;\n}\n\n@injectable()\nexport class Renderable<T = {}> implements IRenderable<T> {\n  public static POINT = 'point';\n  public static LINE = 'line';\n  public static GRID = 'grid';\n\n  protected attributes: Record<string, BufferData> = {};\n  protected config: T;\n\n  @inject(IDENTIFIER.MeshComponentManager)\n  private readonly mesh: ComponentManager<MeshComponent>;\n\n  @inject(IDENTIFIER.CullableComponentManager)\n  private readonly cullable: ComponentManager<CullableComponent>;\n\n  @inject(IDENTIFIER.TransformComponentManager)\n  private readonly transform: ComponentManager<TransformComponent>;\n\n  @inject(IDENTIFIER.Systems)\n  @named(IDENTIFIER.SceneGraphSystem)\n  private readonly sceneGraphSystem: SceneGraphSystem;\n\n  private meshComponent: MeshComponent;\n  private transformComponent: TransformComponent;\n\n  private entity: Entity;\n\n  public getEntity() {\n    return this.entity;\n  }\n\n  public getTransformComponent() {\n    return this.transformComponent;\n  }\n\n  public getMeshComponent() {\n    return this.meshComponent;\n  }\n\n  public setConfig(config: T) {\n    this.config = config;\n  }\n\n  public setEntity(entity: Entity) {\n    this.entity = entity;\n    this.cullable.create(entity);\n    this.meshComponent = this.mesh.create(entity);\n    this.transformComponent = this.transform.create(entity);\n    this.onEntityCreated();\n  }\n\n  public setMaterial(material: MaterialComponent) {\n    this.meshComponent.material = material;\n    return this;\n  }\n\n  public setGeometry(geometry: GeometryComponent) {\n    this.meshComponent.geometry = geometry;\n    return this;\n  }\n\n  public setAttributes(attributes: Record<string, BufferData | undefined>) {\n    Object.keys(attributes).forEach((name) => {\n      if (\n        attributes[name] !== undefined &&\n        attributes[name] !== this.attributes[name]\n      ) {\n        this.onAttributeChanged({\n          name,\n          data: attributes[name]!,\n        });\n        this.attributes[name] = attributes[name]!;\n      }\n    });\n  }\n\n  public setVisible(visible: boolean) {\n    this.meshComponent.visible = visible;\n    this.meshComponent.children.forEach((childEntity) => {\n      const child = this.mesh.getComponentByEntity(childEntity);\n      if (child) {\n        child.visible = visible;\n      }\n    });\n    return this;\n  }\n\n  public isVisible() {\n    return this.meshComponent.visible;\n  }\n\n  public attach(parentRenderable: Renderable<T>) {\n    this.sceneGraphSystem.attach(this.entity, parentRenderable.entity);\n    return this;\n  }\n\n  public detach() {\n    this.sceneGraphSystem.detach(this.entity);\n    return this;\n  }\n\n  public detachChildren() {\n    this.sceneGraphSystem.detachChildren(this.entity);\n    return this;\n  }\n\n  protected onEntityCreated() {\n    //\n  }\n\n  protected onAttributeChanged({\n    name,\n    data,\n  }: {\n    name: string;\n    data: BufferData;\n  }) {\n    if (this.meshComponent && this.meshComponent.material) {\n      this.meshComponent.material.setUniform(\n        this.convertAttributeName2UniformName(name),\n        data,\n      );\n    }\n  }\n\n  protected convertAttributeName2UniformName(attributeName: string) {\n    return attributeName;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}