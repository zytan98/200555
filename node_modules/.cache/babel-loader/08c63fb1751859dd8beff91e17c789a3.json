{"ast":null,"code":"import { flow, deepAssign } from '../../../utils';\nimport { basicFunnel } from './basic';\n/**\n * 处理字段数据\n * @param params\n */\n\nfunction field(params) {\n  var _a;\n\n  var chart = params.chart,\n      options = params.options;\n  var _b = options.data,\n      data = _b === void 0 ? [] : _b,\n      yField = options.yField; // 绘制漏斗图\n\n  chart.data(data);\n  chart.scale((_a = {}, _a[yField] = {\n    sync: true\n  }, _a));\n  return params;\n}\n/**\n * geometry处理\n * @param params\n */\n\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var seriesField = options.seriesField,\n      isTransposed = options.isTransposed;\n  chart.facet('rect', {\n    fields: [seriesField],\n    padding: [isTransposed ? 0 : 32, 10, 0, 10],\n    eachView: function (view, facet) {\n      basicFunnel(deepAssign({}, params, {\n        chart: view,\n        options: {\n          data: facet.data\n        }\n      }));\n    }\n  });\n  return params;\n}\n/**\n * 分面漏斗\n * @param chart\n * @param options\n */\n\n\nexport function facetFunnel(params) {\n  return flow(field, geometry)(params);\n}","map":{"version":3,"sources":["../../../../src/plots/funnel/geometries/facet.ts"],"names":[],"mappings":"AAAA,SAAS,IAAT,EAAe,UAAf,QAAiC,gBAAjC;AAGA,SAAS,WAAT,QAA4B,SAA5B;AAEA;;;AAGG;;AACH,SAAS,KAAT,CAAe,MAAf,EAA4C;;;AAClC,MAAA,KAAK,GAAc,MAAM,CAApB,KAAL;AAAA,MAAO,OAAO,GAAK,MAAM,CAAX,OAAd;AACA,MAAA,EAAA,GAAsB,OAAO,CAApB,IAAT;AAAA,MAAA,IAAI,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,EAAH,GAAK,EAAT;AAAA,MAAW,MAAM,GAAK,OAAO,CAAZ,MAAjB,CAFkC,CAG1C;;AACA,EAAA,KAAK,CAAC,IAAN,CAAW,IAAX;AACA,EAAA,KAAK,CAAC,KAAN,EAAW,EAAA,GAAA,EAAA,EACT,EAAA,CAAC,MAAD,CAAA,GAAU;AACR,IAAA,IAAI,EAAE;AADE,GADD,EAIT,EAJF;AAKA,SAAO,MAAP;AACD;AAED;;;AAGG;;;AACH,SAAS,QAAT,CAAkB,MAAlB,EAA+C;AACrC,MAAA,KAAK,GAAc,MAAM,CAApB,KAAL;AAAA,MAAO,OAAO,GAAK,MAAM,CAAX,OAAd;AACA,MAAA,WAAW,GAAmB,OAAO,CAA1B,WAAX;AAAA,MAAa,YAAY,GAAK,OAAO,CAAZ,YAAzB;AAER,EAAA,KAAK,CAAC,KAAN,CAAY,MAAZ,EAAoB;AAClB,IAAA,MAAM,EAAE,CAAC,WAAD,CADU;AAElB,IAAA,OAAO,EAAE,CAAC,YAAY,GAAG,CAAH,GAAO,EAApB,EAAwB,EAAxB,EAA4B,CAA5B,EAA+B,EAA/B,CAFS;AAGlB,IAAA,QAAQ,EAAA,UAAC,IAAD,EAAO,KAAP,EAAY;AAClB,MAAA,WAAW,CACT,UAAU,CAAC,EAAD,EAAK,MAAL,EAAa;AACrB,QAAA,KAAK,EAAE,IADc;AAErB,QAAA,OAAO,EAAE;AACP,UAAA,IAAI,EAAE,KAAK,CAAC;AADL;AAFY,OAAb,CADD,CAAX;AAQD;AAZiB,GAApB;AAeA,SAAO,MAAP;AACD;AAED;;;;AAIG;;;AACH,OAAM,SAAU,WAAV,CAAsB,MAAtB,EAAmD;AACvD,SAAO,IAAI,CAAC,KAAD,EAAQ,QAAR,CAAJ,CAAsB,MAAtB,CAAP;AACD","sourcesContent":["import { flow, deepAssign } from '../../../utils';\nimport { Params } from '../../../core/adaptor';\nimport { FunnelOptions } from '../types';\nimport { basicFunnel } from './basic';\n\n/**\n * 处理字段数据\n * @param params\n */\nfunction field(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { data = [], yField } = options;\n  // 绘制漏斗图\n  chart.data(data);\n  chart.scale({\n    [yField]: {\n      sync: true,\n    },\n  });\n  return params;\n}\n\n/**\n * geometry处理\n * @param params\n */\nfunction geometry(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { seriesField, isTransposed } = options;\n\n  chart.facet('rect', {\n    fields: [seriesField],\n    padding: [isTransposed ? 0 : 32, 10, 0, 10],\n    eachView(view, facet) {\n      basicFunnel(\n        deepAssign({}, params, {\n          chart: view,\n          options: {\n            data: facet.data,\n          },\n        })\n      );\n    },\n  });\n\n  return params;\n}\n\n/**\n * 分面漏斗\n * @param chart\n * @param options\n */\nexport function facetFunnel(params: Params<FunnelOptions>) {\n  return flow(field, geometry)(params);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}