{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { loadScriptAsync } from '../utils/dom';\nvar glslang;\nexport default function () {\n  return _ref.apply(this, arguments);\n}\n\nfunction _ref() {\n  _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!glslang) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", glslang);\n\n          case 2:\n            _context.next = 4;\n            return loadScriptAsync('https://preview.babylonjs.com/glslang/glslang.js');\n\n          case 4:\n            glslang = window.glslang('https://preview.babylonjs.com/glslang/glslang.wasm');\n            return _context.abrupt(\"return\", glslang);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _ref.apply(this, arguments);\n}","map":{"version":3,"sources":["../../src/webgpu/glslang.ts"],"names":["loadScriptAsync","glslang","window"],"mappings":";;AAAA,SAAA,eAAA,QAAA,cAAA;AAEA,IAAA,OAAA;AACA,eAAA,YAAA;AAAA,SAAA,IAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;AAAA;;;kEAAe,SAAA,OAAA,GAAA;AAAA,WAAA,mBAAA,CAAA,IAAA,CAAA,SAAA,QAAA,CAAA,QAAA,EAAA;AAAA,aAAA,CAAA,EAAA;AAAA,gBAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,eAAA,CAAA;AAAA,gBAAA,CAAA,OAAA,EAAA;AAAA,cAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA;AAAA;;AAAA,mBAAA,QAAA,CAAA,MAAA,CAAA,QAAA,EAAA,OAAA,CAAA;;AAAA,eAAA,CAAA;AAAA,YAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA,mBAYPA,eAAe,CAZR,kDAYQ,CAZR;;AAAA,eAAA,CAAA;AAcbC,YAAAA,OAAO,GAAIC,MAAD,CAAA,OAACA,CAAXD,oDAAWC,CAAXD;AAda,mBAAA,QAAA,CAAA,MAAA,CAAA,QAAA,EAAA,OAAA,CAAA;;AAAA,eAAA,CAAA;AAAA,eAAA,KAAA;AAAA,mBAAA,QAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,KAAA,EAAA,OAAA,CAAA","sourcesContent":["import { loadScriptAsync } from '../utils/dom';\n\nlet glslang: any;\nexport default async function() {\n  if (glslang) {\n    return glslang;\n  }\n  // // @see https://github.com/webpack/webpack/issues/10446\n  // // @see https://github.com/austinEng/webgpu-samples/issues/33\n  // const glslangModule = await import(\n  //   /* webpackIgnore: true */\n  //   'https://cdn.jsdelivr.net/npm/@webgpu/glslang@0.0.15/dist/web-devel/glslang.js'\n  // );\n  // glslang = await glslangModule.default();\n\n  await loadScriptAsync('https://preview.babylonjs.com/glslang/glslang.js');\n\n  glslang = (window as any).glslang(\n    'https://preview.babylonjs.com/glslang/glslang.wasm',\n  );\n\n  return glslang;\n}\n"]},"metadata":{},"sourceType":"module"}