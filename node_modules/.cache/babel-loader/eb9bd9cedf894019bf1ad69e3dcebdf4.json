{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nvar _dec, _class, _temp;\n\nimport { injectable } from 'inversify';\nexport var ConfigService = (_dec = injectable(), _dec(_class = (_temp = /*#__PURE__*/function () {\n  function ConfigService() {\n    _classCallCheck(this, ConfigService);\n\n    this.config = void 0;\n  }\n\n  _createClass(ConfigService, [{\n    key: \"get\",\n    value: function get() {\n      return this.config;\n    }\n  }, {\n    key: \"set\",\n    value: function set(config) {\n      this.config = config;\n    }\n  }]);\n\n  return ConfigService;\n}(), _temp)) || _class);","map":{"version":3,"sources":["../../../src/services/config/ConfigService.ts"],"names":["injectable","ConfigService"],"mappings":";;;;;AAAA,SAAA,UAAA,QAAA,WAAA;AAoBA,OAAA,IAAaC,aAAb,IAAA,IAAA,GADCD,UAAU,EACX,EAAA,IAAA,CAAA,MAAA,IAAA,KAAA,GAAA,aAAA,YAAA;AAAA,WAAA,aAAA,GAAA;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,aAAA,CAAA;;AAAA,SAAA,MAAA,GAAA,KAAA,CAAA;AAAA;;AAAA,EAAA,YAAA,CAAA,aAAA,EAAA,CAAA;AAAA,IAAA,GAAA,EAAA,KAAA;AAAA,IAAA,KAAA,EAAA,SAAA,GAAA,GAGe;AACX,aAAO,KAAP,MAAA;AACD;AALH,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,KAAA;AAAA,IAAA,KAAA,EAAA,SAAA,GAAA,CAAA,MAAA,EAOuC;AACnC,WAAA,MAAA,GAAA,MAAA;AACD;AATH,GAAA,CAAA,CAAA;;AAAA,SAAA,aAAA;AAAA,CAAA,EAAA,EAAA,KAAA,CAAA,CAAA,IAAA,MAAA,CAAA","sourcesContent":["import { injectable } from 'inversify';\nimport {\n  IRendererConfig,\n  IRendererService,\n} from '../../components/renderer/IRendererService';\n\nexport interface IConfig {\n  canvas: HTMLCanvasElement;\n  useRenderBundle: boolean;\n  engineOptions: IRendererConfig;\n  onInit: (engine: IRendererService) => void;\n  onUpdate: (engine: IRendererService) => void;\n}\n\nexport interface IConfigService {\n  get(): Partial<IConfig>;\n  set(config: Partial<IConfig>): void;\n}\n\n@injectable()\nexport class ConfigService implements IConfigService {\n  private config: Partial<IConfig>;\n\n  public get() {\n    return this.config;\n  }\n\n  public set(config: Partial<IConfig>) {\n    this.config = config;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}