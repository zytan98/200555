{"ast":null,"code":"export var VACANT_EDGE_ID = -1;\nexport var VACANT_NODE_ID = -1;\nexport var VACANT_EDGE_LABEL = \"-1\";\nexport var VACANT_NODE_LABEL = \"-1\";\nexport var VACANT_GRAPH_ID = -1;\nexport var AUTO_EDGE_ID = \"-1\";\n\nvar Edge =\n/** @class */\nfunction () {\n  function Edge(id, from, to, label) {\n    if (id === void 0) {\n      id = VACANT_EDGE_ID;\n    }\n\n    if (from === void 0) {\n      from = VACANT_NODE_ID;\n    }\n\n    if (to === void 0) {\n      to = VACANT_NODE_ID;\n    }\n\n    if (label === void 0) {\n      label = VACANT_EDGE_LABEL;\n    }\n\n    this.id = id;\n    this.from = from;\n    this.to = to;\n    this.label = label;\n  }\n\n  return Edge;\n}();\n\nexport { Edge };\n\nvar Node =\n/** @class */\nfunction () {\n  function Node(id, label) {\n    if (id === void 0) {\n      id = VACANT_NODE_ID;\n    }\n\n    if (label === void 0) {\n      label = VACANT_NODE_LABEL;\n    }\n\n    this.id = id;\n    this.label = label;\n    this.edges = [];\n    this.edgeMap = {};\n  }\n\n  Node.prototype.addEdge = function (edge) {\n    this.edges.push(edge);\n    this.edgeMap[edge.id] = edge;\n  };\n\n  return Node;\n}();\n\nexport { Node };\n\nvar Graph =\n/** @class */\nfunction () {\n  function Graph(id, edgeIdAutoIncrease, directed) {\n    if (id === void 0) {\n      id = VACANT_NODE_ID;\n    }\n\n    if (edgeIdAutoIncrease === void 0) {\n      edgeIdAutoIncrease = true;\n    }\n\n    if (directed === void 0) {\n      directed = false;\n    }\n\n    this.id = id;\n    this.edgeIdAutoIncrease = edgeIdAutoIncrease;\n    this.edges = [];\n    this.nodes = [];\n    this.nodeMap = {};\n    this.edgeMap = {};\n    this.nodeLabelMap = {};\n    this.edgeLabelMap = {};\n    this.counter = 0;\n    this.directed = directed;\n  }\n\n  Graph.prototype.getNodeNum = function () {\n    return this.nodes.length;\n  };\n\n  Graph.prototype.addNode = function (id, label) {\n    if (this.nodeMap[id]) return;\n    var node = new Node(id, label);\n    this.nodes.push(node);\n    this.nodeMap[id] = node;\n    if (!this.nodeLabelMap[label]) this.nodeLabelMap[label] = [];\n    this.nodeLabelMap[label].push(id);\n  };\n\n  Graph.prototype.addEdge = function (id, from, to, label) {\n    if (this.edgeIdAutoIncrease || id === undefined) id = this.counter++;\n    if (this.nodeMap[from] && this.nodeMap[to] && this.nodeMap[to].edgeMap[id]) return;\n    var edge = new Edge(id, from, to, label);\n    this.edges.push(edge);\n    this.edgeMap[id] = edge;\n    this.nodeMap[from].addEdge(edge);\n    if (!this.edgeLabelMap[label]) this.edgeLabelMap[label] = [];\n    this.edgeLabelMap[label].push(edge);\n\n    if (!this.directed) {\n      var rEdge = new Edge(id, to, from, label);\n      this.nodeMap[to].addEdge(rEdge);\n      this.edgeLabelMap[label].push(rEdge);\n    }\n  };\n\n  return Graph;\n}();\n\nexport { Graph };","map":{"version":3,"sources":["C:/Users/Home/Desktop/cs-2005/node_modules/@antv/algorithm/es/gSpan/struct.js"],"names":["VACANT_EDGE_ID","VACANT_NODE_ID","VACANT_EDGE_LABEL","VACANT_NODE_LABEL","VACANT_GRAPH_ID","AUTO_EDGE_ID","Edge","id","from","to","label","Node","edges","edgeMap","prototype","addEdge","edge","push","Graph","edgeIdAutoIncrease","directed","nodes","nodeMap","nodeLabelMap","edgeLabelMap","counter","getNodeNum","length","addNode","node","undefined","rEdge"],"mappings":"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","sourcesContent":["export var VACANT_EDGE_ID = -1;\nexport var VACANT_NODE_ID = -1;\nexport var VACANT_EDGE_LABEL = \"-1\";\nexport var VACANT_NODE_LABEL = \"-1\";\nexport var VACANT_GRAPH_ID = -1;\nexport var AUTO_EDGE_ID = \"-1\";\n\nvar Edge =\n/** @class */\nfunction () {\n  function Edge(id, from, to, label) {\n    if (id === void 0) {\n      id = VACANT_EDGE_ID;\n    }\n\n    if (from === void 0) {\n      from = VACANT_NODE_ID;\n    }\n\n    if (to === void 0) {\n      to = VACANT_NODE_ID;\n    }\n\n    if (label === void 0) {\n      label = VACANT_EDGE_LABEL;\n    }\n\n    this.id = id;\n    this.from = from;\n    this.to = to;\n    this.label = label;\n  }\n\n  return Edge;\n}();\n\nexport { Edge };\n\nvar Node =\n/** @class */\nfunction () {\n  function Node(id, label) {\n    if (id === void 0) {\n      id = VACANT_NODE_ID;\n    }\n\n    if (label === void 0) {\n      label = VACANT_NODE_LABEL;\n    }\n\n    this.id = id;\n    this.label = label;\n    this.edges = [];\n    this.edgeMap = {};\n  }\n\n  Node.prototype.addEdge = function (edge) {\n    this.edges.push(edge);\n    this.edgeMap[edge.id] = edge;\n  };\n\n  return Node;\n}();\n\nexport { Node };\n\nvar Graph =\n/** @class */\nfunction () {\n  function Graph(id, edgeIdAutoIncrease, directed) {\n    if (id === void 0) {\n      id = VACANT_NODE_ID;\n    }\n\n    if (edgeIdAutoIncrease === void 0) {\n      edgeIdAutoIncrease = true;\n    }\n\n    if (directed === void 0) {\n      directed = false;\n    }\n\n    this.id = id;\n    this.edgeIdAutoIncrease = edgeIdAutoIncrease;\n    this.edges = [];\n    this.nodes = [];\n    this.nodeMap = {};\n    this.edgeMap = {};\n    this.nodeLabelMap = {};\n    this.edgeLabelMap = {};\n    this.counter = 0;\n    this.directed = directed;\n  }\n\n  Graph.prototype.getNodeNum = function () {\n    return this.nodes.length;\n  };\n\n  Graph.prototype.addNode = function (id, label) {\n    if (this.nodeMap[id]) return;\n    var node = new Node(id, label);\n    this.nodes.push(node);\n    this.nodeMap[id] = node;\n    if (!this.nodeLabelMap[label]) this.nodeLabelMap[label] = [];\n    this.nodeLabelMap[label].push(id);\n  };\n\n  Graph.prototype.addEdge = function (id, from, to, label) {\n    if (this.edgeIdAutoIncrease || id === undefined) id = this.counter++;\n    if (this.nodeMap[from] && this.nodeMap[to] && this.nodeMap[to].edgeMap[id]) return;\n    var edge = new Edge(id, from, to, label);\n    this.edges.push(edge);\n    this.edgeMap[id] = edge;\n    this.nodeMap[from].addEdge(edge);\n    if (!this.edgeLabelMap[label]) this.edgeLabelMap[label] = [];\n    this.edgeLabelMap[label].push(edge);\n\n    if (!this.directed) {\n      var rEdge = new Edge(id, to, from, label);\n      this.nodeMap[to].addEdge(rEdge);\n      this.edgeLabelMap[label].push(rEdge);\n    }\n  };\n\n  return Graph;\n}();\n\nexport { Graph };"]},"metadata":{},"sourceType":"module"}