{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each, get, map, isArray } from '@antv/util';\nimport { registerAction, registerInteraction, Action } from '@antv/g2';\nimport { getAllElements, getViews, getSiblingViews } from '../../../utils';\nimport { clearHighlight, getElementValue } from './utils';\n/**\n * 存在多个 view 时，view 之间的联动交互\n *\n * 提供四个反馈 action，均接受参数：linkField 关联字段，dim 维度\n * 1. showTooltip\n * 2. active\n * 3. highlight\n * 4. selected\n *\n * 附加，两个结束反馈 action：\n * 1. hidetooltip\n * 2. reset 清除激活和高亮状态\n */\n\nvar Association =\n/** @class */\nfunction (_super) {\n  __extends(Association, _super);\n\n  function Association() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * 获取关联的 elements\n   *\n   * - 如果 dim 参数存在，根据 dim 获取相应的 field。与 linkField 不匹配则 return\n   * - 否则 dim 参数不存在，且 linkField 存在，则作为关联字段\n   * - 否则若 linkField 不存在，则获取第一个分类字段\n   * @returns EventItem[]\n   */\n\n\n  Association.prototype.getAssociationItems = function (views, params) {\n    var _a;\n\n    var event = this.context.event;\n\n    var _b = params || {},\n        linkField = _b.linkField,\n        dim = _b.dim;\n\n    var items = [];\n\n    if ((_a = event.data) === null || _a === void 0 ? void 0 : _a.data) {\n      var data_1 = event.data.data;\n      each(views, function (v) {\n        var _a, _b;\n\n        var field = linkField;\n\n        if (dim === 'x') {\n          field = v.getXScale().field;\n        } else if (dim === 'y') {\n          field = (_a = v.getYScales().find(function (s) {\n            return s.field === field;\n          })) === null || _a === void 0 ? void 0 : _a.field;\n        } else if (!field) {\n          field = (_b = v.getGroupScales()[0]) === null || _b === void 0 ? void 0 : _b.field;\n        }\n\n        if (!field) {\n          return;\n        }\n\n        var elements = map(getAllElements(v), function (ele) {\n          var active = false;\n          var inactive = false;\n          var dataValue = isArray(data_1) ? get(data_1[0], field) : get(data_1, field);\n\n          if (getElementValue(ele, field) === dataValue) {\n            active = true;\n          } else {\n            inactive = true;\n          }\n\n          return {\n            element: ele,\n            view: v,\n            active: active,\n            inactive: inactive\n          };\n        });\n        items.push.apply(items, elements);\n      });\n    }\n\n    return items;\n  };\n  /**\n   * 所有同一层级的 tooltip 显示\n   */\n\n\n  Association.prototype.showTooltip = function (params) {\n    var siblings = getSiblingViews(this.context.view);\n    var elements = this.getAssociationItems(siblings, params);\n    each(elements, function (ele) {\n      if (ele.active) {\n        var box = ele.element.shape.getCanvasBBox();\n        ele.view.showTooltip({\n          x: box.minX + box.width / 2,\n          y: box.minY + box.height / 2\n        });\n      }\n    });\n  };\n  /**\n   * 隐藏同一层级的 tooltip\n   */\n\n\n  Association.prototype.hideTooltip = function () {\n    var siblings = getSiblingViews(this.context.view);\n    each(siblings, function (sibling) {\n      sibling.hideTooltip();\n    });\n  };\n  /**\n   * 设置 active 状态\n   */\n\n\n  Association.prototype.active = function (params) {\n    var views = getViews(this.context.view);\n    var items = this.getAssociationItems(views, params);\n    each(items, function (item) {\n      var active = item.active,\n          element = item.element;\n\n      if (active) {\n        element.setState('active', true);\n      }\n    });\n  };\n  /**\n   * 设置 selected 状态\n   */\n\n\n  Association.prototype.selected = function (params) {\n    var views = getViews(this.context.view);\n    var items = this.getAssociationItems(views, params);\n    each(items, function (item) {\n      var active = item.active,\n          element = item.element;\n\n      if (active) {\n        element.setState('selected', true);\n      }\n    });\n  };\n  /**\n   * 进行高亮 => 设置 inactive 状态\n   */\n\n\n  Association.prototype.highlight = function (params) {\n    var views = getViews(this.context.view);\n    var items = this.getAssociationItems(views, params);\n    each(items, function (item) {\n      var inactive = item.inactive,\n          element = item.element;\n\n      if (inactive) {\n        element.setState('inactive', true);\n      }\n    });\n  };\n\n  Association.prototype.reset = function () {\n    var views = getViews(this.context.view);\n    each(views, function (v) {\n      clearHighlight(v);\n    });\n  };\n\n  return Association;\n}(Action);\n\nregisterAction('association', Association);\n/**\n * 相邻 view 的 active 联动（相同维值的 tooltip 联动）\n */\n\nregisterInteraction('association-active', {\n  start: [{\n    trigger: 'element:mouseenter',\n    action: 'association:active'\n  }],\n  end: [{\n    trigger: 'element:mouseleave',\n    action: 'association:reset'\n  }]\n});\n/**\n * 相邻 view 的 active 联动（相同维值的 tooltip 联动）\n */\n\nregisterInteraction('association-selected', {\n  start: [{\n    trigger: 'element:mouseenter',\n    action: 'association:selected'\n  }],\n  end: [{\n    trigger: 'element:mouseleave',\n    action: 'association:reset'\n  }]\n});\n/**\n * 相邻 view 的 highlight 联动, 突出当前 element\n */\n\nregisterInteraction('association-highlight', {\n  start: [{\n    trigger: 'element:mouseenter',\n    action: 'association:highlight'\n  }],\n  end: [{\n    trigger: 'element:mouseleave',\n    action: 'association:reset'\n  }]\n});\n/**\n * 相邻 view 的 tooltip 联动，根据 groupField 进行关联（相同维值的 tooltip 联动）\n */\n\nregisterInteraction('association-tooltip', {\n  start: [{\n    trigger: 'element:mousemove',\n    action: 'association:showTooltip'\n  }],\n  end: [{\n    trigger: 'element:mouseleave',\n    action: 'association:hideTooltip'\n  }]\n});","map":{"version":3,"sources":["../../../../src/plots/mix/interactions/association.ts"],"names":[],"mappings":"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","sourcesContent":["import { each, get, map, isArray } from '@antv/util';\nimport { registerAction, registerInteraction, View, Element, Action } from '@antv/g2';\nimport { getAllElements, getViews, getSiblingViews } from '../../../utils';\nimport { clearHighlight, getElementValue } from './utils';\n\ntype EventItem = { element: Element; view: View; active: boolean; inactive: boolean };\ntype ActionParams = { linkField?: string; dim?: 'x' | 'y' };\n/**\n * 存在多个 view 时，view 之间的联动交互\n *\n * 提供四个反馈 action，均接受参数：linkField 关联字段，dim 维度\n * 1. showTooltip\n * 2. active\n * 3. highlight\n * 4. selected\n *\n * 附加，两个结束反馈 action：\n * 1. hidetooltip\n * 2. reset 清除激活和高亮状态\n */\nclass Association extends Action {\n  /**\n   * 获取关联的 elements\n   *\n   * - 如果 dim 参数存在，根据 dim 获取相应的 field。与 linkField 不匹配则 return\n   * - 否则 dim 参数不存在，且 linkField 存在，则作为关联字段\n   * - 否则若 linkField 不存在，则获取第一个分类字段\n   * @returns EventItem[]\n   */\n  private getAssociationItems(views: View[], params?: ActionParams): EventItem[] {\n    const { event } = this.context;\n    const { linkField, dim } = params || {};\n\n    const items = [];\n\n    if (event.data?.data) {\n      const { data } = event.data;\n      each(views, (v: View) => {\n        let field = linkField;\n        if (dim === 'x') {\n          field = v.getXScale().field;\n        } else if (dim === 'y') {\n          field = v.getYScales().find((s) => s.field === field)?.field;\n        } else if (!field) {\n          field = v.getGroupScales()[0]?.field;\n        }\n        if (!field) {\n          return;\n        }\n        const elements = map(getAllElements(v), (ele) => {\n          let active = false;\n          let inactive = false;\n          const dataValue = isArray(data) ? get(data[0], field) : get(data, field);\n          if (getElementValue(ele, field) === dataValue) {\n            active = true;\n          } else {\n            inactive = true;\n          }\n          return { element: ele, view: v, active, inactive };\n        });\n        items.push(...elements);\n      });\n    }\n\n    return items;\n  }\n\n  /**\n   * 所有同一层级的 tooltip 显示\n   */\n  public showTooltip(params?: ActionParams) {\n    const siblings = getSiblingViews(this.context.view);\n    const elements = this.getAssociationItems(siblings, params);\n\n    each(elements, (ele) => {\n      if (ele.active) {\n        const box = ele.element.shape.getCanvasBBox();\n        ele.view.showTooltip({ x: box.minX + box.width / 2, y: box.minY + box.height / 2 });\n      }\n    });\n  }\n\n  /**\n   * 隐藏同一层级的 tooltip\n   */\n  public hideTooltip() {\n    const siblings = getSiblingViews(this.context.view);\n    each(siblings, (sibling) => {\n      sibling.hideTooltip();\n    });\n  }\n\n  /**\n   * 设置 active 状态\n   */\n  public active(params?: ActionParams) {\n    const views = getViews(this.context.view);\n    const items = this.getAssociationItems(views, params);\n\n    each(items, (item: EventItem) => {\n      const { active, element } = item;\n      if (active) {\n        element.setState('active', true);\n      }\n    });\n  }\n\n  /**\n   * 设置 selected 状态\n   */\n  public selected(params?: ActionParams) {\n    const views = getViews(this.context.view);\n    const items = this.getAssociationItems(views, params);\n\n    each(items, (item: EventItem) => {\n      const { active, element } = item;\n      if (active) {\n        element.setState('selected', true);\n      }\n    });\n  }\n\n  /**\n   * 进行高亮 => 设置 inactive 状态\n   */\n  public highlight(params?: ActionParams) {\n    const views = getViews(this.context.view);\n    const items = this.getAssociationItems(views, params);\n\n    each(items, (item: EventItem) => {\n      const { inactive, element } = item;\n      if (inactive) {\n        element.setState('inactive', true);\n      }\n    });\n  }\n\n  public reset() {\n    const views = getViews(this.context.view);\n    each(views, (v) => {\n      clearHighlight(v);\n    });\n  }\n}\n\nregisterAction('association', Association);\n\n/**\n * 相邻 view 的 active 联动（相同维值的 tooltip 联动）\n */\nregisterInteraction('association-active', {\n  start: [{ trigger: 'element:mouseenter', action: 'association:active' }],\n  end: [{ trigger: 'element:mouseleave', action: 'association:reset' }],\n});\n\n/**\n * 相邻 view 的 active 联动（相同维值的 tooltip 联动）\n */\nregisterInteraction('association-selected', {\n  start: [{ trigger: 'element:mouseenter', action: 'association:selected' }],\n  end: [{ trigger: 'element:mouseleave', action: 'association:reset' }],\n});\n\n/**\n * 相邻 view 的 highlight 联动, 突出当前 element\n */\nregisterInteraction('association-highlight', {\n  start: [{ trigger: 'element:mouseenter', action: 'association:highlight' }],\n  end: [{ trigger: 'element:mouseleave', action: 'association:reset' }],\n});\n\n/**\n * 相邻 view 的 tooltip 联动，根据 groupField 进行关联（相同维值的 tooltip 联动）\n */\nregisterInteraction('association-tooltip', {\n  start: [{ trigger: 'element:mousemove', action: 'association:showTooltip' }],\n  end: [{ trigger: 'element:mouseleave', action: 'association:hideTooltip' }],\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}