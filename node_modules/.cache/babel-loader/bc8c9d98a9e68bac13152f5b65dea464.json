{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nvar WebGPUAttribute = /*#__PURE__*/function () {\n  function WebGPUAttribute(engine, options) {\n    _classCallCheck(this, WebGPUAttribute);\n\n    this.engine = engine;\n    this.options = options;\n    this.attribute = void 0;\n    this.buffer = void 0;\n    var _options = options,\n        buffer = _options.buffer,\n        offset = _options.offset,\n        stride = _options.stride,\n        normalized = _options.normalized,\n        size = _options.size,\n        divisor = _options.divisor,\n        arrayStride = _options.arrayStride,\n        attributes = _options.attributes,\n        stepMode = _options.stepMode;\n    this.buffer = buffer;\n    this.attribute = {\n      buffer: buffer.get(),\n      offset: offset || 0,\n      stride: stride || 0,\n      normalized: normalized || false,\n      divisor: divisor || 0,\n      arrayStride: arrayStride || 0,\n      // @ts-ignore\n      attributes: attributes,\n      stepMode: stepMode || 'vertex'\n    };\n\n    if (size) {\n      this.attribute.size = size;\n    }\n  }\n\n  _createClass(WebGPUAttribute, [{\n    key: \"get\",\n    value: function get() {\n      return this.attribute;\n    }\n  }, {\n    key: \"updateBuffer\",\n    value: function updateBuffer(options) {\n      this.buffer.subData(options);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.buffer.destroy();\n    }\n  }]);\n\n  return WebGPUAttribute;\n}();\n\nexport { WebGPUAttribute as default };","map":{"version":3,"sources":["../../src/webgpu/WebGPUAttribute.ts"],"names":["WebGPUAttribute","attribute","buffer","engine","options","offset","stride","normalized","size","divisor","arrayStride","attributes","stepMode"],"mappings":";;;IASqBA,e;AAcnB,WAAA,eAAA,CAAA,MAAA,EAAA,OAAA,EAGE;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,eAAA,CAAA;;AAAA,SAFQG,MAER,GAFQA,MAER;AAAA,SADQC,OACR,GADQA,OACR;AAAA,SAhBMH,SAgBN,GAAA,KAAA,CAAA;AAAA,SALMC,MAKN,GAAA,KAAA,CAAA;AAAA,QAAA,QAAA,GAAA,OAAA;AAAA,QAEEA,MAFF,GAAA,QAAA,CAAA,MAAA;AAAA,QAGEG,MAHF,GAAA,QAAA,CAAA,MAAA;AAAA,QAIEC,MAJF,GAAA,QAAA,CAAA,MAAA;AAAA,QAKEC,UALF,GAAA,QAAA,CAAA,UAAA;AAAA,QAMEC,IANF,GAAA,QAAA,CAAA,IAAA;AAAA,QAOEC,OAPF,GAAA,QAAA,CAAA,OAAA;AAAA,QAQEC,WARF,GAAA,QAAA,CAAA,WAAA;AAAA,QASEC,UATF,GAAA,QAAA,CAAA,UAAA;AAAA,QAUEC,QAVF,GAAA,QAAA,CAAA,QAAA;AAYA,SAAA,MAAA,GAAA,MAAA;AACA,SAAA,SAAA,GAAiB;AACfV,MAAAA,MAAM,EAAGA,MAAD,CADO,GACNA,EADM;AAEfG,MAAAA,MAAM,EAAEA,MAAM,IAFC,CAAA;AAGfC,MAAAA,MAAM,EAAEA,MAAM,IAHC,CAAA;AAIfC,MAAAA,UAAU,EAAEA,UAAU,IAJP,KAAA;AAKfE,MAAAA,OAAO,EAAEA,OAAO,IALD,CAAA;AAMfC,MAAAA,WAAW,EAAEA,WAAW,IANT,CAAA;AAOf;AACAC,MAAAA,UAAU,EARK,UAAA;AASfC,MAAAA,QAAQ,EAAEA,QAAQ,IAAI;AATP,KAAjB;;AAYA,QAAA,IAAA,EAAU;AACR,WAAA,SAAA,CAAA,IAAA,GAAA,IAAA;AACD;AACF;;;;0BAEY;AACX,aAAO,KAAP,SAAA;AACD;;;iCAEmBR,O,EAKjB;AACD,WAAA,MAAA,CAAA,OAAA,CAAA,OAAA;AACD;;;8BAEgB;AACf,WAAA,MAAA,CAAA,OAAA;AACD;;;;;;SA9DkBJ,e","sourcesContent":["import {\n  BufferData,\n  IAttribute,\n  IAttributeInitializationOptions,\n  IBuffer,\n} from '@antv/g-webgpu-core';\nimport { WebGPUEngine } from '.';\nimport WebGPUBuffer from './WebGPUBuffer';\n\nexport default class WebGPUAttribute implements IAttribute {\n  private attribute: {\n    buffer: GPUBuffer;\n    offset: number;\n    stride: number;\n    normalized: boolean;\n    divisor: number;\n    size?: number;\n    arrayStride: number;\n    stepMode: GPUInputStepMode;\n    attributes: Iterable<GPUVertexAttributeDescriptor>;\n  };\n  private buffer: IBuffer;\n\n  constructor(\n    private engine: WebGPUEngine,\n    private options: IAttributeInitializationOptions,\n  ) {\n    const {\n      buffer,\n      offset,\n      stride,\n      normalized,\n      size,\n      divisor,\n      arrayStride,\n      attributes,\n      stepMode,\n    } = options;\n    this.buffer = buffer;\n    this.attribute = {\n      buffer: (buffer as WebGPUBuffer).get(),\n      offset: offset || 0,\n      stride: stride || 0,\n      normalized: normalized || false,\n      divisor: divisor || 0,\n      arrayStride: arrayStride || 0,\n      // @ts-ignore\n      attributes,\n      stepMode: stepMode || 'vertex',\n    };\n\n    if (size) {\n      this.attribute.size = size;\n    }\n  }\n\n  public get() {\n    return this.attribute;\n  }\n\n  public updateBuffer(options: {\n    // 用于替换的数据\n    data: BufferData;\n    // 原 Buffer 替换位置，单位为 byte\n    offset: number;\n  }) {\n    this.buffer.subData(options);\n  }\n\n  public destroy() {\n    this.buffer.destroy();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}