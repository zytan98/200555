{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Target = void 0;\n\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\n\nvar id_1 = require(\"../utils/id\");\n\nvar metadata_1 = require(\"./metadata\");\n\nvar queryable_string_1 = require(\"./queryable_string\");\n\nvar Target = function () {\n  function Target(type, name, serviceIdentifier, namedOrTagged) {\n    this.id = id_1.id();\n    this.type = type;\n    this.serviceIdentifier = serviceIdentifier;\n    this.name = new queryable_string_1.QueryableString(name || \"\");\n    this.metadata = new Array();\n    var metadataItem = null;\n\n    if (typeof namedOrTagged === \"string\") {\n      metadataItem = new metadata_1.Metadata(METADATA_KEY.NAMED_TAG, namedOrTagged);\n    } else if (namedOrTagged instanceof metadata_1.Metadata) {\n      metadataItem = namedOrTagged;\n    }\n\n    if (metadataItem !== null) {\n      this.metadata.push(metadataItem);\n    }\n  }\n\n  Target.prototype.hasTag = function (key) {\n    for (var _i = 0, _a = this.metadata; _i < _a.length; _i++) {\n      var m = _a[_i];\n\n      if (m.key === key) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  Target.prototype.isArray = function () {\n    return this.hasTag(METADATA_KEY.MULTI_INJECT_TAG);\n  };\n\n  Target.prototype.matchesArray = function (name) {\n    return this.matchesTag(METADATA_KEY.MULTI_INJECT_TAG)(name);\n  };\n\n  Target.prototype.isNamed = function () {\n    return this.hasTag(METADATA_KEY.NAMED_TAG);\n  };\n\n  Target.prototype.isTagged = function () {\n    return this.metadata.some(function (metadata) {\n      return METADATA_KEY.NON_CUSTOM_TAG_KEYS.every(function (key) {\n        return metadata.key !== key;\n      });\n    });\n  };\n\n  Target.prototype.isOptional = function () {\n    return this.matchesTag(METADATA_KEY.OPTIONAL_TAG)(true);\n  };\n\n  Target.prototype.getNamedTag = function () {\n    if (this.isNamed()) {\n      return this.metadata.filter(function (m) {\n        return m.key === METADATA_KEY.NAMED_TAG;\n      })[0];\n    }\n\n    return null;\n  };\n\n  Target.prototype.getCustomTags = function () {\n    if (this.isTagged()) {\n      return this.metadata.filter(function (metadata) {\n        return METADATA_KEY.NON_CUSTOM_TAG_KEYS.every(function (key) {\n          return metadata.key !== key;\n        });\n      });\n    } else {\n      return null;\n    }\n  };\n\n  Target.prototype.matchesNamedTag = function (name) {\n    return this.matchesTag(METADATA_KEY.NAMED_TAG)(name);\n  };\n\n  Target.prototype.matchesTag = function (key) {\n    var _this = this;\n\n    return function (value) {\n      for (var _i = 0, _a = _this.metadata; _i < _a.length; _i++) {\n        var m = _a[_i];\n\n        if (m.key === key && m.value === value) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  };\n\n  return Target;\n}();\n\nexports.Target = Target;","map":{"version":3,"sources":["../../src/planning/target.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Target = void 0;\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nvar id_1 = require(\"../utils/id\");\nvar metadata_1 = require(\"./metadata\");\nvar queryable_string_1 = require(\"./queryable_string\");\nvar Target = (function () {\n    function Target(type, name, serviceIdentifier, namedOrTagged) {\n        this.id = id_1.id();\n        this.type = type;\n        this.serviceIdentifier = serviceIdentifier;\n        this.name = new queryable_string_1.QueryableString(name || \"\");\n        this.metadata = new Array();\n        var metadataItem = null;\n        if (typeof namedOrTagged === \"string\") {\n            metadataItem = new metadata_1.Metadata(METADATA_KEY.NAMED_TAG, namedOrTagged);\n        }\n        else if (namedOrTagged instanceof metadata_1.Metadata) {\n            metadataItem = namedOrTagged;\n        }\n        if (metadataItem !== null) {\n            this.metadata.push(metadataItem);\n        }\n    }\n    Target.prototype.hasTag = function (key) {\n        for (var _i = 0, _a = this.metadata; _i < _a.length; _i++) {\n            var m = _a[_i];\n            if (m.key === key) {\n                return true;\n            }\n        }\n        return false;\n    };\n    Target.prototype.isArray = function () {\n        return this.hasTag(METADATA_KEY.MULTI_INJECT_TAG);\n    };\n    Target.prototype.matchesArray = function (name) {\n        return this.matchesTag(METADATA_KEY.MULTI_INJECT_TAG)(name);\n    };\n    Target.prototype.isNamed = function () {\n        return this.hasTag(METADATA_KEY.NAMED_TAG);\n    };\n    Target.prototype.isTagged = function () {\n        return this.metadata.some(function (metadata) { return METADATA_KEY.NON_CUSTOM_TAG_KEYS.every(function (key) { return metadata.key !== key; }); });\n    };\n    Target.prototype.isOptional = function () {\n        return this.matchesTag(METADATA_KEY.OPTIONAL_TAG)(true);\n    };\n    Target.prototype.getNamedTag = function () {\n        if (this.isNamed()) {\n            return this.metadata.filter(function (m) { return m.key === METADATA_KEY.NAMED_TAG; })[0];\n        }\n        return null;\n    };\n    Target.prototype.getCustomTags = function () {\n        if (this.isTagged()) {\n            return this.metadata.filter(function (metadata) { return METADATA_KEY.NON_CUSTOM_TAG_KEYS.every(function (key) { return metadata.key !== key; }); });\n        }\n        else {\n            return null;\n        }\n    };\n    Target.prototype.matchesNamedTag = function (name) {\n        return this.matchesTag(METADATA_KEY.NAMED_TAG)(name);\n    };\n    Target.prototype.matchesTag = function (key) {\n        var _this = this;\n        return function (value) {\n            for (var _i = 0, _a = _this.metadata; _i < _a.length; _i++) {\n                var m = _a[_i];\n                if (m.key === key && m.value === value) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    };\n    return Target;\n}());\nexports.Target = Target;\n//# sourceMappingURL=target.js.map"]},"metadata":{},"sourceType":"script"}