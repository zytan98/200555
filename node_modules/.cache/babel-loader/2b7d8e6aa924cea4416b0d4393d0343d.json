{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { tooltip, interaction, animation, theme, scale, annotation, legend } from '../../adaptor/common';\nimport { area, point, line } from '../../adaptor/geometries';\nimport { findGeometry, flow, transformLabel, deepAssign } from '../../utils';\n/**\n * geometry 配置处理\n * @param params\n */\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var data = options.data,\n      lineStyle = options.lineStyle,\n      color = options.color,\n      pointOptions = options.point,\n      areaOptions = options.area;\n  chart.data(data); // 雷达图 主 geometry\n\n  var primary = deepAssign({}, params, {\n    options: {\n      line: {\n        style: lineStyle,\n        color: color\n      },\n      point: pointOptions ? __assign({\n        color: color\n      }, pointOptions) : pointOptions,\n      area: areaOptions ? __assign({\n        color: color\n      }, areaOptions) : areaOptions,\n      // label 不传递给各个 geometry adaptor，由 label adaptor 处理\n      label: undefined\n    }\n  }); // 副 Geometry\n\n  var second = deepAssign({}, primary, {\n    options: {\n      tooltip: false\n    }\n  }); // 优先使用 point.state, 其次取主元素的 state 状态样式配置\n\n  var pointState = (pointOptions === null || pointOptions === void 0 ? void 0 : pointOptions.state) || options.state;\n  var pointParams = deepAssign({}, primary, {\n    options: {\n      tooltip: false,\n      state: pointState\n    }\n  });\n  line(primary);\n  point(pointParams);\n  area(second);\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\n\n\nfunction meta(params) {\n  var _a;\n\n  var options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField;\n  return flow(scale((_a = {}, _a[xField] = xAxis, _a[yField] = yAxis, _a)))(params);\n}\n/**\n * coord 配置\n * @param params\n */\n\n\nfunction coord(params) {\n  var chart = params.chart,\n      options = params.options;\n  var radius = options.radius,\n      startAngle = options.startAngle,\n      endAngle = options.endAngle;\n  chart.coordinate('polar', {\n    radius: radius,\n    startAngle: startAngle,\n    endAngle: endAngle\n  });\n  return params;\n}\n/**\n * axis 配置\n * @param params\n */\n\n\nfunction axis(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xField = options.xField,\n      xAxis = options.xAxis,\n      yField = options.yField,\n      yAxis = options.yAxis;\n  chart.axis(xField, xAxis);\n  chart.axis(yField, yAxis);\n  return params;\n}\n/**\n * label 配置\n * @param params\n */\n\n\nfunction label(params) {\n  var chart = params.chart,\n      options = params.options;\n  var label = options.label,\n      yField = options.yField;\n  var geometry = findGeometry(chart, 'line');\n\n  if (!label) {\n    geometry.label(false);\n  } else {\n    var callback = label.callback,\n        cfg = __rest(label, [\"callback\"]);\n\n    geometry.label({\n      fields: [yField],\n      callback: callback,\n      cfg: transformLabel(cfg)\n    });\n  }\n\n  return params;\n}\n/**\n * 雷达图适配器\n * @param chart\n * @param options\n */\n\n\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(geometry, meta, theme, coord, axis, legend, tooltip, label, interaction, animation, annotation())(params);\n}","map":{"version":3,"sources":["../../../src/plots/radar/adaptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { Params } from '../../core/adaptor';\nimport { tooltip, interaction, animation, theme, scale, annotation, legend } from '../../adaptor/common';\nimport { area, point, line } from '../../adaptor/geometries';\nimport { findGeometry, flow, transformLabel, deepAssign } from '../../utils';\nimport { RadarOptions } from './types';\n\n/**\n * geometry 配置处理\n * @param params\n */\nfunction geometry(params: Params<RadarOptions>): Params<RadarOptions> {\n  const { chart, options } = params;\n  const { data, lineStyle, color, point: pointOptions, area: areaOptions } = options;\n\n  chart.data(data);\n\n  // 雷达图 主 geometry\n  const primary = deepAssign({}, params, {\n    options: {\n      line: {\n        style: lineStyle,\n        color,\n      },\n      point: pointOptions\n        ? {\n            color,\n            ...pointOptions,\n          }\n        : pointOptions,\n      area: areaOptions\n        ? {\n            color,\n            ...areaOptions,\n          }\n        : areaOptions,\n      // label 不传递给各个 geometry adaptor，由 label adaptor 处理\n      label: undefined,\n    },\n  });\n  // 副 Geometry\n  const second = deepAssign({}, primary, {\n    options: {\n      tooltip: false,\n    },\n  });\n  // 优先使用 point.state, 其次取主元素的 state 状态样式配置\n  const pointState = pointOptions?.state || options.state;\n  const pointParams = deepAssign({}, primary, { options: { tooltip: false, state: pointState } });\n\n  line(primary);\n  point(pointParams);\n  area(second);\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params: Params<RadarOptions>): Params<RadarOptions> {\n  const { options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  return flow(\n    scale({\n      [xField]: xAxis,\n      [yField]: yAxis,\n    })\n  )(params);\n}\n\n/**\n * coord 配置\n * @param params\n */\nfunction coord(params: Params<RadarOptions>): Params<RadarOptions> {\n  const { chart, options } = params;\n  const { radius, startAngle, endAngle } = options;\n\n  chart.coordinate('polar', {\n    radius,\n    startAngle,\n    endAngle,\n  });\n  return params;\n}\n\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params: Params<RadarOptions>): Params<RadarOptions> {\n  const { chart, options } = params;\n  const { xField, xAxis, yField, yAxis } = options;\n\n  chart.axis(xField, xAxis);\n  chart.axis(yField, yAxis);\n\n  return params;\n}\n\n/**\n * label 配置\n * @param params\n */\nfunction label(params: Params<RadarOptions>): Params<RadarOptions> {\n  const { chart, options } = params;\n  const { label, yField } = options;\n\n  const geometry = findGeometry(chart, 'line');\n\n  if (!label) {\n    geometry.label(false);\n  } else {\n    const { callback, ...cfg } = label;\n    geometry.label({\n      fields: [yField],\n      callback,\n      cfg: transformLabel(cfg),\n    });\n  }\n\n  return params;\n}\n\n/**\n * 雷达图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<RadarOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(geometry, meta, theme, coord, axis, legend, tooltip, label, interaction, animation, annotation())(params);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}