{"ast":null,"code":"import { reduce, get } from '@antv/util';\n/**\n * 在 View 中查找第一个指定 type 类型的 geometry\n * @param view\n * @param type\n */\n\nexport function findGeometry(view, type) {\n  return view.geometries.find(function (g) {\n    return g.type === type;\n  });\n}\n/**\n * 获取 View 的 所有 elements\n */\n\nexport function getAllElements(view) {\n  return reduce(view.geometries, function (r, geometry) {\n    return r.concat(geometry.elements);\n  }, []);\n}\n/**\n * 递归获取 View 的 所有 elements, 包括 View 的子 View\n */\n\nexport function getAllElementsRecursively(view) {\n  if (get(view, ['views', 'length'], 0) <= 0) {\n    return getAllElements(view);\n  }\n\n  return reduce(view.views, function (ele, subView) {\n    return ele.concat(getAllElementsRecursively(subView));\n  }, getAllElements(view));\n}\n/**\n * 递归获取 View 的 所有 geometries, 包括 View 的子 View\n */\n\nexport function getAllGeometriesRecursively(view) {\n  if (get(view, ['views', 'length'], 0) <= 0) {\n    return view.geometries;\n  }\n\n  return reduce(view.views, function (ele, subView) {\n    return ele.concat(subView.geometries);\n  }, view.geometries);\n}","map":{"version":3,"sources":["../../src/utils/geometry.ts"],"names":[],"mappings":"AACA,SAAS,MAAT,EAAiB,GAAjB,QAA4B,YAA5B;AAEA;;;;AAIG;;AACH,OAAM,SAAU,YAAV,CAAuB,IAAvB,EAAmC,IAAnC,EAA+C;AACnD,SAAO,IAAI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,UAAC,CAAD,EAAY;AAAK,WAAA,CAAC,CAAC,IAAF,KAAA,IAAA;AAAe,GAArD,CAAP;AACD;AAED;;AAEG;;AACH,OAAM,SAAU,cAAV,CAAyB,IAAzB,EAAmC;AACvC,SAAO,MAAM,CACX,IAAI,CAAC,UADM,EAEX,UAAC,CAAD,EAAe,QAAf,EAAiC;AAC/B,WAAO,CAAC,CAAC,MAAF,CAAS,QAAQ,CAAC,QAAlB,CAAP;AACD,GAJU,EAKX,EALW,CAAb;AAOD;AAED;;AAEG;;AACH,OAAM,SAAU,yBAAV,CAAoC,IAApC,EAA8C;AAClD,MAAI,GAAG,CAAC,IAAD,EAAO,CAAC,OAAD,EAAU,QAAV,CAAP,EAA4B,CAA5B,CAAH,IAAqC,CAAzC,EAA4C;AAC1C,WAAO,cAAc,CAAC,IAAD,CAArB;AACD;;AAED,SAAO,MAAM,CACX,IAAI,CAAC,KADM,EAEX,UAAC,GAAD,EAAiB,OAAjB,EAA8B;AAC5B,WAAO,GAAG,CAAC,MAAJ,CAAW,yBAAyB,CAAC,OAAD,CAApC,CAAP;AACD,GAJU,EAKX,cAAc,CAAC,IAAD,CALH,CAAb;AAOD;AAED;;AAEG;;AACH,OAAM,SAAU,2BAAV,CAAsC,IAAtC,EAAgD;AACpD,MAAI,GAAG,CAAC,IAAD,EAAO,CAAC,OAAD,EAAU,QAAV,CAAP,EAA4B,CAA5B,CAAH,IAAqC,CAAzC,EAA4C;AAC1C,WAAO,IAAI,CAAC,UAAZ;AACD;;AAED,SAAO,MAAM,CACX,IAAI,CAAC,KADM,EAEX,UAAC,GAAD,EAAkB,OAAlB,EAA+B;AAC7B,WAAO,GAAG,CAAC,MAAJ,CAAW,OAAO,CAAC,UAAnB,CAAP;AACD,GAJU,EAKX,IAAI,CAAC,UALM,CAAb;AAOD","sourcesContent":["import { Geometry, View, Element } from '@antv/g2';\nimport { reduce, get } from '@antv/util';\n\n/**\n * 在 View 中查找第一个指定 type 类型的 geometry\n * @param view\n * @param type\n */\nexport function findGeometry(view: View, type: string): Geometry {\n  return view.geometries.find((g: Geometry) => g.type === type);\n}\n\n/**\n * 获取 View 的 所有 elements\n */\nexport function getAllElements(view: View): Element[] {\n  return reduce(\n    view.geometries,\n    (r: Element[], geometry: Geometry) => {\n      return r.concat(geometry.elements);\n    },\n    []\n  );\n}\n\n/**\n * 递归获取 View 的 所有 elements, 包括 View 的子 View\n */\nexport function getAllElementsRecursively(view: View): Element[] {\n  if (get(view, ['views', 'length'], 0) <= 0) {\n    return getAllElements(view);\n  }\n\n  return reduce(\n    view.views,\n    (ele: Element[], subView: View) => {\n      return ele.concat(getAllElementsRecursively(subView));\n    },\n    getAllElements(view)\n  );\n}\n\n/**\n * 递归获取 View 的 所有 geometries, 包括 View 的子 View\n */\nexport function getAllGeometriesRecursively(view: View): Geometry[] {\n  if (get(view, ['views', 'length'], 0) <= 0) {\n    return view.geometries;\n  }\n\n  return reduce(\n    view.views,\n    (ele: Geometry[], subView: View) => {\n      return ele.concat(subView.geometries);\n    },\n    view.geometries\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}