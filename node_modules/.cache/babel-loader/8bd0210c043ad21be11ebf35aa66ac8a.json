{"ast":null,"code":"import { filter } from '@antv/util';\nimport { getInteractionCfg } from '../interactions/brush';\nimport { deepAssign } from '../utils';\n/** 先引入brush 交互 */\n\nimport '../interactions/brush';\nvar BRUSH_TYPES = ['brush', 'brush-x', 'brush-y', 'brush-highlight', 'brush-x-highlight', 'brush-y-highlight'];\n/**\n * brush 交互\n */\n\nexport function brushInteraction(params) {\n  var options = params.options;\n  var brush = options.brush; // 先过滤掉 brush 等交互\n\n  var interactions = filter(options.interactions || [], function (i) {\n    return BRUSH_TYPES.indexOf(i.type) === -1;\n  }); // 设置 brush 交互\n\n  if (brush === null || brush === void 0 ? void 0 : brush.enabled) {\n    BRUSH_TYPES.forEach(function (type) {\n      var _a;\n\n      var enable = false;\n\n      switch (brush.type) {\n        case 'x-rect':\n          enable = type === (brush.action === 'highlight' ? 'brush-x-highlight' : 'brush-x');\n          break;\n\n        case 'y-rect':\n          enable = type === (brush.action === 'highlight' ? 'brush-y-highlight' : 'brush-y');\n          break;\n\n        default:\n          enable = type === (brush.action === 'highlight' ? 'brush-highlight' : 'brush');\n          break;\n      }\n\n      var obj = {\n        type: type,\n        enable: enable\n      };\n\n      if (((_a = brush.mask) === null || _a === void 0 ? void 0 : _a.style) || brush.type) {\n        obj.cfg = getInteractionCfg(type, brush.type, brush.mask);\n      }\n\n      interactions.push(obj);\n    }); // 塞入 button 配置 (G2Plot 的封装)\n\n    if ((brush === null || brush === void 0 ? void 0 : brush.action) !== 'highlight') {\n      interactions.push({\n        type: 'filter-action',\n        cfg: {\n          buttonConfig: brush.button\n        }\n      });\n    }\n  }\n\n  return deepAssign({}, params, {\n    options: {\n      interactions: interactions\n    }\n  });\n}","map":{"version":3,"sources":["../../src/adaptor/brush.ts"],"names":[],"mappings":"AAAA,SAAS,MAAT,QAAuB,YAAvB;AAEA,SAAS,iBAAT,QAAkC,uBAAlC;AACA,SAAS,UAAT,QAA2B,UAA3B;AAGA;;AACA,OAAO,uBAAP;AAIA,IAAM,WAAW,GAAG,CAAC,OAAD,EAAU,SAAV,EAAqB,SAArB,EAAgC,iBAAhC,EAAmD,mBAAnD,EAAwE,mBAAxE,CAApB;AAEA;;AAEG;;AACH,OAAM,SAAU,gBAAV,CAAwD,MAAxD,EAAyE;AACrE,MAAA,OAAO,GAAK,MAAM,CAAX,OAAP;AAEA,MAAA,KAAK,GAAK,OAAO,CAAZ,KAAL,CAHqE,CAK7E;;AACA,MAAM,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC,YAAR,IAAwB,EAAzB,EAA6B,UAAC,CAAD,EAAE;AAAK,WAAA,WAAW,CAAC,OAAZ,CAAoB,CAAC,CAAC,IAAtB,MAAgC,CAAhC,CAAA;AAAkC,GAAtE,CAA3B,CAN6E,CAQ7E;;AACA,MAAI,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAK,KAAA,CAAL,GAAA,KAAK,CAAE,OAAX,EAAoB;AAClB,IAAA,WAAW,CAAC,OAAZ,CAAoB,UAAC,IAAD,EAAK;;;AACvB,UAAI,MAAM,GAAG,KAAb;;AACA,cAAQ,KAAK,CAAC,IAAd;AACE,aAAK,QAAL;AACE,UAAA,MAAM,GAAG,IAAI,MAAM,KAAK,CAAC,MAAN,KAAiB,WAAjB,GAA+B,mBAA/B,GAAqD,SAA3D,CAAb;AACA;;AACF,aAAK,QAAL;AACE,UAAA,MAAM,GAAG,IAAI,MAAM,KAAK,CAAC,MAAN,KAAiB,WAAjB,GAA+B,mBAA/B,GAAqD,SAA3D,CAAb;AACA;;AACF;AACE,UAAA,MAAM,GAAG,IAAI,MAAM,KAAK,CAAC,MAAN,KAAiB,WAAjB,GAA+B,iBAA/B,GAAmD,OAAzD,CAAb;AACA;AATJ;;AAWA,UAAM,GAAG,GAA0B;AAAE,QAAA,IAAI,EAAA,IAAN;AAAQ,QAAA,MAAM,EAAA;AAAd,OAAnC;;AAEA,UAAI,CAAA,CAAA,EAAA,GAAA,KAAK,CAAC,IAAN,MAAU,IAAV,IAAU,EAAA,KAAA,KAAA,CAAV,GAAU,KAAA,CAAV,GAAU,EAAA,CAAE,KAAZ,KAAqB,KAAK,CAAC,IAA/B,EAAqC;AACnC,QAAA,GAAG,CAAC,GAAJ,GAAU,iBAAiB,CAAC,IAAD,EAAO,KAAK,CAAC,IAAb,EAAmB,KAAK,CAAC,IAAzB,CAA3B;AACD;;AACD,MAAA,YAAY,CAAC,IAAb,CAAkB,GAAlB;AACD,KAnBD,EADkB,CAsBlB;;AACA,QAAI,CAAA,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAK,KAAA,CAAL,GAAA,KAAK,CAAE,MAAP,MAAkB,WAAtB,EAAmC;AACjC,MAAA,YAAY,CAAC,IAAb,CAAkB;AAChB,QAAA,IAAI,EAAE,eADU;AAEhB,QAAA,GAAG,EAAE;AACH,UAAA,YAAY,EAAE,KAAK,CAAC;AADjB;AAFW,OAAlB;AAMD;AACF;;AACD,SAAO,UAAU,CAAC,EAAD,EAAK,MAAL,EAAa;AAAE,IAAA,OAAO,EAAE;AAAE,MAAA,YAAY,EAAA;AAAd;AAAX,GAAb,CAAjB;AACD","sourcesContent":["import { filter } from '@antv/util';\nimport { Params } from '../core/adaptor';\nimport { getInteractionCfg } from '../interactions/brush';\nimport { deepAssign } from '../utils';\nimport { Options as BaseOptions, BrushCfg, Interaction, Writable } from '../types';\n\n/** 先引入brush 交互 */\nimport '../interactions/brush';\n\ntype Options = Pick<BaseOptions, 'interactions'> & { brush?: BrushCfg };\n\nconst BRUSH_TYPES = ['brush', 'brush-x', 'brush-y', 'brush-highlight', 'brush-x-highlight', 'brush-y-highlight'];\n\n/**\n * brush 交互\n */\nexport function brushInteraction<O extends Options = Options>(params: Params<O>): Params<O> {\n  const { options } = params;\n\n  const { brush } = options;\n\n  // 先过滤掉 brush 等交互\n  const interactions = filter(options.interactions || [], (i) => BRUSH_TYPES.indexOf(i.type) === -1);\n\n  // 设置 brush 交互\n  if (brush?.enabled) {\n    BRUSH_TYPES.forEach((type) => {\n      let enable = false;\n      switch (brush.type) {\n        case 'x-rect':\n          enable = type === (brush.action === 'highlight' ? 'brush-x-highlight' : 'brush-x');\n          break;\n        case 'y-rect':\n          enable = type === (brush.action === 'highlight' ? 'brush-y-highlight' : 'brush-y');\n          break;\n        default:\n          enable = type === (brush.action === 'highlight' ? 'brush-highlight' : 'brush');\n          break;\n      }\n      const obj: Writable<Interaction> = { type, enable };\n\n      if (brush.mask?.style || brush.type) {\n        obj.cfg = getInteractionCfg(type, brush.type, brush.mask);\n      }\n      interactions.push(obj);\n    });\n\n    // 塞入 button 配置 (G2Plot 的封装)\n    if (brush?.action !== 'highlight') {\n      interactions.push({\n        type: 'filter-action',\n        cfg: {\n          buttonConfig: brush.button,\n        },\n      });\n    }\n  }\n  return deepAssign({}, params, { options: { interactions } });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}