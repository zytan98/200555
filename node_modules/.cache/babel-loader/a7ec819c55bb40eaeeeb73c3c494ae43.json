{"ast":null,"code":"import _initializerDefineProperty from \"@babel/runtime/helpers/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/initializerWarningHelper\";\n\nvar _dec, _dec2, _class, _class2, _descriptor, _class3, _temp;\n\nimport { IDENTIFIER } from '@antv/g-webgpu-core';\nimport { inject, injectable } from 'inversify';\nexport var Material = (_dec = injectable(), _dec2 = inject(IDENTIFIER.MaterialComponentManager), _dec(_class = (_class2 = (_temp = _class3 = /*#__PURE__*/function () {\n  function Material() {\n    _classCallCheck(this, Material);\n\n    this.config = void 0;\n\n    _initializerDefineProperty(this, \"material\", _descriptor, this);\n\n    this.entity = void 0;\n    this.component = void 0;\n  }\n\n  _createClass(Material, [{\n    key: \"getEntity\",\n    value: function getEntity() {\n      return this.entity;\n    }\n  }, {\n    key: \"getComponent\",\n    value: function getComponent() {\n      return this.component;\n    }\n  }, {\n    key: \"setConfig\",\n    value: function setConfig(config) {\n      this.config = config;\n    }\n  }, {\n    key: \"setEntity\",\n    value: function setEntity(entity, type) {\n      this.entity = entity;\n      this.component = this.material.create(entity);\n      this.component.entity = entity;\n      this.component.type = type;\n      this.onEntityCreated();\n    }\n  }, {\n    key: \"onEntityCreated\",\n    value: function onEntityCreated() {//\n    }\n  }]);\n\n  return Material;\n}(), _class3.BASIC = 'basic', _temp), _descriptor = _applyDecoratedDescriptor(_class2.prototype, \"material\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _class2)) || _class);","map":{"version":3,"sources":["../../src/material/index.ts"],"names":["injectable","Material","inject","IDENTIFIER"],"mappings":";;;;;;;;AAAA,SAAA,UAAA,QAAA,qBAAA;AAMA,SAAA,MAAA,EAAA,UAAA,QAAA,WAAA;AAOA,OAAA,IAAaC,QAAb,IAAA,IAAA,GADCD,UAAU,EACX,EAAA,KAAA,GAKGE,MAAM,CAACC,UAAU,CALpB,wBAKS,CALT,EAAA,IAAA,CAAA,MAAA,IAAA,OAAA,IAAA,KAAA,GAAA,OAAA,GAAA,aAAA,YAAA;AAAA,WAAA,QAAA,GAAA;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,QAAA,CAAA;;AAAA,SAAA,MAAA,GAAA,KAAA,CAAA;;AAAA,IAAA,0BAAA,CAAA,IAAA,EAAA,UAAA,EAAA,WAAA,EAAA,IAAA,CAAA;;AAAA,SAAA,MAAA,GAAA,KAAA,CAAA;AAAA,SAAA,SAAA,GAAA,KAAA,CAAA;AAAA;;AAAA,EAAA,YAAA,CAAA,QAAA,EAAA,CAAA;AAAA,IAAA,GAAA,EAAA,WAAA;AAAA,IAAA,KAAA,EAAA,SAAA,SAAA,GAWqB;AACjB,aAAO,KAAP,MAAA;AACD;AAbH,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,cAAA;AAAA,IAAA,KAAA,EAAA,SAAA,YAAA,GAewB;AACpB,aAAO,KAAP,SAAA;AACD;AAjBH,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,WAAA;AAAA,IAAA,KAAA,EAAA,SAAA,SAAA,CAAA,MAAA,EAmB8B;AAC1B,WAAA,MAAA,GAAA,MAAA;AACD;AArBH,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,WAAA;AAAA,IAAA,KAAA,EAAA,SAAA,SAAA,CAAA,MAAA,EAAA,IAAA,EAuBiD;AAC7C,WAAA,MAAA,GAAA,MAAA;AACA,WAAA,SAAA,GAAiB,KAAA,QAAA,CAAA,MAAA,CAAjB,MAAiB,CAAjB;AACA,WAAA,SAAA,CAAA,MAAA,GAAA,MAAA;AACA,WAAA,SAAA,CAAA,IAAA,GAAA,IAAA;AACA,WAAA,eAAA;AACD;AA7BH,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,iBAAA;AAAA,IAAA,KAAA,EAAA,SAAA,eAAA,GA+B8B,CAC1B;AACD;AAjCH,GAAA,CAAA,CAAA;;AAAA,SAAA,QAAA;AAAA,CAAA,EAAA,EAAA,OAAA,CAAA,KAAA,GAAA,OAAA,EAAA,KAAA,CAAA,EAAA,WAAA,GAAA,yBAAA,CAAA,OAAA,CAAA,SAAA,EAAA,UAAA,EAAA,CAAA,KAAA,CAAA,EAAA;AAAA,EAAA,YAAA,EAAA,IAAA;AAAA,EAAA,UAAA,EAAA,IAAA;AAAA,EAAA,QAAA,EAAA,IAAA;AAAA,EAAA,WAAA,EAAA;AAAA,CAAA,CAAA,EAAA,OAAA,CAAA,CAAA,IAAA,MAAA,CAAA","sourcesContent":["import {\n  ComponentManager,\n  Entity,\n  IDENTIFIER,\n  MaterialComponent,\n} from '@antv/g-webgpu-core';\nimport { inject, injectable } from 'inversify';\n\nexport interface IMaterial<T> {\n  setConfig(config: T): void;\n}\n\n@injectable()\nexport class Material<T = {}> implements IMaterial<T> {\n  public static BASIC = 'basic';\n\n  protected config: T;\n\n  @inject(IDENTIFIER.MaterialComponentManager)\n  private readonly material: ComponentManager<MaterialComponent>;\n\n  private entity: Entity;\n  private component: MaterialComponent;\n\n  public getEntity() {\n    return this.entity;\n  }\n\n  public getComponent() {\n    return this.component;\n  }\n\n  public setConfig(config: T) {\n    this.config = config;\n  }\n\n  public setEntity(entity: Entity, type: string) {\n    this.entity = entity;\n    this.component = this.material.create(entity);\n    this.component.entity = entity;\n    this.component.type = type;\n    this.onEntityCreated();\n  }\n\n  protected onEntityCreated() {\n    //\n  }\n}\n"]},"metadata":{},"sourceType":"module"}