{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { map, reduce, maxBy, isArray, get } from '@antv/util';\nimport { flow } from '../../../utils';\nimport { FUNNEL_PERCENT, FUNNEL_CONVERSATION, FUNNEL_TOTAL_PERCENT, PLOYGON_X, PLOYGON_Y } from '../constant';\nimport { geometry as baseGeometry } from '../../../adaptor/geometries/base';\nimport { getTooltipMapping } from '../../../utils/tooltip';\nimport { conversionTagComponent } from './common';\n/**\n * 动态高度漏斗图\n * @param params\n * 需求: 每个漏斗项的高度根据 yfield 等比生成。漏斗上下宽度比为2，即斜率为 2。\n * 实现方式: 使用 g2 多边形，data -> 点坐标 -> 绘制\n * 以漏斗底部中心点为坐标轴原点，漏斗在 -0.5 <= x <= 0.5, 0 <= y <= 1 的正方形中绘制\n * 先计算第一象限的点, 第二象限的点即为镜像 x 轴取反。\n * 第一象限共需计算 data.length + 1 个点，在 y = 4x - 1 上。首尾分别是[0.5, 1], [0.25, 0]。根据 data 计算出 y 值，从而得到 y 值\n */\n\n/**\n * 处理数据\n * @param params\n */\n\nfunction field(params) {\n  var chart = params.chart,\n      options = params.options;\n  var _a = options.data,\n      data = _a === void 0 ? [] : _a,\n      yField = options.yField; // 计算各数据项所占高度\n\n  var sum = reduce(data, function (total, item) {\n    return total + (item[yField] || 0);\n  }, 0);\n  var max = maxBy(data, yField)[yField];\n  var formatData = map(data, function (row, index) {\n    // 储存四个点 x，y 坐标，方向为顺时针，即 [左上, 右上，右下，左下]\n    var x = [];\n    var y = [];\n    row[FUNNEL_TOTAL_PERCENT] = (row[yField] || 0) / sum; // 获取左上角，右上角坐标\n\n    if (index) {\n      var preItemX = data[index - 1][PLOYGON_X];\n      var preItemY = data[index - 1][PLOYGON_Y];\n      x[0] = preItemX[3];\n      y[0] = preItemY[3];\n      x[1] = preItemX[2];\n      y[1] = preItemY[2];\n    } else {\n      x[0] = -0.5;\n      y[0] = 1;\n      x[1] = 0.5;\n      y[1] = 1;\n    } // 获取右下角坐标\n\n\n    y[2] = y[1] - row[FUNNEL_TOTAL_PERCENT];\n    x[2] = (y[2] + 1) / 4;\n    y[3] = y[2];\n    x[3] = -x[2]; // 赋值\n\n    row[PLOYGON_X] = x;\n    row[PLOYGON_Y] = y;\n    row[FUNNEL_PERCENT] = (row[yField] || 0) / max;\n    row[FUNNEL_CONVERSATION] = [get(data, [index - 1, yField]), row[yField]];\n    return row;\n  });\n  chart.data(formatData);\n  return params;\n}\n/**\n * geometry处理\n * @param params\n */\n\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xField = options.xField,\n      yField = options.yField,\n      color = options.color,\n      tooltip = options.tooltip,\n      label = options.label,\n      funnelStyle = options.funnelStyle,\n      state = options.state;\n\n  var _a = getTooltipMapping(tooltip, [xField, yField]),\n      fields = _a.fields,\n      formatter = _a.formatter; // 绘制漏斗图\n\n\n  baseGeometry({\n    chart: chart,\n    options: {\n      type: 'polygon',\n      xField: PLOYGON_X,\n      yField: PLOYGON_Y,\n      colorField: xField,\n      tooltipFields: isArray(fields) && fields.concat([FUNNEL_PERCENT, FUNNEL_CONVERSATION]),\n      label: label,\n      state: state,\n      mapping: {\n        tooltip: formatter,\n        color: color,\n        style: funnelStyle\n      }\n    }\n  });\n  return params;\n}\n/**\n * 转置处理\n * @param params\n */\n\n\nfunction transpose(params) {\n  var chart = params.chart,\n      options = params.options;\n  var isTransposed = options.isTransposed;\n  chart.coordinate({\n    type: 'rect',\n    actions: isTransposed ? [['transpose'], ['reflect', 'x']] : []\n  });\n  return params;\n}\n/**\n * 转化率组件\n * @param params\n */\n\n\nfunction conversionTag(params) {\n  var getLineCoordinate = function (datum, datumIndex, data, initLineOption) {\n    return __assign(__assign({}, initLineOption), {\n      start: [datum[PLOYGON_X][1], datum[PLOYGON_Y][1]],\n      end: [datum[PLOYGON_X][1] + 0.05, datum[PLOYGON_Y][1]]\n    });\n  };\n\n  conversionTagComponent(getLineCoordinate)(params);\n  return params;\n}\n/**\n * 动态高度漏斗\n * @param chart\n * @param options\n */\n\n\nexport function dynamicHeightFunnel(params) {\n  return flow(field, geometry, transpose, conversionTag)(params);\n}","map":{"version":3,"sources":["../../../../src/plots/funnel/geometries/dynamic-height.ts"],"names":[],"mappings":"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","sourcesContent":["import { map, reduce, maxBy, isArray, get } from '@antv/util';\nimport { Types } from '@antv/g2';\nimport { flow } from '../../../utils';\nimport { Params } from '../../../core/adaptor';\nimport { FUNNEL_PERCENT, FUNNEL_CONVERSATION, FUNNEL_TOTAL_PERCENT, PLOYGON_X, PLOYGON_Y } from '../constant';\nimport { geometry as baseGeometry } from '../../../adaptor/geometries/base';\nimport { getTooltipMapping } from '../../../utils/tooltip';\nimport { Datum, Data } from '../../../types/common';\nimport { FunnelOptions } from '../types';\nimport { conversionTagComponent } from './common';\n\n/**\n * 动态高度漏斗图\n * @param params\n * 需求: 每个漏斗项的高度根据 yfield 等比生成。漏斗上下宽度比为2，即斜率为 2。\n * 实现方式: 使用 g2 多边形，data -> 点坐标 -> 绘制\n * 以漏斗底部中心点为坐标轴原点，漏斗在 -0.5 <= x <= 0.5, 0 <= y <= 1 的正方形中绘制\n * 先计算第一象限的点, 第二象限的点即为镜像 x 轴取反。\n * 第一象限共需计算 data.length + 1 个点，在 y = 4x - 1 上。首尾分别是[0.5, 1], [0.25, 0]。根据 data 计算出 y 值，从而得到 y 值\n */\n\n/**\n * 处理数据\n * @param params\n */\nfunction field(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { data = [], yField } = options;\n\n  // 计算各数据项所占高度\n  const sum = reduce(\n    data,\n    (total, item) => {\n      return total + (item[yField] || 0);\n    },\n    0\n  );\n\n  const max = maxBy(data, yField)[yField];\n\n  const formatData = map(data, (row, index) => {\n    // 储存四个点 x，y 坐标，方向为顺时针，即 [左上, 右上，右下，左下]\n    const x = [];\n    const y = [];\n\n    row[FUNNEL_TOTAL_PERCENT] = (row[yField] || 0) / sum;\n\n    // 获取左上角，右上角坐标\n    if (index) {\n      const preItemX = data[index - 1][PLOYGON_X];\n      const preItemY = data[index - 1][PLOYGON_Y];\n      x[0] = preItemX[3];\n      y[0] = preItemY[3];\n      x[1] = preItemX[2];\n      y[1] = preItemY[2];\n    } else {\n      x[0] = -0.5;\n      y[0] = 1;\n      x[1] = 0.5;\n      y[1] = 1;\n    }\n\n    // 获取右下角坐标\n    y[2] = y[1] - row[FUNNEL_TOTAL_PERCENT];\n    x[2] = (y[2] + 1) / 4;\n    y[3] = y[2];\n    x[3] = -x[2];\n\n    // 赋值\n    row[PLOYGON_X] = x;\n    row[PLOYGON_Y] = y;\n    row[FUNNEL_PERCENT] = (row[yField] || 0) / max;\n    row[FUNNEL_CONVERSATION] = [get(data, [index - 1, yField]), row[yField]];\n    return row;\n  });\n\n  chart.data(formatData);\n\n  return params;\n}\n\n/**\n * geometry处理\n * @param params\n */\nfunction geometry(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { xField, yField, color, tooltip, label, funnelStyle, state } = options;\n\n  const { fields, formatter } = getTooltipMapping(tooltip, [xField, yField]);\n  // 绘制漏斗图\n  baseGeometry({\n    chart,\n    options: {\n      type: 'polygon',\n      xField: PLOYGON_X,\n      yField: PLOYGON_Y,\n      colorField: xField,\n      tooltipFields: isArray(fields) && fields.concat([FUNNEL_PERCENT, FUNNEL_CONVERSATION]),\n      label,\n      state,\n      mapping: {\n        tooltip: formatter,\n        color,\n        style: funnelStyle,\n      },\n    },\n  });\n  return params;\n}\n\n/**\n * 转置处理\n * @param params\n */\nfunction transpose(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { isTransposed } = options;\n  chart.coordinate({\n    type: 'rect',\n    actions: isTransposed ? [['transpose'], ['reflect', 'x']] : [],\n  });\n  return params;\n}\n\n/**\n * 转化率组件\n * @param params\n */\nfunction conversionTag(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const getLineCoordinate = (\n    datum: Datum,\n    datumIndex: number,\n    data: Data,\n    initLineOption: Record<string, any>\n  ): Types.LineOption => {\n    return {\n      ...initLineOption,\n      start: [datum[PLOYGON_X][1], datum[PLOYGON_Y][1]],\n      end: [datum[PLOYGON_X][1] + 0.05, datum[PLOYGON_Y][1]],\n    };\n  };\n\n  conversionTagComponent(getLineCoordinate)(params);\n\n  return params;\n}\n\n/**\n * 动态高度漏斗\n * @param chart\n * @param options\n */\nexport function dynamicHeightFunnel(params: Params<FunnelOptions>) {\n  return flow(field, geometry, transpose, conversionTag)(params);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}