{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.STACK_OVERFLOW = exports.CIRCULAR_DEPENDENCY_IN_FACTORY = exports.POST_CONSTRUCT_ERROR = exports.MULTIPLE_POST_CONSTRUCT_METHODS = exports.CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK = exports.CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE = exports.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE = exports.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT = exports.ARGUMENTS_LENGTH_MISMATCH = exports.INVALID_DECORATOR_OPERATION = exports.INVALID_TO_SELF_VALUE = exports.INVALID_FUNCTION_BINDING = exports.INVALID_MIDDLEWARE_RETURN = exports.NO_MORE_SNAPSHOTS_AVAILABLE = exports.INVALID_BINDING_TYPE = exports.NOT_IMPLEMENTED = exports.CIRCULAR_DEPENDENCY = exports.UNDEFINED_INJECT_ANNOTATION = exports.MISSING_INJECT_ANNOTATION = exports.MISSING_INJECTABLE_ANNOTATION = exports.NOT_REGISTERED = exports.CANNOT_UNBIND = exports.AMBIGUOUS_MATCH = exports.KEY_NOT_FOUND = exports.NULL_ARGUMENT = exports.DUPLICATED_METADATA = exports.DUPLICATED_INJECTABLE_DECORATOR = void 0;\nexports.DUPLICATED_INJECTABLE_DECORATOR = \"Cannot apply @injectable decorator multiple times.\";\nexports.DUPLICATED_METADATA = \"Metadata key was used more than once in a parameter:\";\nexports.NULL_ARGUMENT = \"NULL argument\";\nexports.KEY_NOT_FOUND = \"Key Not Found\";\nexports.AMBIGUOUS_MATCH = \"Ambiguous match found for serviceIdentifier:\";\nexports.CANNOT_UNBIND = \"Could not unbind serviceIdentifier:\";\nexports.NOT_REGISTERED = \"No matching bindings found for serviceIdentifier:\";\nexports.MISSING_INJECTABLE_ANNOTATION = \"Missing required @injectable annotation in:\";\nexports.MISSING_INJECT_ANNOTATION = \"Missing required @inject or @multiInject annotation in:\";\n\nvar UNDEFINED_INJECT_ANNOTATION = function (name) {\n  return \"@inject called with undefined this could mean that the class \" + name + \" has \" + \"a circular dependency problem. You can use a LazyServiceIdentifer to  \" + \"overcome this limitation.\";\n};\n\nexports.UNDEFINED_INJECT_ANNOTATION = UNDEFINED_INJECT_ANNOTATION;\nexports.CIRCULAR_DEPENDENCY = \"Circular dependency found:\";\nexports.NOT_IMPLEMENTED = \"Sorry, this feature is not fully implemented yet.\";\nexports.INVALID_BINDING_TYPE = \"Invalid binding type:\";\nexports.NO_MORE_SNAPSHOTS_AVAILABLE = \"No snapshot available to restore.\";\nexports.INVALID_MIDDLEWARE_RETURN = \"Invalid return type in middleware. Middleware must return!\";\nexports.INVALID_FUNCTION_BINDING = \"Value provided to function binding must be a function!\";\nexports.INVALID_TO_SELF_VALUE = \"The toSelf function can only be applied when a constructor is \" + \"used as service identifier\";\nexports.INVALID_DECORATOR_OPERATION = \"The @inject @multiInject @tagged and @named decorators \" + \"must be applied to the parameters of a class constructor or a class property.\";\n\nvar ARGUMENTS_LENGTH_MISMATCH = function () {\n  var values = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    values[_i] = arguments[_i];\n  }\n\n  return \"The number of constructor arguments in the derived class \" + (values[0] + \" must be >= than the number of constructor arguments of its base class.\");\n};\n\nexports.ARGUMENTS_LENGTH_MISMATCH = ARGUMENTS_LENGTH_MISMATCH;\nexports.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT = \"Invalid Container constructor argument. Container options \" + \"must be an object.\";\nexports.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE = \"Invalid Container option. Default scope must \" + \"be a string ('singleton' or 'transient').\";\nexports.CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE = \"Invalid Container option. Auto bind injectable must \" + \"be a boolean\";\nexports.CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK = \"Invalid Container option. Skip base check must \" + \"be a boolean\";\nexports.MULTIPLE_POST_CONSTRUCT_METHODS = \"Cannot apply @postConstruct decorator multiple times in the same class\";\n\nvar POST_CONSTRUCT_ERROR = function () {\n  var values = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    values[_i] = arguments[_i];\n  }\n\n  return \"@postConstruct error in class \" + values[0] + \": \" + values[1];\n};\n\nexports.POST_CONSTRUCT_ERROR = POST_CONSTRUCT_ERROR;\n\nvar CIRCULAR_DEPENDENCY_IN_FACTORY = function () {\n  var values = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    values[_i] = arguments[_i];\n  }\n\n  return \"It looks like there is a circular dependency \" + (\"in one of the '\" + values[0] + \"' bindings. Please investigate bindings with\") + (\"service identifier '\" + values[1] + \"'.\");\n};\n\nexports.CIRCULAR_DEPENDENCY_IN_FACTORY = CIRCULAR_DEPENDENCY_IN_FACTORY;\nexports.STACK_OVERFLOW = \"Maximum call stack size exceeded\";","map":{"version":3,"sources":["../../src/constants/error_msgs.ts"],"names":[],"mappings":";;;;;;AAAa,OAAA,CAAA,+BAAA,GAAkC,oDAAlC;AACA,OAAA,CAAA,mBAAA,GAAsB,sDAAtB;AACA,OAAA,CAAA,aAAA,GAAgB,eAAhB;AACA,OAAA,CAAA,aAAA,GAAgB,eAAhB;AACA,OAAA,CAAA,eAAA,GAAkB,8CAAlB;AACA,OAAA,CAAA,aAAA,GAAgB,qCAAhB;AACA,OAAA,CAAA,cAAA,GAAiB,mDAAjB;AACA,OAAA,CAAA,6BAAA,GAAgC,6CAAhC;AACA,OAAA,CAAA,yBAAA,GAA4B,yDAA5B;;AACN,IAAM,2BAA2B,GAAG,UAAC,IAAD,EAAa;AAC5C,SAAA,kEAAgE,IAAhE,GAAoE,OAApE,GACA,wEADA,GAEA,2BAFA;AAE2B,CAHhC;;AAAM,OAAA,CAAA,2BAAA,GAA2B,2BAA3B;AAIA,OAAA,CAAA,mBAAA,GAAsB,4BAAtB;AACA,OAAA,CAAA,eAAA,GAAkB,mDAAlB;AACA,OAAA,CAAA,oBAAA,GAAuB,uBAAvB;AACA,OAAA,CAAA,2BAAA,GAA8B,mCAA9B;AACA,OAAA,CAAA,yBAAA,GAA4B,4DAA5B;AACA,OAAA,CAAA,wBAAA,GAA2B,wDAA3B;AAEA,OAAA,CAAA,qBAAA,GAAwB,mEACjC,4BADS;AAGA,OAAA,CAAA,2BAAA,GAA8B,4DACvC,+EADS;;AAGN,IAAM,yBAAyB,GAAG,YAAA;AAAC,MAAA,MAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAgB;AAAhB,IAAA,MAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAAqB,SAAA,+DACxD,MAAM,CAAC,CAAD,CAAN,GAAS,yEAD+C,CAAA;AAC0B,CADlF;;AAAM,OAAA,CAAA,yBAAA,GAAyB,yBAAzB;AAGA,OAAA,CAAA,mCAAA,GAAsC,+DAC/C,oBADS;AAGA,OAAA,CAAA,uCAAA,GAA0C,kDACnD,2CADS;AAGA,OAAA,CAAA,8CAAA,GAAiD,yDAC1D,cADS;AAGA,OAAA,CAAA,yCAAA,GAA4C,oDACrD,cADS;AAGA,OAAA,CAAA,+BAAA,GAAkC,wEAAlC;;AACN,IAAM,oBAAoB,GAAG,YAAA;AAAC,MAAA,MAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAgB;AAAhB,IAAA,MAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAAqB,SAAA,mCAAiC,MAAM,CAAC,CAAD,CAAvC,GAA0C,IAA1C,GAA+C,MAAM,CAAC,CAAD,CAArD;AAA0D,CAA7G;;AAAM,OAAA,CAAA,oBAAA,GAAoB,oBAApB;;AAEN,IAAM,8BAA8B,GAAG,YAAA;AAAC,MAAA,MAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAgB;AAAhB,IAAA,MAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAAsB,SAAA,mDACjE,oBAAkB,MAAM,CAAC,CAAD,CAAxB,GAA2B,8CADsC,KAEjE,yBAAuB,MAAM,CAAC,CAAD,CAA7B,GAAgC,IAFiC,CAAA;AAE7B,CAFjC;;AAAM,OAAA,CAAA,8BAAA,GAA8B,8BAA9B;AAIA,OAAA,CAAA,cAAA,GAAiB,kCAAjB","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.STACK_OVERFLOW = exports.CIRCULAR_DEPENDENCY_IN_FACTORY = exports.POST_CONSTRUCT_ERROR = exports.MULTIPLE_POST_CONSTRUCT_METHODS = exports.CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK = exports.CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE = exports.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE = exports.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT = exports.ARGUMENTS_LENGTH_MISMATCH = exports.INVALID_DECORATOR_OPERATION = exports.INVALID_TO_SELF_VALUE = exports.INVALID_FUNCTION_BINDING = exports.INVALID_MIDDLEWARE_RETURN = exports.NO_MORE_SNAPSHOTS_AVAILABLE = exports.INVALID_BINDING_TYPE = exports.NOT_IMPLEMENTED = exports.CIRCULAR_DEPENDENCY = exports.UNDEFINED_INJECT_ANNOTATION = exports.MISSING_INJECT_ANNOTATION = exports.MISSING_INJECTABLE_ANNOTATION = exports.NOT_REGISTERED = exports.CANNOT_UNBIND = exports.AMBIGUOUS_MATCH = exports.KEY_NOT_FOUND = exports.NULL_ARGUMENT = exports.DUPLICATED_METADATA = exports.DUPLICATED_INJECTABLE_DECORATOR = void 0;\nexports.DUPLICATED_INJECTABLE_DECORATOR = \"Cannot apply @injectable decorator multiple times.\";\nexports.DUPLICATED_METADATA = \"Metadata key was used more than once in a parameter:\";\nexports.NULL_ARGUMENT = \"NULL argument\";\nexports.KEY_NOT_FOUND = \"Key Not Found\";\nexports.AMBIGUOUS_MATCH = \"Ambiguous match found for serviceIdentifier:\";\nexports.CANNOT_UNBIND = \"Could not unbind serviceIdentifier:\";\nexports.NOT_REGISTERED = \"No matching bindings found for serviceIdentifier:\";\nexports.MISSING_INJECTABLE_ANNOTATION = \"Missing required @injectable annotation in:\";\nexports.MISSING_INJECT_ANNOTATION = \"Missing required @inject or @multiInject annotation in:\";\nvar UNDEFINED_INJECT_ANNOTATION = function (name) {\n    return \"@inject called with undefined this could mean that the class \" + name + \" has \" +\n        \"a circular dependency problem. You can use a LazyServiceIdentifer to  \" +\n        \"overcome this limitation.\";\n};\nexports.UNDEFINED_INJECT_ANNOTATION = UNDEFINED_INJECT_ANNOTATION;\nexports.CIRCULAR_DEPENDENCY = \"Circular dependency found:\";\nexports.NOT_IMPLEMENTED = \"Sorry, this feature is not fully implemented yet.\";\nexports.INVALID_BINDING_TYPE = \"Invalid binding type:\";\nexports.NO_MORE_SNAPSHOTS_AVAILABLE = \"No snapshot available to restore.\";\nexports.INVALID_MIDDLEWARE_RETURN = \"Invalid return type in middleware. Middleware must return!\";\nexports.INVALID_FUNCTION_BINDING = \"Value provided to function binding must be a function!\";\nexports.INVALID_TO_SELF_VALUE = \"The toSelf function can only be applied when a constructor is \" +\n    \"used as service identifier\";\nexports.INVALID_DECORATOR_OPERATION = \"The @inject @multiInject @tagged and @named decorators \" +\n    \"must be applied to the parameters of a class constructor or a class property.\";\nvar ARGUMENTS_LENGTH_MISMATCH = function () {\n    var values = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        values[_i] = arguments[_i];\n    }\n    return \"The number of constructor arguments in the derived class \" +\n        (values[0] + \" must be >= than the number of constructor arguments of its base class.\");\n};\nexports.ARGUMENTS_LENGTH_MISMATCH = ARGUMENTS_LENGTH_MISMATCH;\nexports.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT = \"Invalid Container constructor argument. Container options \" +\n    \"must be an object.\";\nexports.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE = \"Invalid Container option. Default scope must \" +\n    \"be a string ('singleton' or 'transient').\";\nexports.CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE = \"Invalid Container option. Auto bind injectable must \" +\n    \"be a boolean\";\nexports.CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK = \"Invalid Container option. Skip base check must \" +\n    \"be a boolean\";\nexports.MULTIPLE_POST_CONSTRUCT_METHODS = \"Cannot apply @postConstruct decorator multiple times in the same class\";\nvar POST_CONSTRUCT_ERROR = function () {\n    var values = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        values[_i] = arguments[_i];\n    }\n    return \"@postConstruct error in class \" + values[0] + \": \" + values[1];\n};\nexports.POST_CONSTRUCT_ERROR = POST_CONSTRUCT_ERROR;\nvar CIRCULAR_DEPENDENCY_IN_FACTORY = function () {\n    var values = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        values[_i] = arguments[_i];\n    }\n    return \"It looks like there is a circular dependency \" +\n        (\"in one of the '\" + values[0] + \"' bindings. Please investigate bindings with\") +\n        (\"service identifier '\" + values[1] + \"'.\");\n};\nexports.CIRCULAR_DEPENDENCY_IN_FACTORY = CIRCULAR_DEPENDENCY_IN_FACTORY;\nexports.STACK_OVERFLOW = \"Maximum call stack size exceeded\";\n//# sourceMappingURL=error_msgs.js.map"]},"metadata":{},"sourceType":"script"}