{"ast":null,"code":"import isArray from './is-array';\nimport isFunction from './is-function';\n/**\n * @param {Array} arr The array to iterate over.\n * @param {Function} [fn] The iteratee invoked per element.\n * @return {*} Returns the minimum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * minBy(objects, function(o) { return o.n; });\n * // => { 'n': 1 }\n *\n * minBy(objects, 'n');\n * // => { 'n': 1 }\n */\n\nexport default (function (arr, fn) {\n  if (!isArray(arr)) {\n    return undefined;\n  }\n\n  var minItem;\n  var min = Infinity;\n\n  for (var i = 0; i < arr.length; i++) {\n    var item = arr[i];\n    var v = isFunction(fn) ? fn(item) : item[fn];\n\n    if (v < min) {\n      minItem = item;\n      min = v;\n    }\n  }\n\n  return minItem;\n});","map":{"version":3,"sources":["../src/min-by.ts"],"names":[],"mappings":"AACA,OAAO,OAAP,MAAoB,YAApB;AACA,OAAO,UAAP,MAAuB,eAAvB;AAEA;;;;;;;;;;;;;AAaG;;AACH,gBAAe,UAAI,GAAJ,EAAc,EAAd,EAA6C;AAC1D,MAAI,CAAC,OAAO,CAAC,GAAD,CAAZ,EAAmB;AACjB,WAAO,SAAP;AACD;;AAED,MAAI,OAAJ;AACA,MAAI,GAAG,GAAG,QAAV;;AAEA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAAG,CAAC,MAAxB,EAAgC,CAAC,EAAjC,EAAqC;AACnC,QAAM,IAAI,GAAG,GAAG,CAAC,CAAD,CAAhB;AACA,QAAM,CAAC,GAAG,UAAU,CAAC,EAAD,CAAV,GAAiB,EAAE,CAAC,IAAD,CAAnB,GAA4B,IAAI,CAAC,EAAD,CAA1C;;AAEA,QAAI,CAAC,GAAG,GAAR,EAAa;AACX,MAAA,OAAO,GAAG,IAAV;AACA,MAAA,GAAG,GAAG,CAAN;AACD;AACF;;AAED,SAAO,OAAP;AACD,CAnBD","sourceRoot":"","sourcesContent":["import isArray from './is-array';\nimport isFunction from './is-function';\n/**\n * @param {Array} arr The array to iterate over.\n * @param {Function} [fn] The iteratee invoked per element.\n * @return {*} Returns the minimum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * minBy(objects, function(o) { return o.n; });\n * // => { 'n': 1 }\n *\n * minBy(objects, 'n');\n * // => { 'n': 1 }\n */\nexport default (function (arr, fn) {\n    if (!isArray(arr)) {\n        return undefined;\n    }\n    var minItem;\n    var min = Infinity;\n    for (var i = 0; i < arr.length; i++) {\n        var item = arr[i];\n        var v = isFunction(fn) ? fn(item) : item[fn];\n        if (v < min) {\n            minItem = item;\n            min = v;\n        }\n    }\n    return minItem;\n});\n//# sourceMappingURL=min-by.js.map"]},"metadata":{},"sourceType":"module"}