{"ast":null,"code":"import { get } from '@antv/util';\nimport { deepAssign } from '../../utils';\nimport { adaptor as lineAdaptor } from '../line/adaptor';\nimport { adaptor as pieAdaptor } from '../pie/adaptor';\nimport { adaptor as columnAdaptor } from '../column/adaptor';\nimport { adaptor as barAdaptor } from '../bar/adaptor';\nimport { adaptor as areaAdaptor } from '../area/adaptor';\nimport { adaptor as gaugeAdaptor } from '../gauge/adaptor';\nimport { adaptor as tinyLineAdaptor } from '../tiny-line/adaptor';\nimport { adaptor as tinyColumnAdaptor } from '../tiny-column/adaptor';\nimport { adaptor as tinyAreadaptor } from '../tiny-area/adaptor';\nimport { adaptor as ringProgressAdaptor } from '../ring-progress/adaptor';\nimport { adaptor as progressAdaptor } from '../progress/adaptor';\nimport { adaptor as scatterAdaptor } from '../scatter/adaptor';\nimport { adaptor as histogramAdaptor } from '../histogram/adaptor';\nimport { adaptor as funnelAdaptor } from '../funnel/adaptor';\nimport { Line } from '../line';\nimport { Pie } from '../pie';\nimport { Bar } from '../bar';\nimport { Column } from '../column';\nimport { Area } from '../area';\nimport { Gauge } from '../gauge';\nimport { TinyLine } from '../tiny-line';\nimport { TinyArea } from '../tiny-area';\nimport { TinyColumn } from '../tiny-column';\nimport { RingProgress } from '../ring-progress';\nimport { Progress } from '../progress';\nimport { Scatter } from '../scatter';\nimport { Histogram } from '../histogram';\nimport { Funnel } from '../funnel';\n/**\n * 可在 multi-view 中使用的 plots\n */\n\nvar PLOT_ADAPTORS = {\n  line: lineAdaptor,\n  pie: pieAdaptor,\n  column: columnAdaptor,\n  bar: barAdaptor,\n  area: areaAdaptor,\n  gauge: gaugeAdaptor,\n  'tiny-line': tinyLineAdaptor,\n  'tiny-column': tinyColumnAdaptor,\n  'tiny-area': tinyAreadaptor,\n  'ring-progress': ringProgressAdaptor,\n  progress: progressAdaptor,\n  scatter: scatterAdaptor,\n  histogram: histogramAdaptor,\n  funnel: funnelAdaptor\n};\n/**\n * 获取指定 plot 的 class contructor\n * @param {string} plot\n */\n\nvar PLOT_CONSTRUCTOR = {\n  line: Line,\n  pie: Pie,\n  column: Column,\n  bar: Bar,\n  area: Area,\n  gauge: Gauge,\n  'tiny-line': TinyLine,\n  'tiny-column': TinyColumn,\n  'tiny-area': TinyArea,\n  'ring-progress': RingProgress,\n  progress: Progress,\n  scatter: Scatter,\n  histogram: Histogram,\n  funnel: Funnel\n};\n/**\n * 在 mix 图表以及 facet 图表中，defaultOptions 进行复写简化\n */\n\nvar DEFAULT_OPTIONS_MAP = {\n  pie: {\n    label: false\n  },\n  column: {\n    tooltip: {\n      showMarkers: false\n    }\n  },\n  bar: {\n    tooltip: {\n      showMarkers: false\n    }\n  }\n};\n/**\n * 执行 plot 的 adaptor, 默认都带上 defaultOptions\n * @param {string} plot\n */\n\nexport function execPlotAdaptor(plot, view, options) {\n  var cls = PLOT_CONSTRUCTOR[plot];\n\n  if (!cls) {\n    console.error(\"could not find \" + plot + \" plot\");\n    return;\n  }\n\n  var module = PLOT_ADAPTORS[plot];\n  module({\n    chart: view,\n    options: deepAssign({}, cls.getDefaultOptions(), get(DEFAULT_OPTIONS_MAP, plot, {}), options)\n  });\n}","map":{"version":3,"sources":["../../../src/plots/mix/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { View } from '@antv/g2';\nimport { get } from '@antv/util';\nimport { deepAssign } from '../../utils';\nimport { adaptor as lineAdaptor } from '../line/adaptor';\nimport { adaptor as pieAdaptor } from '../pie/adaptor';\nimport { adaptor as columnAdaptor } from '../column/adaptor';\nimport { adaptor as barAdaptor } from '../bar/adaptor';\nimport { adaptor as areaAdaptor } from '../area/adaptor';\nimport { adaptor as gaugeAdaptor } from '../gauge/adaptor';\nimport { adaptor as tinyLineAdaptor } from '../tiny-line/adaptor';\nimport { adaptor as tinyColumnAdaptor } from '../tiny-column/adaptor';\nimport { adaptor as tinyAreadaptor } from '../tiny-area/adaptor';\nimport { adaptor as ringProgressAdaptor } from '../ring-progress/adaptor';\nimport { adaptor as progressAdaptor } from '../progress/adaptor';\nimport { adaptor as scatterAdaptor } from '../scatter/adaptor';\nimport { adaptor as histogramAdaptor } from '../histogram/adaptor';\nimport { adaptor as funnelAdaptor } from '../funnel/adaptor';\nimport { Line, LineOptions } from '../line';\nimport { Pie, PieOptions } from '../pie';\nimport { Bar, BarOptions } from '../bar';\nimport { Column, ColumnOptions } from '../column';\nimport { Area, AreaOptions } from '../area';\nimport { Gauge, GaugeOptions } from '../gauge';\nimport { TinyLine, TinyLineOptions } from '../tiny-line';\nimport { TinyArea, TinyAreaOptions } from '../tiny-area';\nimport { TinyColumn, TinyColumnOptions } from '../tiny-column';\nimport { RingProgress, RingProgressOptions } from '../ring-progress';\nimport { Progress, ProgressOptions } from '../progress';\nimport { Scatter, ScatterOptions } from '../scatter';\nimport { Histogram, HistogramOptions } from '../histogram';\nimport { Funnel, FunnelOptions } from '../funnel';\n\n/**\n * 移除 options 中的 width、height 设置\n */\ntype OmitSize<T> = Omit<T, 'width' | 'height'>;\n\n/**\n * multi-view 中的支持的 plots 类型（带 options 定义）\n */\nexport type IPlotTypes =\n  | {\n      /**\n       * plot 类型\n       */\n      readonly type: 'line';\n      /**\n       * plot 配置\n       */\n      readonly options: OmitSize<LineOptions>;\n    }\n  | {\n      readonly type: 'pie';\n      readonly options: OmitSize<PieOptions>;\n    }\n  | {\n      readonly type: 'bar';\n      readonly options: OmitSize<BarOptions>;\n    }\n  | {\n      readonly type: 'column';\n      readonly options: OmitSize<ColumnOptions>;\n    }\n  | {\n      readonly type: 'area';\n      readonly options: OmitSize<AreaOptions>;\n    }\n  | {\n      readonly type: 'gauge';\n      readonly options: OmitSize<GaugeOptions>;\n    }\n  | {\n      readonly type: 'tiny-line';\n      readonly options: OmitSize<TinyLineOptions>;\n    }\n  | {\n      readonly type: 'tiny-area';\n      readonly options: OmitSize<TinyAreaOptions>;\n    }\n  | {\n      readonly type: 'tiny-column';\n      readonly options: OmitSize<TinyColumnOptions>;\n    }\n  | {\n      readonly type: 'ring-progress';\n      readonly options: OmitSize<RingProgressOptions>;\n    }\n  | {\n      readonly type: 'progress';\n      readonly options: OmitSize<ProgressOptions>;\n    }\n  | {\n      readonly type: 'histogram';\n      readonly options: OmitSize<HistogramOptions>;\n    }\n  | {\n      readonly type: 'scatter';\n      readonly options: OmitSize<ScatterOptions>;\n    }\n  | {\n      readonly type: 'funnel';\n      readonly options: OmitSize<FunnelOptions>;\n    };\n\n/**\n * 可在 multi-view 中使用的 plots\n */\nconst PLOT_ADAPTORS = {\n  line: lineAdaptor,\n  pie: pieAdaptor,\n  column: columnAdaptor,\n  bar: barAdaptor,\n  area: areaAdaptor,\n  gauge: gaugeAdaptor,\n  'tiny-line': tinyLineAdaptor,\n  'tiny-column': tinyColumnAdaptor,\n  'tiny-area': tinyAreadaptor,\n  'ring-progress': ringProgressAdaptor,\n  progress: progressAdaptor,\n  scatter: scatterAdaptor,\n  histogram: histogramAdaptor,\n  funnel: funnelAdaptor,\n};\n\n/**\n * 获取指定 plot 的 class contructor\n * @param {string} plot\n */\nconst PLOT_CONSTRUCTOR = {\n  line: Line,\n  pie: Pie,\n  column: Column,\n  bar: Bar,\n  area: Area,\n  gauge: Gauge,\n  'tiny-line': TinyLine,\n  'tiny-column': TinyColumn,\n  'tiny-area': TinyArea,\n  'ring-progress': RingProgress,\n  progress: Progress,\n  scatter: Scatter,\n  histogram: Histogram,\n  funnel: Funnel,\n};\n\n/**\n * 在 mix 图表以及 facet 图表中，defaultOptions 进行复写简化\n */\nconst DEFAULT_OPTIONS_MAP = {\n  pie: { label: false },\n  column: { tooltip: { showMarkers: false } },\n  bar: { tooltip: { showMarkers: false } },\n};\n\n/**\n * 执行 plot 的 adaptor, 默认都带上 defaultOptions\n * @param {string} plot\n */\nexport function execPlotAdaptor<T extends IPlotTypes['type']>(\n  plot: T,\n  view: View,\n  options: IPlotTypes['options']\n): void {\n  const cls = PLOT_CONSTRUCTOR[plot];\n  if (!cls) {\n    console.error(`could not find ${plot} plot`);\n    return;\n  }\n  const module = PLOT_ADAPTORS[plot];\n  module({\n    chart: view,\n    options: deepAssign({}, cls.getDefaultOptions(), get(DEFAULT_OPTIONS_MAP, plot, {}), options),\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}