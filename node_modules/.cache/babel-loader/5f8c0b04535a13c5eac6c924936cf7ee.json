{"ast":null,"code":"import { isArray } from '@antv/util';\nimport { flow, deepAssign } from '../../../utils';\nimport { getTooltipMapping } from '../../../utils/tooltip';\nimport { geometry as baseGeometry } from '../../../adaptor/geometries/base';\nimport { FUNNEL_PERCENT, FUNNEL_CONVERSATION, FUNNEL_MAPPING_VALUE } from '../constant';\nimport { conversionTagComponent, transformData } from './common';\n/**\n * 处理字段数据\n * @param params\n */\n\nfunction field(params) {\n  var _a;\n\n  var chart = params.chart,\n      options = params.options;\n  var _b = options.data,\n      data = _b === void 0 ? [] : _b,\n      yField = options.yField; // 绘制漏斗图\n\n  chart.data(data);\n  chart.scale((_a = {}, _a[yField] = {\n    sync: true\n  }, _a));\n  return params;\n}\n/**\n * geometry处理\n * @param params\n */\n\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var data = options.data,\n      xField = options.xField,\n      yField = options.yField,\n      color = options.color,\n      compareField = options.compareField,\n      isTransposed = options.isTransposed,\n      tooltip = options.tooltip,\n      maxSize = options.maxSize,\n      minSize = options.minSize,\n      label = options.label,\n      funnelStyle = options.funnelStyle,\n      state = options.state;\n  chart.facet('mirror', {\n    fields: [compareField],\n    // 漏斗图的转置规则与分面相反，默认是垂直布局\n    transpose: !isTransposed,\n    padding: isTransposed ? 0 : [32, 0, 0, 0],\n    eachView: function (view, facet) {\n      var index = isTransposed ? facet.rowIndex : facet.columnIndex;\n\n      if (!isTransposed) {\n        view.coordinate({\n          type: 'rect',\n          actions: [['transpose'], ['scale', index === 0 ? -1 : 1, -1]]\n        });\n      }\n\n      var formatterData = transformData(facet.data, data, {\n        yField: yField,\n        maxSize: maxSize,\n        minSize: minSize\n      });\n      view.data(formatterData); // 绘制图形\n\n      var _a = getTooltipMapping(tooltip, [xField, yField, compareField]),\n          fields = _a.fields,\n          formatter = _a.formatter;\n\n      var defaultFacetLabel = isTransposed ? {\n        offset: index === 0 ? 10 : -23,\n        position: index === 0 ? 'bottom' : 'top'\n      } : {\n        offset: 10,\n        position: 'left',\n        style: {\n          textAlign: index === 0 ? 'end' : 'start'\n        }\n      };\n      baseGeometry({\n        chart: view,\n        options: {\n          type: 'interval',\n          xField: xField,\n          yField: FUNNEL_MAPPING_VALUE,\n          colorField: xField,\n          tooltipFields: isArray(fields) && fields.concat([FUNNEL_PERCENT, FUNNEL_CONVERSATION]),\n          mapping: {\n            // todo 暂时不提供 金字塔 shape，后续需要自定义下形状\n            shape: 'funnel',\n            tooltip: formatter,\n            color: color,\n            style: funnelStyle\n          },\n          label: label === false ? false : deepAssign({}, defaultFacetLabel, label),\n          state: state\n        }\n      });\n    }\n  });\n  return params;\n}\n/**\n * 转化率组件\n * @param params\n */\n\n\nfunction conversionTag(params) {\n  var chart = params.chart,\n      options = params.options;\n  var conversionTag = options.conversionTag,\n      isTransposed = options.isTransposed; // @ts-ignore\n\n  chart.once('beforepaint', function () {\n    chart.views.forEach(function (view, viewIndex) {\n      var getLineCoordinate = function (datum, datumIndex, data, initLineOption) {\n        var ratio = viewIndex === 0 ? -1 : 1;\n        return deepAssign({}, initLineOption, {\n          start: [datumIndex - 0.5, datum[FUNNEL_MAPPING_VALUE]],\n          end: [datumIndex - 0.5, datum[FUNNEL_MAPPING_VALUE] + 0.05],\n          text: isTransposed ? {\n            style: {\n              textAlign: 'start'\n            }\n          } : {\n            offsetX: conversionTag !== false ? ratio * conversionTag.offsetX : 0,\n            style: {\n              textAlign: viewIndex === 0 ? 'end' : 'start'\n            }\n          }\n        });\n      };\n\n      conversionTagComponent(getLineCoordinate)(deepAssign({}, {\n        chart: view,\n        options: options\n      }));\n    });\n  });\n  return params;\n}\n/**\n * 对比漏斗\n * @param chart\n * @param options\n */\n\n\nexport function compareFunnel(params) {\n  return flow(field, geometry, conversionTag)(params);\n}","map":{"version":3,"sources":["../../../../src/plots/funnel/geometries/compare.ts"],"names":[],"mappings":"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","sourcesContent":["import { Types } from '@antv/g2';\nimport { isArray } from '@antv/util';\nimport { flow, deepAssign } from '../../../utils';\nimport { Params } from '../../../core/adaptor';\nimport { Datum, Data } from '../../../types/common';\nimport { getTooltipMapping } from '../../../utils/tooltip';\nimport { geometry as baseGeometry } from '../../../adaptor/geometries/base';\nimport { FunnelOptions } from '../types';\nimport { FUNNEL_PERCENT, FUNNEL_CONVERSATION, FUNNEL_MAPPING_VALUE } from '../constant';\nimport { conversionTagComponent, transformData } from './common';\n\n/**\n * 处理字段数据\n * @param params\n */\nfunction field(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { data = [], yField } = options;\n\n  // 绘制漏斗图\n  chart.data(data);\n  chart.scale({\n    [yField]: {\n      sync: true,\n    },\n  });\n  return params;\n}\n\n/**\n * geometry处理\n * @param params\n */\nfunction geometry(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const {\n    data,\n    xField,\n    yField,\n    color,\n    compareField,\n    isTransposed,\n    tooltip,\n    maxSize,\n    minSize,\n    label,\n    funnelStyle,\n    state,\n  } = options;\n\n  chart.facet('mirror', {\n    fields: [compareField],\n    // 漏斗图的转置规则与分面相反，默认是垂直布局\n    transpose: !isTransposed,\n    padding: isTransposed ? 0 : [32, 0, 0, 0],\n    eachView(view, facet) {\n      const index = isTransposed ? facet.rowIndex : facet.columnIndex;\n\n      if (!isTransposed) {\n        view.coordinate({\n          type: 'rect',\n          actions: [['transpose'], ['scale', index === 0 ? -1 : 1, -1]],\n        });\n      }\n\n      const formatterData = transformData(facet.data, data, {\n        yField,\n        maxSize,\n        minSize,\n      });\n\n      view.data(formatterData);\n\n      // 绘制图形\n      const { fields, formatter } = getTooltipMapping(tooltip, [xField, yField, compareField]);\n\n      const defaultFacetLabel = isTransposed\n        ? {\n            offset: index === 0 ? 10 : -23,\n            position: (index === 0 ? 'bottom' : 'top') as Types.IntervalGeometryLabelPosition,\n          }\n        : {\n            offset: 10,\n            position: 'left' as Types.IntervalGeometryLabelPosition,\n            style: {\n              textAlign: index === 0 ? 'end' : 'start',\n            },\n          };\n\n      baseGeometry({\n        chart: view,\n        options: {\n          type: 'interval',\n          xField: xField,\n          yField: FUNNEL_MAPPING_VALUE,\n          colorField: xField,\n          tooltipFields: isArray(fields) && fields.concat([FUNNEL_PERCENT, FUNNEL_CONVERSATION]),\n          mapping: {\n            // todo 暂时不提供 金字塔 shape，后续需要自定义下形状\n            shape: 'funnel',\n            tooltip: formatter,\n            color,\n            style: funnelStyle,\n          },\n          label: label === false ? false : deepAssign({}, defaultFacetLabel, label),\n          state,\n        },\n      });\n    },\n  });\n\n  return params;\n}\n\n/**\n * 转化率组件\n * @param params\n */\nfunction conversionTag(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { conversionTag, isTransposed } = options;\n  // @ts-ignore\n  chart.once('beforepaint', () => {\n    chart.views.forEach((view, viewIndex) => {\n      const getLineCoordinate = (\n        datum: Datum,\n        datumIndex: number,\n        data: Data,\n        initLineOption: Record<string, any>\n      ): Types.LineOption => {\n        const ratio = viewIndex === 0 ? -1 : 1;\n        return deepAssign({}, initLineOption, {\n          start: [datumIndex - 0.5, datum[FUNNEL_MAPPING_VALUE]],\n          end: [datumIndex - 0.5, datum[FUNNEL_MAPPING_VALUE] + 0.05],\n          text: isTransposed\n            ? {\n                style: {\n                  textAlign: 'start',\n                },\n              }\n            : {\n                offsetX: conversionTag !== false ? ratio * conversionTag.offsetX : 0,\n                style: {\n                  textAlign: viewIndex === 0 ? 'end' : 'start',\n                },\n              },\n        });\n      };\n\n      conversionTagComponent(getLineCoordinate)(\n        deepAssign(\n          {},\n          {\n            chart: view,\n            options,\n          }\n        )\n      );\n    });\n  });\n  return params;\n}\n\n/**\n * 对比漏斗\n * @param chart\n * @param options\n */\nexport function compareFunnel(params: Params<FunnelOptions>) {\n  return flow(field, geometry, conversionTag)(params);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}