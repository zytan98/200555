{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBindingDictionary = exports.createMockRequest = exports.plan = void 0;\n\nvar binding_count_1 = require(\"../bindings/binding_count\");\n\nvar ERROR_MSGS = require(\"../constants/error_msgs\");\n\nvar literal_types_1 = require(\"../constants/literal_types\");\n\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\n\nvar exceptions_1 = require(\"../utils/exceptions\");\n\nvar serialization_1 = require(\"../utils/serialization\");\n\nvar context_1 = require(\"./context\");\n\nvar metadata_1 = require(\"./metadata\");\n\nvar plan_1 = require(\"./plan\");\n\nvar reflection_utils_1 = require(\"./reflection_utils\");\n\nvar request_1 = require(\"./request\");\n\nvar target_1 = require(\"./target\");\n\nfunction getBindingDictionary(cntnr) {\n  return cntnr._bindingDictionary;\n}\n\nexports.getBindingDictionary = getBindingDictionary;\n\nfunction _createTarget(isMultiInject, targetType, serviceIdentifier, name, key, value) {\n  var metadataKey = isMultiInject ? METADATA_KEY.MULTI_INJECT_TAG : METADATA_KEY.INJECT_TAG;\n  var injectMetadata = new metadata_1.Metadata(metadataKey, serviceIdentifier);\n  var target = new target_1.Target(targetType, name, serviceIdentifier, injectMetadata);\n\n  if (key !== undefined) {\n    var tagMetadata = new metadata_1.Metadata(key, value);\n    target.metadata.push(tagMetadata);\n  }\n\n  return target;\n}\n\nfunction _getActiveBindings(metadataReader, avoidConstraints, context, parentRequest, target) {\n  var bindings = getBindings(context.container, target.serviceIdentifier);\n  var activeBindings = [];\n\n  if (bindings.length === binding_count_1.BindingCount.NoBindingsAvailable && context.container.options.autoBindInjectable && typeof target.serviceIdentifier === \"function\" && metadataReader.getConstructorMetadata(target.serviceIdentifier).compilerGeneratedMetadata) {\n    context.container.bind(target.serviceIdentifier).toSelf();\n    bindings = getBindings(context.container, target.serviceIdentifier);\n  }\n\n  if (!avoidConstraints) {\n    activeBindings = bindings.filter(function (binding) {\n      var request = new request_1.Request(binding.serviceIdentifier, context, parentRequest, binding, target);\n      return binding.constraint(request);\n    });\n  } else {\n    activeBindings = bindings;\n  }\n\n  _validateActiveBindingCount(target.serviceIdentifier, activeBindings, target, context.container);\n\n  return activeBindings;\n}\n\nfunction _validateActiveBindingCount(serviceIdentifier, bindings, target, container) {\n  switch (bindings.length) {\n    case binding_count_1.BindingCount.NoBindingsAvailable:\n      if (target.isOptional()) {\n        return bindings;\n      } else {\n        var serviceIdentifierString = serialization_1.getServiceIdentifierAsString(serviceIdentifier);\n        var msg = ERROR_MSGS.NOT_REGISTERED;\n        msg += serialization_1.listMetadataForTarget(serviceIdentifierString, target);\n        msg += serialization_1.listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);\n        throw new Error(msg);\n      }\n\n    case binding_count_1.BindingCount.OnlyOneBindingAvailable:\n      if (!target.isArray()) {\n        return bindings;\n      }\n\n    case binding_count_1.BindingCount.MultipleBindingsAvailable:\n    default:\n      if (!target.isArray()) {\n        var serviceIdentifierString = serialization_1.getServiceIdentifierAsString(serviceIdentifier);\n        var msg = ERROR_MSGS.AMBIGUOUS_MATCH + \" \" + serviceIdentifierString;\n        msg += serialization_1.listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);\n        throw new Error(msg);\n      } else {\n        return bindings;\n      }\n\n  }\n}\n\nfunction _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, parentRequest, target) {\n  var activeBindings;\n  var childRequest;\n\n  if (parentRequest === null) {\n    activeBindings = _getActiveBindings(metadataReader, avoidConstraints, context, null, target);\n    childRequest = new request_1.Request(serviceIdentifier, context, null, activeBindings, target);\n    var thePlan = new plan_1.Plan(context, childRequest);\n    context.addPlan(thePlan);\n  } else {\n    activeBindings = _getActiveBindings(metadataReader, avoidConstraints, context, parentRequest, target);\n    childRequest = parentRequest.addChildRequest(target.serviceIdentifier, activeBindings, target);\n  }\n\n  activeBindings.forEach(function (binding) {\n    var subChildRequest = null;\n\n    if (target.isArray()) {\n      subChildRequest = childRequest.addChildRequest(binding.serviceIdentifier, binding, target);\n    } else {\n      if (binding.cache) {\n        return;\n      }\n\n      subChildRequest = childRequest;\n    }\n\n    if (binding.type === literal_types_1.BindingTypeEnum.Instance && binding.implementationType !== null) {\n      var dependencies = reflection_utils_1.getDependencies(metadataReader, binding.implementationType);\n\n      if (!context.container.options.skipBaseClassChecks) {\n        var baseClassDependencyCount = reflection_utils_1.getBaseClassDependencyCount(metadataReader, binding.implementationType);\n\n        if (dependencies.length < baseClassDependencyCount) {\n          var error = ERROR_MSGS.ARGUMENTS_LENGTH_MISMATCH(reflection_utils_1.getFunctionName(binding.implementationType));\n          throw new Error(error);\n        }\n      }\n\n      dependencies.forEach(function (dependency) {\n        _createSubRequests(metadataReader, false, dependency.serviceIdentifier, context, subChildRequest, dependency);\n      });\n    }\n  });\n}\n\nfunction getBindings(container, serviceIdentifier) {\n  var bindings = [];\n  var bindingDictionary = getBindingDictionary(container);\n\n  if (bindingDictionary.hasKey(serviceIdentifier)) {\n    bindings = bindingDictionary.get(serviceIdentifier);\n  } else if (container.parent !== null) {\n    bindings = getBindings(container.parent, serviceIdentifier);\n  }\n\n  return bindings;\n}\n\nfunction plan(metadataReader, container, isMultiInject, targetType, serviceIdentifier, key, value, avoidConstraints) {\n  if (avoidConstraints === void 0) {\n    avoidConstraints = false;\n  }\n\n  var context = new context_1.Context(container);\n\n  var target = _createTarget(isMultiInject, targetType, serviceIdentifier, \"\", key, value);\n\n  try {\n    _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, null, target);\n\n    return context;\n  } catch (error) {\n    if (exceptions_1.isStackOverflowExeption(error)) {\n      if (context.plan) {\n        serialization_1.circularDependencyToException(context.plan.rootRequest);\n      }\n    }\n\n    throw error;\n  }\n}\n\nexports.plan = plan;\n\nfunction createMockRequest(container, serviceIdentifier, key, value) {\n  var target = new target_1.Target(literal_types_1.TargetTypeEnum.Variable, \"\", serviceIdentifier, new metadata_1.Metadata(key, value));\n  var context = new context_1.Context(container);\n  var request = new request_1.Request(serviceIdentifier, context, null, [], target);\n  return request;\n}\n\nexports.createMockRequest = createMockRequest;","map":{"version":3,"sources":["../../src/planning/planner.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getBindingDictionary = exports.createMockRequest = exports.plan = void 0;\nvar binding_count_1 = require(\"../bindings/binding_count\");\nvar ERROR_MSGS = require(\"../constants/error_msgs\");\nvar literal_types_1 = require(\"../constants/literal_types\");\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar serialization_1 = require(\"../utils/serialization\");\nvar context_1 = require(\"./context\");\nvar metadata_1 = require(\"./metadata\");\nvar plan_1 = require(\"./plan\");\nvar reflection_utils_1 = require(\"./reflection_utils\");\nvar request_1 = require(\"./request\");\nvar target_1 = require(\"./target\");\nfunction getBindingDictionary(cntnr) {\n    return cntnr._bindingDictionary;\n}\nexports.getBindingDictionary = getBindingDictionary;\nfunction _createTarget(isMultiInject, targetType, serviceIdentifier, name, key, value) {\n    var metadataKey = isMultiInject ? METADATA_KEY.MULTI_INJECT_TAG : METADATA_KEY.INJECT_TAG;\n    var injectMetadata = new metadata_1.Metadata(metadataKey, serviceIdentifier);\n    var target = new target_1.Target(targetType, name, serviceIdentifier, injectMetadata);\n    if (key !== undefined) {\n        var tagMetadata = new metadata_1.Metadata(key, value);\n        target.metadata.push(tagMetadata);\n    }\n    return target;\n}\nfunction _getActiveBindings(metadataReader, avoidConstraints, context, parentRequest, target) {\n    var bindings = getBindings(context.container, target.serviceIdentifier);\n    var activeBindings = [];\n    if (bindings.length === binding_count_1.BindingCount.NoBindingsAvailable &&\n        context.container.options.autoBindInjectable &&\n        typeof target.serviceIdentifier === \"function\" &&\n        metadataReader.getConstructorMetadata(target.serviceIdentifier).compilerGeneratedMetadata) {\n        context.container.bind(target.serviceIdentifier).toSelf();\n        bindings = getBindings(context.container, target.serviceIdentifier);\n    }\n    if (!avoidConstraints) {\n        activeBindings = bindings.filter(function (binding) {\n            var request = new request_1.Request(binding.serviceIdentifier, context, parentRequest, binding, target);\n            return binding.constraint(request);\n        });\n    }\n    else {\n        activeBindings = bindings;\n    }\n    _validateActiveBindingCount(target.serviceIdentifier, activeBindings, target, context.container);\n    return activeBindings;\n}\nfunction _validateActiveBindingCount(serviceIdentifier, bindings, target, container) {\n    switch (bindings.length) {\n        case binding_count_1.BindingCount.NoBindingsAvailable:\n            if (target.isOptional()) {\n                return bindings;\n            }\n            else {\n                var serviceIdentifierString = serialization_1.getServiceIdentifierAsString(serviceIdentifier);\n                var msg = ERROR_MSGS.NOT_REGISTERED;\n                msg += serialization_1.listMetadataForTarget(serviceIdentifierString, target);\n                msg += serialization_1.listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);\n                throw new Error(msg);\n            }\n        case binding_count_1.BindingCount.OnlyOneBindingAvailable:\n            if (!target.isArray()) {\n                return bindings;\n            }\n        case binding_count_1.BindingCount.MultipleBindingsAvailable:\n        default:\n            if (!target.isArray()) {\n                var serviceIdentifierString = serialization_1.getServiceIdentifierAsString(serviceIdentifier);\n                var msg = ERROR_MSGS.AMBIGUOUS_MATCH + \" \" + serviceIdentifierString;\n                msg += serialization_1.listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);\n                throw new Error(msg);\n            }\n            else {\n                return bindings;\n            }\n    }\n}\nfunction _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, parentRequest, target) {\n    var activeBindings;\n    var childRequest;\n    if (parentRequest === null) {\n        activeBindings = _getActiveBindings(metadataReader, avoidConstraints, context, null, target);\n        childRequest = new request_1.Request(serviceIdentifier, context, null, activeBindings, target);\n        var thePlan = new plan_1.Plan(context, childRequest);\n        context.addPlan(thePlan);\n    }\n    else {\n        activeBindings = _getActiveBindings(metadataReader, avoidConstraints, context, parentRequest, target);\n        childRequest = parentRequest.addChildRequest(target.serviceIdentifier, activeBindings, target);\n    }\n    activeBindings.forEach(function (binding) {\n        var subChildRequest = null;\n        if (target.isArray()) {\n            subChildRequest = childRequest.addChildRequest(binding.serviceIdentifier, binding, target);\n        }\n        else {\n            if (binding.cache) {\n                return;\n            }\n            subChildRequest = childRequest;\n        }\n        if (binding.type === literal_types_1.BindingTypeEnum.Instance && binding.implementationType !== null) {\n            var dependencies = reflection_utils_1.getDependencies(metadataReader, binding.implementationType);\n            if (!context.container.options.skipBaseClassChecks) {\n                var baseClassDependencyCount = reflection_utils_1.getBaseClassDependencyCount(metadataReader, binding.implementationType);\n                if (dependencies.length < baseClassDependencyCount) {\n                    var error = ERROR_MSGS.ARGUMENTS_LENGTH_MISMATCH(reflection_utils_1.getFunctionName(binding.implementationType));\n                    throw new Error(error);\n                }\n            }\n            dependencies.forEach(function (dependency) {\n                _createSubRequests(metadataReader, false, dependency.serviceIdentifier, context, subChildRequest, dependency);\n            });\n        }\n    });\n}\nfunction getBindings(container, serviceIdentifier) {\n    var bindings = [];\n    var bindingDictionary = getBindingDictionary(container);\n    if (bindingDictionary.hasKey(serviceIdentifier)) {\n        bindings = bindingDictionary.get(serviceIdentifier);\n    }\n    else if (container.parent !== null) {\n        bindings = getBindings(container.parent, serviceIdentifier);\n    }\n    return bindings;\n}\nfunction plan(metadataReader, container, isMultiInject, targetType, serviceIdentifier, key, value, avoidConstraints) {\n    if (avoidConstraints === void 0) { avoidConstraints = false; }\n    var context = new context_1.Context(container);\n    var target = _createTarget(isMultiInject, targetType, serviceIdentifier, \"\", key, value);\n    try {\n        _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, null, target);\n        return context;\n    }\n    catch (error) {\n        if (exceptions_1.isStackOverflowExeption(error)) {\n            if (context.plan) {\n                serialization_1.circularDependencyToException(context.plan.rootRequest);\n            }\n        }\n        throw error;\n    }\n}\nexports.plan = plan;\nfunction createMockRequest(container, serviceIdentifier, key, value) {\n    var target = new target_1.Target(literal_types_1.TargetTypeEnum.Variable, \"\", serviceIdentifier, new metadata_1.Metadata(key, value));\n    var context = new context_1.Context(container);\n    var request = new request_1.Request(serviceIdentifier, context, null, [], target);\n    return request;\n}\nexports.createMockRequest = createMockRequest;\n//# sourceMappingURL=planner.js.map"]},"metadata":{},"sourceType":"script"}