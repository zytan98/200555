{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React, { useEffect } from 'react';\nimport G6 from '@antv/g6';\nimport ChartLoading from '../../../util/createLoading';\nimport { ErrorBoundary } from '../../../base';\nimport useGraph from '../../hooks/useGraph';\nimport { registerIconNode } from '../customItems';\nimport { defaultLabelStyle, defaultStateStyles, defaultNodeSize } from '../constants';\nimport { getGraphSize, processMinimap, getGraphId, renderGraph, getDefaultEdgeArrowCfg, useProps } from '../utils';\nvar defaultNodeStyle = {\n  fill: '#91d5ff',\n  stroke: '#40a9ff',\n  radius: 2\n};\nvar defaultLayout = {\n  type: 'compactBox',\n  direction: 'TB',\n  getId: function getId(d) {\n    return d.id;\n  },\n  getHeight: function getHeight() {\n    return 16;\n  },\n  getWidth: function getWidth() {\n    return 16;\n  },\n  getVGap: function getVGap() {\n    return 40;\n  },\n  getHGap: function getHGap() {\n    return 70;\n  }\n};\nvar defaultProps = {\n  animate: true,\n  nodeType: 'rect',\n  edgeType: 'polyline',\n  nodeSize: defaultNodeSize,\n  behaviors: ['drag-canvas', 'zoom-canvas'],\n  nodeLabelCfg: {\n    style: defaultLabelStyle\n  },\n  layout: defaultLayout,\n  showMarker: false,\n  showArrow: true,\n  arrowType: 'triangle',\n  nodeStateStyles: defaultStateStyles,\n  edgeStateStyles: defaultStateStyles,\n  autoFit: true,\n  style: {\n    height: 'inherit'\n  }\n};\nvar graphs = {};\n\nvar OrganizationalGraph = function (props) {\n  var uProps = useProps(props, defaultProps);\n  var data = uProps.data,\n      className = uProps.className,\n      style = uProps.style,\n      width = uProps.width,\n      height = uProps.height,\n      _a = uProps.animate,\n      animate = _a === void 0 ? true : _a,\n      _b = uProps.nodeType,\n      nodeType = _b === void 0 ? 'rect' : _b,\n      _c = uProps.edgeType,\n      edgeType = _c === void 0 ? 'polyline' : _c,\n      _d = uProps.nodeSize,\n      nodeSize = _d === void 0 ? defaultNodeSize : _d,\n      _e = uProps.behaviors,\n      behaviors = _e === void 0 ? ['drag-canvas', 'zoom-canvas'] : _e,\n      nodeLabelCfg = uProps.nodeLabelCfg,\n      nodeCfg = uProps.nodeCfg,\n      _f = uProps.layout,\n      layout = _f === void 0 ? defaultLayout : _f,\n      _g = uProps.showMarker,\n      showMarker = _g === void 0 ? false : _g,\n      _h = uProps.showArrow,\n      showArrow = _h === void 0 ? true : _h,\n      _j = uProps.arrowType,\n      arrowType = _j === void 0 ? 'triangle' : _j,\n      minimapCfg = uProps.minimapCfg,\n      edgeCfg = uProps.edgeCfg,\n      markerStyle = uProps.markerStyle,\n      _k = uProps.nodeStateStyles,\n      nodeStateStyles = _k === void 0 ? defaultStateStyles : _k,\n      _l = uProps.edgeStateStyles,\n      edgeStateStyles = _l === void 0 ? defaultStateStyles : _l,\n      _m = uProps.autoFit,\n      autoFit = _m === void 0 ? true : _m,\n      onReady = uProps.onReady,\n      loading = uProps.loading,\n      loadingTemplate = uProps.loadingTemplate,\n      errorTemplate = uProps.errorTemplate;\n  var container = React.useRef(null);\n  var graph = React.useRef(null);\n  var graphId = getGraphId(graph);\n  useGraph(graphs[graphId], uProps, container);\n  var arrowOffset = (Array.isArray(nodeSize) ? nodeSize[1] : nodeSize) / 2;\n  useEffect(function () {\n    var graphSize = getGraphSize(width, height, container);\n\n    if (nodeType === 'icon-node') {\n      registerIconNode();\n    }\n\n    var graph = graphs[graphId];\n\n    if (!graph) {\n      graph = new G6.TreeGraph({\n        container: container.current,\n        width: graphSize[0],\n        height: graphSize[1],\n        linkCenter: true,\n        animate: animate,\n        modes: {\n          default: behaviors\n        },\n        defaultNode: {\n          type: nodeType,\n          size: nodeSize,\n          labelCfg: nodeLabelCfg,\n          markerStyle: markerStyle,\n          showMarker: showMarker\n        },\n        defaultEdge: {\n          type: edgeType\n        },\n        nodeStateStyles: nodeStateStyles,\n        edgeStateStyles: edgeStateStyles,\n        layout: layout,\n        fitView: autoFit\n      });\n      graphs[graphId] = graph;\n    }\n\n    graph.node(function (node) {\n      if (typeof nodeCfg === 'function') {\n        return nodeCfg(node, graph);\n      }\n\n      return {\n        style: __assign(__assign({}, defaultNodeStyle), nodeCfg === null || nodeCfg === void 0 ? void 0 : nodeCfg.style)\n      };\n    });\n    graph.edge(function (edge) {\n      if (typeof edgeCfg === 'function') {\n        return edgeCfg(edge, graph);\n      }\n\n      return __assign(__assign({}, edgeCfg), {\n        style: __assign(__assign({\n          stroke: '#91d5ff'\n        }, showArrow && getDefaultEdgeArrowCfg(arrowOffset, arrowType, '#91d5ff')), edgeCfg === null || edgeCfg === void 0 ? void 0 : edgeCfg.style)\n      });\n    });\n    processMinimap(minimapCfg, graph);\n    renderGraph(graph, data);\n\n    if (onReady) {\n      onReady(graph);\n    }\n\n    return function () {\n      if (graphs[graphId]) {\n        graphs[graphId].destroy();\n        delete graphs[graphId];\n      }\n    };\n  }, []);\n  return React.createElement(ErrorBoundary, {\n    errorTemplate: errorTemplate\n  }, loading && React.createElement(ChartLoading, {\n    loadingTemplate: loadingTemplate\n  }), React.createElement(\"div\", {\n    className: className,\n    style: style,\n    ref: container\n  }));\n};\n\nexport default OrganizationalGraph;","map":{"version":3,"sources":["C:/Users/Home/Desktop/cs-2005/node_modules/@ant-design/charts/es/obsolescent/graphs/organizationalGraph/index.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","useEffect","G6","ChartLoading","ErrorBoundary","useGraph","registerIconNode","defaultLabelStyle","defaultStateStyles","defaultNodeSize","getGraphSize","processMinimap","getGraphId","renderGraph","getDefaultEdgeArrowCfg","useProps","defaultNodeStyle","fill","stroke","radius","defaultLayout","type","direction","getId","d","id","getHeight","getWidth","getVGap","getHGap","defaultProps","animate","nodeType","edgeType","nodeSize","behaviors","nodeLabelCfg","style","layout","showMarker","showArrow","arrowType","nodeStateStyles","edgeStateStyles","autoFit","height","graphs","OrganizationalGraph","props","uProps","data","className","width","_a","_b","_c","_d","_e","nodeCfg","_f","_g","_h","_j","minimapCfg","edgeCfg","markerStyle","_k","_l","_m","onReady","loading","loadingTemplate","errorTemplate","container","useRef","graph","graphId","arrowOffset","Array","isArray","graphSize","TreeGraph","current","linkCenter","modes","default","defaultNode","size","labelCfg","defaultEdge","fitView","node","edge","destroy","createElement","ref"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useEffect } from 'react';\nimport G6 from '@antv/g6';\nimport ChartLoading from '../../../util/createLoading';\nimport { ErrorBoundary } from '../../../base';\nimport useGraph from '../../hooks/useGraph';\nimport { registerIconNode } from '../customItems';\nimport { defaultLabelStyle, defaultStateStyles, defaultNodeSize } from '../constants';\nimport { getGraphSize, processMinimap, getGraphId, renderGraph, getDefaultEdgeArrowCfg, useProps, } from '../utils';\nvar defaultNodeStyle = {\n    fill: '#91d5ff',\n    stroke: '#40a9ff',\n    radius: 2,\n};\nvar defaultLayout = {\n    type: 'compactBox',\n    direction: 'TB',\n    getId: function getId(d) {\n        return d.id;\n    },\n    getHeight: function getHeight() {\n        return 16;\n    },\n    getWidth: function getWidth() {\n        return 16;\n    },\n    getVGap: function getVGap() {\n        return 40;\n    },\n    getHGap: function getHGap() {\n        return 70;\n    },\n};\nvar defaultProps = {\n    animate: true,\n    nodeType: 'rect',\n    edgeType: 'polyline',\n    nodeSize: defaultNodeSize,\n    behaviors: ['drag-canvas', 'zoom-canvas'],\n    nodeLabelCfg: {\n        style: defaultLabelStyle,\n    },\n    layout: defaultLayout,\n    showMarker: false,\n    showArrow: true,\n    arrowType: 'triangle',\n    nodeStateStyles: defaultStateStyles,\n    edgeStateStyles: defaultStateStyles,\n    autoFit: true,\n    style: {\n        height: 'inherit',\n    },\n};\nvar graphs = {};\nvar OrganizationalGraph = function (props) {\n    var uProps = useProps(props, defaultProps);\n    var data = uProps.data, className = uProps.className, style = uProps.style, width = uProps.width, height = uProps.height, _a = uProps.animate, animate = _a === void 0 ? true : _a, _b = uProps.nodeType, nodeType = _b === void 0 ? 'rect' : _b, _c = uProps.edgeType, edgeType = _c === void 0 ? 'polyline' : _c, _d = uProps.nodeSize, nodeSize = _d === void 0 ? defaultNodeSize : _d, _e = uProps.behaviors, behaviors = _e === void 0 ? ['drag-canvas', 'zoom-canvas'] : _e, nodeLabelCfg = uProps.nodeLabelCfg, nodeCfg = uProps.nodeCfg, _f = uProps.layout, layout = _f === void 0 ? defaultLayout : _f, _g = uProps.showMarker, showMarker = _g === void 0 ? false : _g, _h = uProps.showArrow, showArrow = _h === void 0 ? true : _h, _j = uProps.arrowType, arrowType = _j === void 0 ? 'triangle' : _j, minimapCfg = uProps.minimapCfg, edgeCfg = uProps.edgeCfg, markerStyle = uProps.markerStyle, _k = uProps.nodeStateStyles, nodeStateStyles = _k === void 0 ? defaultStateStyles : _k, _l = uProps.edgeStateStyles, edgeStateStyles = _l === void 0 ? defaultStateStyles : _l, _m = uProps.autoFit, autoFit = _m === void 0 ? true : _m, onReady = uProps.onReady, loading = uProps.loading, loadingTemplate = uProps.loadingTemplate, errorTemplate = uProps.errorTemplate;\n    var container = React.useRef(null);\n    var graph = React.useRef(null);\n    var graphId = getGraphId(graph);\n    useGraph(graphs[graphId], uProps, container);\n    var arrowOffset = (Array.isArray(nodeSize) ? nodeSize[1] : nodeSize) / 2;\n    useEffect(function () {\n        var graphSize = getGraphSize(width, height, container);\n        if (nodeType === 'icon-node') {\n            registerIconNode();\n        }\n        var graph = graphs[graphId];\n        if (!graph) {\n            graph = new G6.TreeGraph({\n                container: container.current,\n                width: graphSize[0],\n                height: graphSize[1],\n                linkCenter: true,\n                animate: animate,\n                modes: {\n                    default: behaviors,\n                },\n                defaultNode: {\n                    type: nodeType,\n                    size: nodeSize,\n                    labelCfg: nodeLabelCfg,\n                    markerStyle: markerStyle,\n                    showMarker: showMarker,\n                },\n                defaultEdge: {\n                    type: edgeType,\n                },\n                nodeStateStyles: nodeStateStyles,\n                edgeStateStyles: edgeStateStyles,\n                layout: layout,\n                fitView: autoFit,\n            });\n            graphs[graphId] = graph;\n        }\n        graph.node(function (node) {\n            if (typeof nodeCfg === 'function') {\n                return nodeCfg(node, graph);\n            }\n            return {\n                style: __assign(__assign({}, defaultNodeStyle), nodeCfg === null || nodeCfg === void 0 ? void 0 : nodeCfg.style),\n            };\n        });\n        graph.edge(function (edge) {\n            if (typeof edgeCfg === 'function') {\n                return edgeCfg(edge, graph);\n            }\n            return __assign(__assign({}, edgeCfg), { style: __assign(__assign({ stroke: '#91d5ff' }, (showArrow && getDefaultEdgeArrowCfg(arrowOffset, arrowType, '#91d5ff'))), edgeCfg === null || edgeCfg === void 0 ? void 0 : edgeCfg.style) });\n        });\n        processMinimap(minimapCfg, graph);\n        renderGraph(graph, data);\n        if (onReady) {\n            onReady(graph);\n        }\n        return function () {\n            if (graphs[graphId]) {\n                graphs[graphId].destroy();\n                delete graphs[graphId];\n            }\n        };\n    }, []);\n    return (React.createElement(ErrorBoundary, { errorTemplate: errorTemplate },\n        loading && React.createElement(ChartLoading, { loadingTemplate: loadingTemplate }),\n        React.createElement(\"div\", { className: className, style: style, ref: container })));\n};\nexport default OrganizationalGraph;\n"]},"metadata":{},"sourceType":"module"}