{"ast":null,"code":"import { __spreadArrays } from \"tslib\";\nimport values from './values';\nimport memoize from './memoize';\nimport isString from './is-string';\nvar ctx;\n/**\n * 计算文本的宽度\n */\n\nexport default memoize(function (text, font) {\n  if (font === void 0) {\n    font = {};\n  }\n\n  var fontSize = font.fontSize,\n      fontFamily = font.fontFamily,\n      fontWeight = font.fontWeight,\n      fontStyle = font.fontStyle,\n      fontVariant = font.fontVariant;\n\n  if (!ctx) {\n    ctx = document.createElement('canvas').getContext('2d');\n  }\n\n  ctx.font = [fontStyle, fontVariant, fontWeight, fontSize + \"px\", fontFamily].join(' ');\n  return ctx.measureText(isString(text) ? text : '').width;\n}, function (text, font) {\n  if (font === void 0) {\n    font = {};\n  }\n\n  return __spreadArrays([text], values(font)).join('');\n});","map":{"version":3,"sources":["../src/measure-text-width.ts"],"names":[],"mappings":";AAAA,OAAO,MAAP,MAAmB,UAAnB;AACA,OAAO,OAAP,MAAoB,WAApB;AACA,OAAO,QAAP,MAAqB,aAArB;AAOA,IAAI,GAAJ;AAEA;;AAEG;;AACH,eAAe,OAAO,CACpB,UAAC,IAAD,EAAY,IAAZ,EAA2B;AAAf,MAAA,IAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,EAAA;AAAe;;AACjB,MAAA,QAAQ,GAAqD,IAAI,CAAzD,QAAR;AAAA,MAAU,UAAU,GAAyC,IAAI,CAA7C,UAApB;AAAA,MAAsB,UAAU,GAA6B,IAAI,CAAjC,UAAhC;AAAA,MAAkC,SAAS,GAAkB,IAAI,CAAtB,SAA3C;AAAA,MAA6C,WAAW,GAAK,IAAI,CAAT,WAAxD;;AACR,MAAI,CAAC,GAAL,EAAU;AACR,IAAA,GAAG,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,EAAiC,UAAjC,CAA4C,IAA5C,CAAN;AACD;;AACD,EAAA,GAAI,CAAC,IAAL,GAAY,CAAC,SAAD,EAAY,WAAZ,EAAyB,UAAzB,EAAwC,QAAQ,GAAA,IAAhD,EAAsD,UAAtD,EAAkE,IAAlE,CAAuE,GAAvE,CAAZ;AACA,SAAO,GAAI,CAAC,WAAL,CAAiB,QAAQ,CAAC,IAAD,CAAR,GAAiB,IAAjB,GAAwB,EAAzC,EAA6C,KAApD;AACD,CARmB,EASpB,UAAC,IAAD,EAAY,IAAZ,EAA2B;AAAf,MAAA,IAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,EAAA;AAAe;;AAAK,SAAA,cAAA,CAAA,CAAC,IAAD,CAAA,EAAU,MAAM,CAAC,IAAD,CAAhB,CAAA,CAAwB,IAAxB,CAA6B,EAA7B,CAAA;AAAgC,CAT5C,CAAtB","sourceRoot":"","sourcesContent":["import { __spreadArrays } from \"tslib\";\nimport values from './values';\nimport memoize from './memoize';\nimport isString from './is-string';\nvar ctx;\n/**\n * 计算文本的宽度\n */\nexport default memoize(function (text, font) {\n    if (font === void 0) { font = {}; }\n    var fontSize = font.fontSize, fontFamily = font.fontFamily, fontWeight = font.fontWeight, fontStyle = font.fontStyle, fontVariant = font.fontVariant;\n    if (!ctx) {\n        ctx = document.createElement('canvas').getContext('2d');\n    }\n    ctx.font = [fontStyle, fontVariant, fontWeight, fontSize + \"px\", fontFamily].join(' ');\n    return ctx.measureText(isString(text) ? text : '').width;\n}, function (text, font) {\n    if (font === void 0) { font = {}; }\n    return __spreadArrays([text], values(font)).join('');\n});\n//# sourceMappingURL=measure-text-width.js.map"]},"metadata":{},"sourceType":"module"}