{"ast":null,"code":"module.exports = equals;\n\nvar EPSILON = require('./epsilon');\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0];\n  var a1 = a[1];\n  var b0 = b[0];\n  var b1 = b[1];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}","map":{"version":3,"sources":["C:/Users/Home/Desktop/cs-2005/node_modules/gl-vec2/equals.js"],"names":["module","exports","equals","EPSILON","require","a","b","a0","a1","b0","b1","Math","abs","max"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,MAAjB;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAAC,WAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,MAAT,CAAgBG,CAAhB,EAAmBC,CAAnB,EAAsB;AACpB,MAAIC,EAAE,GAAGF,CAAC,CAAC,CAAD,CAAV;AACA,MAAIG,EAAE,GAAGH,CAAC,CAAC,CAAD,CAAV;AACA,MAAII,EAAE,GAAGH,CAAC,CAAC,CAAD,CAAV;AACA,MAAII,EAAE,GAAGJ,CAAC,CAAC,CAAD,CAAV;AACA,SAAQK,IAAI,CAACC,GAAL,CAASL,EAAE,GAAGE,EAAd,KAAqBN,OAAO,GAAGQ,IAAI,CAACE,GAAL,CAAS,GAAT,EAAcF,IAAI,CAACC,GAAL,CAASL,EAAT,CAAd,EAA4BI,IAAI,CAACC,GAAL,CAASH,EAAT,CAA5B,CAA/B,IACAE,IAAI,CAACC,GAAL,CAASJ,EAAE,GAAGE,EAAd,KAAqBP,OAAO,GAAGQ,IAAI,CAACE,GAAL,CAAS,GAAT,EAAcF,IAAI,CAACC,GAAL,CAASJ,EAAT,CAAd,EAA4BG,IAAI,CAACC,GAAL,CAASF,EAAT,CAA5B,CADvC;AAED","sourcesContent":["module.exports = equals\n\nvar EPSILON = require('./epsilon')\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0]\n  var a1 = a[1]\n  var b0 = b[0]\n  var b1 = b[1]\n  return (Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)))\n}\n"]},"metadata":{},"sourceType":"script"}