{"ast":null,"code":"import { createDotPattern } from './dot';\nimport { createLinePattern } from './line';\nimport { createSquarePattern } from './square';\n/**\n * 获取内置的 CanvasPattern 方法\n * @param options\n * @returns\n */\n\nexport function getCanvasPattern(options) {\n  var type = options.type,\n      cfg = options.cfg;\n  var pattern;\n\n  switch (type) {\n    case 'dot':\n      pattern = createDotPattern(cfg);\n      break;\n\n    case 'line':\n      pattern = createLinePattern(cfg);\n      break;\n\n    case 'square':\n      pattern = createSquarePattern(cfg);\n      break;\n\n    default:\n      break;\n  }\n\n  return pattern;\n}","map":{"version":3,"sources":["../../../src/utils/pattern/index.ts"],"names":[],"mappings":"AACA,SAAS,gBAAT,QAAiC,OAAjC;AACA,SAAS,iBAAT,QAAkC,QAAlC;AACA,SAAS,mBAAT,QAAoC,UAApC;AAgBA;;;;AAIG;;AACH,OAAM,SAAU,gBAAV,CAA2B,OAA3B,EAAiD;AAC7C,MAAA,IAAI,GAAU,OAAO,CAAjB,IAAJ;AAAA,MAAM,GAAG,GAAK,OAAO,CAAZ,GAAT;AAER,MAAI,OAAJ;;AAEA,UAAQ,IAAR;AACE,SAAK,KAAL;AACE,MAAA,OAAO,GAAG,gBAAgB,CAAC,GAAD,CAA1B;AACA;;AACF,SAAK,MAAL;AACE,MAAA,OAAO,GAAG,iBAAiB,CAAC,GAAD,CAA3B;AACA;;AACF,SAAK,QAAL;AACE,MAAA,OAAO,GAAG,mBAAmB,CAAC,GAAD,CAA7B;AACA;;AACF;AACE;AAXJ;;AAcA,SAAO,OAAP;AACD","sourcesContent":["import { DotPatternCfg, LinePatternCfg, SquarePatternCfg } from '../../types/pattern';\nimport { createDotPattern } from './dot';\nimport { createLinePattern } from './line';\nimport { createSquarePattern } from './square';\n\nexport type PatternOption =\n  | {\n      type: 'dot';\n      cfg?: DotPatternCfg;\n    }\n  | {\n      type: 'line';\n      cfg?: LinePatternCfg;\n    }\n  | {\n      type: 'square';\n      cfg?: SquarePatternCfg;\n    };\n\n/**\n * 获取内置的 CanvasPattern 方法\n * @param options\n * @returns\n */\nexport function getCanvasPattern(options: PatternOption): CanvasPattern | undefined {\n  const { type, cfg } = options;\n\n  let pattern;\n\n  switch (type) {\n    case 'dot':\n      pattern = createDotPattern(cfg);\n      break;\n    case 'line':\n      pattern = createLinePattern(cfg);\n      break;\n    case 'square':\n      pattern = createSquarePattern(cfg);\n      break;\n    default:\n      break;\n  }\n\n  return pattern;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}