{"ast":null,"code":"export const isObject = val => val !== null && typeof val === 'object';\nexport const clone = target => {\n  if (target === null) {\n    return target;\n  }\n\n  if (target instanceof Date) {\n    return new Date(target.getTime());\n  }\n\n  if (target instanceof Array) {\n    const cp = [];\n    target.forEach(v => {\n      cp.push(v);\n    });\n    return cp.map(n => clone(n));\n  }\n\n  if (typeof target === 'object' && target !== {}) {\n    const cp = Object.assign({}, target);\n    Object.keys(cp).forEach(k => {\n      cp[k] = clone(cp[k]);\n    });\n    return cp;\n  }\n\n  return target;\n};","map":{"version":3,"sources":["../../src/util/object.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,QAAQ,GAAI,GAAD,IACtB,GAAG,KAAK,IAAR,IAAgB,OAAO,GAAP,KAAe,QAD1B;AAGP,OAAO,MAAM,KAAK,GAAO,MAAJ,IAAoB;AACvC,MAAI,MAAM,KAAK,IAAf,EAAqB;AACnB,WAAO,MAAP;AACD;;AACD,MAAI,MAAM,YAAY,IAAtB,EAA4B;AAC1B,WAAO,IAAI,IAAJ,CAAS,MAAM,CAAC,OAAP,EAAT,CAAP;AACD;;AACD,MAAI,MAAM,YAAY,KAAtB,EAA6B;AAC3B,UAAM,EAAE,GAAG,EAAX;AACE,IAAA,MAAgB,CAAC,OAAjB,CAA0B,CAAD,IAAM;AAC/B,MAAA,EAAE,CAAC,IAAH,CAAQ,CAAR;AACD,KAFC;AAGF,WAAO,EAAE,CAAC,GAAH,CAAQ,CAAD,IAAY,KAAK,CAAM,CAAN,CAAxB,CAAP;AACD;;AACD,MAAI,OAAO,MAAP,KAAkB,QAAlB,IAA8B,MAAM,KAAK,EAA7C,EAAiD;AAC/C,UAAM,EAAE,GAAG,MAAA,CAAA,MAAA,CAAA,EAAA,EAAM,MAAN,CAAX;AAGA,IAAA,MAAM,CAAC,IAAP,CAAY,EAAZ,EAAgB,OAAhB,CAAyB,CAAD,IAAM;AAC5B,MAAA,EAAE,CAAC,CAAD,CAAF,GAAQ,KAAK,CAAM,EAAE,CAAC,CAAD,CAAR,CAAb;AACD,KAFD;AAGA,WAAO,EAAP;AACD;;AACD,SAAO,MAAP;AACD,CAxBM","sourceRoot":"","sourcesContent":["export const isObject = (val) => val !== null && typeof val === 'object';\nexport const clone = (target) => {\n    if (target === null) {\n        return target;\n    }\n    if (target instanceof Date) {\n        return new Date(target.getTime());\n    }\n    if (target instanceof Array) {\n        const cp = [];\n        target.forEach((v) => {\n            cp.push(v);\n        });\n        return cp.map((n) => clone(n));\n    }\n    if (typeof target === 'object' && target !== {}) {\n        const cp = Object.assign({}, target);\n        Object.keys(cp).forEach((k) => {\n            cp[k] = clone(cp[k]);\n        });\n        return cp;\n    }\n    return target;\n};\n//# sourceMappingURL=object.js.map"]},"metadata":{},"sourceType":"module"}