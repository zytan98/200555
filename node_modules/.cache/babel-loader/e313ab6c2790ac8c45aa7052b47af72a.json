{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { each } from '@antv/util';\nimport { geometry as geometryAdaptor } from '../../adaptor/geometries/base';\nimport { interaction, animation, theme, tooltip } from '../../adaptor/common';\nimport { PLOT_CONTAINER_OPTIONS } from '../../core/plot';\nimport { AXIS_META_CONFIG_KEYS } from '../../constant';\nimport { deepAssign, flow, pick } from '../../utils';\nimport { execPlotAdaptor } from './utils';\n/**\n * geometry 处理\n * @param params\n */\n\nfunction multiView(params) {\n  var chart = params.chart,\n      options = params.options;\n  var views = options.views,\n      legend = options.legend;\n  each(views, function (v) {\n    var region = v.region,\n        data = v.data,\n        meta = v.meta,\n        axes = v.axes,\n        coordinate = v.coordinate,\n        interactions = v.interactions,\n        annotations = v.annotations,\n        tooltip = v.tooltip,\n        geometries = v.geometries; // 1. 创建 view\n\n    var viewOfG2 = chart.createView({\n      region: region\n    }); // 2. data\n\n    viewOfG2.data(data); // 3. meta\n\n    var scales = {};\n\n    if (axes) {\n      each(axes, function (axis, field) {\n        scales[field] = pick(axis, AXIS_META_CONFIG_KEYS);\n      });\n    }\n\n    scales = deepAssign({}, meta, scales);\n    viewOfG2.scale(scales); // 4. x y axis\n\n    if (!axes) {\n      viewOfG2.axis(false);\n    } else {\n      each(axes, function (axis, field) {\n        viewOfG2.axis(field, axis);\n      });\n    } // 5. coordinate\n\n\n    viewOfG2.coordinate(coordinate); // 6. geometry\n\n    each(geometries, function (geometry) {\n      var ext = geometryAdaptor({\n        chart: viewOfG2,\n        options: geometry\n      }).ext; // adjust\n\n      var adjust = geometry.adjust;\n\n      if (adjust) {\n        ext.geometry.adjust(adjust);\n      }\n    }); // 7. interactions\n\n    each(interactions, function (interaction) {\n      if (interaction.enable === false) {\n        viewOfG2.removeInteraction(interaction.type);\n      } else {\n        viewOfG2.interaction(interaction.type, interaction.cfg);\n      }\n    }); // 8. annotations\n\n    each(annotations, function (annotation) {\n      viewOfG2.annotation()[annotation.type](__assign({}, annotation));\n    }); // 9. animation (先做动画)\n\n    if (typeof v.animation === 'boolean') {\n      viewOfG2.animate(false);\n    } else {\n      viewOfG2.animate(true); // 9.1 所有的 Geometry 都使用同一动画（各个图形如有区别，todo 自行覆盖）\n\n      each(viewOfG2.geometries, function (g) {\n        g.animate(v.animation);\n      });\n    }\n\n    if (tooltip) {\n      // 10. tooltip\n      viewOfG2.interaction('tooltip');\n      viewOfG2.tooltip(tooltip);\n    }\n  }); // legend\n\n  if (!legend) {\n    chart.legend(false);\n  } else {\n    each(legend, function (l, field) {\n      chart.legend(field, l);\n    });\n  } // tooltip\n\n\n  chart.tooltip(options.tooltip);\n  return params;\n}\n/**\n * 支持嵌套使用 g2plot 内置图表\n * @param params\n */\n\n\nfunction multiPlot(params) {\n  var chart = params.chart,\n      options = params.options;\n  var plots = options.plots;\n  each(plots, function (plot) {\n    var type = plot.type,\n        region = plot.region,\n        _a = plot.options,\n        options = _a === void 0 ? {} : _a;\n    var tooltip = options.tooltip;\n    var viewOfG2 = chart.createView(__assign({\n      region: region\n    }, pick(options, PLOT_CONTAINER_OPTIONS)));\n\n    if (tooltip) {\n      // 配置 tooltip 交互\n      viewOfG2.interaction('tooltip');\n    }\n\n    execPlotAdaptor(type, viewOfG2, options);\n  });\n  return params;\n}\n/**\n * 图适配器\n * @param chart\n * @param options\n */\n\n\nexport function adaptor(params) {\n  return flow(animation, // 多 view 的图，动画配置放到最前面\n  multiView, multiPlot, interaction, animation, theme, tooltip // ... 其他的 adaptor flow\n  )(params);\n}","map":{"version":3,"sources":["../../../src/plots/mix/adaptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { each } from '@antv/util';\nimport { Geometry } from '@antv/g2';\nimport { geometry as geometryAdaptor } from '../../adaptor/geometries/base';\nimport { interaction, animation, theme, tooltip } from '../../adaptor/common';\nimport { Params } from '../../core/adaptor';\nimport { PLOT_CONTAINER_OPTIONS } from '../../core/plot';\nimport { AXIS_META_CONFIG_KEYS } from '../../constant';\nimport { deepAssign, flow, pick } from '../../utils';\nimport { Axis } from '../../types/axis';\nimport { Legend } from '../../types/legend';\nimport { Interaction } from '../../types/interaction';\nimport { MixOptions, IView, IGeometry } from './types';\nimport { execPlotAdaptor } from './utils';\n\n/**\n * geometry 处理\n * @param params\n */\nfunction multiView(params: Params<MixOptions>): Params<MixOptions> {\n  const { chart, options } = params;\n  const { views, legend } = options;\n\n  each(views, (v: IView) => {\n    const { region, data, meta, axes, coordinate, interactions, annotations, tooltip, geometries } = v;\n\n    // 1. 创建 view\n    const viewOfG2 = chart.createView({\n      region,\n    });\n\n    // 2. data\n    viewOfG2.data(data);\n\n    // 3. meta\n    let scales: Record<string, any> = {};\n    if (axes) {\n      each(axes, (axis: Axis, field: string) => {\n        scales[field] = pick(axis, AXIS_META_CONFIG_KEYS);\n      });\n    }\n\n    scales = deepAssign({}, meta, scales);\n    viewOfG2.scale(scales);\n\n    // 4. x y axis\n    if (!axes) {\n      viewOfG2.axis(false);\n    } else {\n      each(axes, (axis: Axis, field: string) => {\n        viewOfG2.axis(field, axis);\n      });\n    }\n\n    // 5. coordinate\n    viewOfG2.coordinate(coordinate);\n\n    // 6. geometry\n    each(geometries, (geometry: IGeometry) => {\n      const { ext } = geometryAdaptor({\n        chart: viewOfG2,\n        options: geometry,\n      });\n\n      // adjust\n      const { adjust } = geometry;\n      if (adjust) {\n        ext.geometry.adjust(adjust);\n      }\n    });\n\n    // 7. interactions\n    each(interactions, (interaction: Interaction) => {\n      if (interaction.enable === false) {\n        viewOfG2.removeInteraction(interaction.type);\n      } else {\n        viewOfG2.interaction(interaction.type, interaction.cfg);\n      }\n    });\n\n    // 8. annotations\n    each(annotations, (annotation) => {\n      viewOfG2.annotation()[annotation.type]({\n        ...annotation,\n      });\n    });\n\n    // 9. animation (先做动画)\n    if (typeof v.animation === 'boolean') {\n      viewOfG2.animate(false);\n    } else {\n      viewOfG2.animate(true);\n      // 9.1 所有的 Geometry 都使用同一动画（各个图形如有区别，todo 自行覆盖）\n      each(viewOfG2.geometries, (g: Geometry) => {\n        g.animate(v.animation);\n      });\n    }\n\n    if (tooltip) {\n      // 10. tooltip\n      viewOfG2.interaction('tooltip');\n      viewOfG2.tooltip(tooltip);\n    }\n  });\n\n  // legend\n  if (!legend) {\n    chart.legend(false);\n  } else {\n    each(legend, (l: Legend, field: string) => {\n      chart.legend(field, l);\n    });\n  }\n\n  // tooltip\n  chart.tooltip(options.tooltip);\n  return params;\n}\n\n/**\n * 支持嵌套使用 g2plot 内置图表\n * @param params\n */\nfunction multiPlot(params: Params<MixOptions>): Params<MixOptions> {\n  const { chart, options } = params;\n  const { plots } = options;\n\n  each(plots, (plot) => {\n    const { type, region, options = {} } = plot;\n    const { tooltip } = options;\n\n    const viewOfG2 = chart.createView({ region, ...pick(options, PLOT_CONTAINER_OPTIONS) });\n    if (tooltip) {\n      // 配置 tooltip 交互\n      viewOfG2.interaction('tooltip');\n    }\n\n    execPlotAdaptor(type, viewOfG2, options);\n  });\n\n  return params;\n}\n\n/**\n * 图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<MixOptions>) {\n  return flow(\n    animation, // 多 view 的图，动画配置放到最前面\n    multiView,\n    multiPlot,\n    interaction,\n    animation,\n    theme,\n    tooltip\n    // ... 其他的 adaptor flow\n  )(params);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}