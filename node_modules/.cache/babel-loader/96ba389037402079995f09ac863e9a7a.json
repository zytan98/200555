{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { each, findIndex, get, find, isObject, every, isEqual, isBoolean } from '@antv/util';\nimport { theme as commonTheme, animation as commonAnimation, scale, interaction as commonInteraction, annotation as commonAnnotation, limitInPlot as commonLimitInPlot } from '../../adaptor/common';\nimport { percent } from '../../utils/transform/percent';\nimport { flow, deepAssign } from '../../utils';\nimport { findViewById } from '../../utils/view';\nimport { isColumn, getYAxisWithDefault, getGeometryOption, transformObjectToArray } from './util/option';\nimport { getViewLegendItems } from './util/legend';\nimport { drawSingleGeometry } from './util/geometry';\nimport { doSliderFilter } from './util/render-sider';\nimport { AxisType, DualAxesGeometry } from './types';\nimport { LEFT_AXES_VIEW, RIGHT_AXES_VIEW } from './constant';\n/**\n * transformOptions，双轴图整体的取参逻辑如下\n * 1. get index getOptions: 对应的是默认的图表参数，如 appendPadding，syncView 等\n * 2. get adpator transformOption: 对应的是双轴图的默认参数，deepAssign 优先级从低到高如下\n *    2.1 defaultoption，如 tooltip，legend\n *    2.2 用户填写 options\n *    2.3 根据用户填写的 options 补充的数组型 options，如 yaxis，GeometryOption，因为 deepAssign 无法 assign 数组\n *\n * @param params\n */\n\nexport function transformOptions(params) {\n  var _a;\n\n  var options = params.options;\n  var _b = options.geometryOptions,\n      geometryOptions = _b === void 0 ? [] : _b,\n      xField = options.xField,\n      yField = options.yField;\n  var allLine = every(geometryOptions, function (_a) {\n    var geometry = _a.geometry;\n    return geometry === DualAxesGeometry.Line || geometry === undefined;\n  });\n  return deepAssign({}, {\n    options: {\n      geometryOptions: [],\n      meta: (_a = {}, _a[xField] = {\n        // 默认为 cat 类型\n        type: 'cat',\n        // x 轴一定是同步 scale 的\n        sync: true,\n        // 如果有没有柱子，则\n        range: allLine ? [0, 1] : undefined\n      }, _a),\n      tooltip: {\n        showMarkers: allLine,\n        // 存在柱状图，不显示 crosshairs\n        showCrosshairs: allLine,\n        shared: true,\n        crosshairs: {\n          type: 'x'\n        }\n      },\n      interactions: !allLine ? [{\n        type: 'legend-visible-filter'\n      }, {\n        type: 'active-region'\n      }] : [{\n        type: 'legend-visible-filter'\n      }],\n      legend: {\n        position: 'top-left'\n      }\n    }\n  }, params, {\n    options: {\n      // yAxis\n      yAxis: transformObjectToArray(yField, options.yAxis),\n      // geometryOptions\n      geometryOptions: [getGeometryOption(xField, yField[0], geometryOptions[0]), getGeometryOption(xField, yField[1], geometryOptions[1])],\n      // annotations\n      annotations: transformObjectToArray(yField, options.annotations)\n    }\n  });\n}\n/**\n * 创建 双轴图 中绘制图形的 view，提前创建是因为 theme 适配器的需要\n * @param params\n */\n\nfunction createViews(params) {\n  var _a, _b;\n\n  var chart = params.chart,\n      options = params.options;\n  var geometryOptions = options.geometryOptions;\n  var SORT_MAP = {\n    line: 0,\n    column: 1\n  }; // 包含配置，id，数据的结构\n\n  var geometries = [{\n    type: (_a = geometryOptions[0]) === null || _a === void 0 ? void 0 : _a.geometry,\n    id: LEFT_AXES_VIEW\n  }, {\n    type: (_b = geometryOptions[1]) === null || _b === void 0 ? void 0 : _b.geometry,\n    id: RIGHT_AXES_VIEW\n  }]; // 将线的 view 放置在更上一层，防止线柱遮挡。先柱后先\n\n  geometries.sort(function (a, b) {\n    return -SORT_MAP[a.type] + SORT_MAP[b.type];\n  }).forEach(function (g) {\n    return chart.createView({\n      id: g.id\n    });\n  });\n  return params;\n}\n/**\n * 绘制图形\n * @param params\n */\n\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xField = options.xField,\n      yField = options.yField,\n      geometryOptions = options.geometryOptions,\n      data = options.data,\n      tooltip = options.tooltip; // 包含配置，id，数据的结构\n\n  var geometries = [__assign(__assign({}, geometryOptions[0]), {\n    id: LEFT_AXES_VIEW,\n    data: data[0],\n    yField: yField[0]\n  }), __assign(__assign({}, geometryOptions[1]), {\n    id: RIGHT_AXES_VIEW,\n    data: data[1],\n    yField: yField[1]\n  })];\n  geometries.forEach(function (geometry) {\n    var id = geometry.id,\n        data = geometry.data,\n        yField = geometry.yField; // 百分比柱状图需要额外处理一次数据\n\n    var isPercent = isColumn(geometry) && geometry.isPercent;\n    var formatData = isPercent ? percent(data, yField, xField, yField) : data;\n    var view = findViewById(chart, id).data(formatData);\n    var tooltipOptions = isPercent ? __assign({\n      formatter: function (datum) {\n        return {\n          name: datum[geometry.seriesField] || yField,\n          value: (Number(datum[yField]) * 100).toFixed(2) + '%'\n        };\n      }\n    }, tooltip) : tooltip; // 绘制图形\n\n    drawSingleGeometry({\n      chart: view,\n      options: {\n        xField: xField,\n        yField: yField,\n        tooltip: tooltipOptions,\n        geometryOption: geometry\n      }\n    });\n  });\n  return params;\n}\n\nexport function color(params) {\n  var _a;\n\n  var chart = params.chart,\n      options = params.options;\n  var geometryOptions = options.geometryOptions;\n  var themeColor = ((_a = chart.getTheme()) === null || _a === void 0 ? void 0 : _a.colors10) || [];\n  var start = 0;\n  /* 为 geometry 添加默认 color。\n   * 1. 若 geometryOptions 存在 color，则在 drawGeometry 时已处理\n   * 2. 若 不存在 color，获取 Geometry group scales个数，在 theme color 10 中提取\n   * 3. 为防止 group 过多导致右色板无值或值很少，右 view 面板在依次提取剩下的 N 个 后再 concat 一次 themeColor\n   * 4. 为简便获取 Geometry group scales个数，在绘制完后再执行 color\n   * 5. 考虑之后将不同 view 使用同一个色板的需求沉淀到 g2\n   */\n\n  chart.once('beforepaint', function () {\n    each(geometryOptions, function (geometryOption, index) {\n      var view = findViewById(chart, index === 0 ? LEFT_AXES_VIEW : RIGHT_AXES_VIEW);\n      if (geometryOption.color) return;\n      var groupScale = view.getGroupScales();\n      var count = get(groupScale, [0, 'values', 'length'], 1);\n      var color = themeColor.slice(start, start + count).concat(index === 0 ? [] : themeColor);\n      view.geometries.forEach(function (geometry) {\n        if (geometryOption.seriesField) {\n          geometry.color(geometryOption.seriesField, color);\n        } else {\n          geometry.color(color[0]);\n        }\n      });\n      start += count;\n    });\n    chart.render(true);\n  });\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\n\nexport function meta(params) {\n  var _a, _b;\n\n  var chart = params.chart,\n      options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField;\n  scale((_a = {}, _a[xField] = xAxis, _a[yField[0]] = yAxis[0], _a))(deepAssign({}, params, {\n    chart: findViewById(chart, LEFT_AXES_VIEW)\n  }));\n  scale((_b = {}, _b[xField] = xAxis, _b[yField[1]] = yAxis[1], _b))(deepAssign({}, params, {\n    chart: findViewById(chart, RIGHT_AXES_VIEW)\n  }));\n  return params;\n}\n/**\n * axis 配置\n * @param params\n */\n\nexport function axis(params) {\n  var chart = params.chart,\n      options = params.options;\n  var leftView = findViewById(chart, LEFT_AXES_VIEW);\n  var rightView = findViewById(chart, RIGHT_AXES_VIEW);\n  var xField = options.xField,\n      yField = options.yField,\n      xAxis = options.xAxis,\n      yAxis = options.yAxis;\n  chart.axis(xField, false);\n  chart.axis(yField[0], false);\n  chart.axis(yField[1], false); // 左 View\n\n  leftView.axis(xField, xAxis);\n  leftView.axis(yField[0], getYAxisWithDefault(yAxis[0], AxisType.Left)); // 右 Y 轴\n\n  rightView.axis(xField, false);\n  rightView.axis(yField[1], getYAxisWithDefault(yAxis[1], AxisType.Right));\n  return params;\n}\n/**\n * tooltip 配置\n * @param params\n */\n\nexport function tooltip(params) {\n  var chart = params.chart,\n      options = params.options;\n  var tooltip = options.tooltip;\n  var leftView = findViewById(chart, LEFT_AXES_VIEW);\n  var rightView = findViewById(chart, RIGHT_AXES_VIEW); // tooltip 经过 getDefaultOption 处理后，一定不为 undefined\n\n  chart.tooltip(tooltip); // 在 view 上添加 tooltip，使得 shared 和 interaction active-region 起作用\n  // view 应该继承 chart 里的 shared，但是从表现看来，继承有点问题\n\n  leftView.tooltip({\n    shared: true\n  });\n  rightView.tooltip({\n    shared: true\n  });\n  return params;\n}\n/**\n * interaction 配置\n * @param params\n */\n\nexport function interaction(params) {\n  var chart = params.chart;\n  commonInteraction(deepAssign({}, params, {\n    chart: findViewById(chart, LEFT_AXES_VIEW)\n  }));\n  commonInteraction(deepAssign({}, params, {\n    chart: findViewById(chart, RIGHT_AXES_VIEW)\n  }));\n  return params;\n}\n/**\n * annotation 配置\n * @param params\n */\n\nexport function annotation(params) {\n  var chart = params.chart,\n      options = params.options;\n  var annotations = options.annotations;\n  var a1 = get(annotations, [0]);\n  var a2 = get(annotations, [1]);\n  commonAnnotation(a1)(deepAssign({}, params, {\n    chart: findViewById(chart, LEFT_AXES_VIEW),\n    options: {\n      annotations: a1\n    }\n  }));\n  commonAnnotation(a2)(deepAssign({}, params, {\n    chart: findViewById(chart, RIGHT_AXES_VIEW),\n    options: {\n      annotations: a2\n    }\n  }));\n  return params;\n}\nexport function theme(params) {\n  var chart = params.chart;\n  /*\n   * 双轴图中，部分组件是绘制在子 view 层（例如 axis，line），部分组件是绘制在 chart （例如 legend)\n   * 为 chart 和 子 view 均注册 theme，使其自行遵循 G2 theme geometry > view > chart 进行渲染。\n   */\n\n  commonTheme(deepAssign({}, params, {\n    chart: findViewById(chart, LEFT_AXES_VIEW)\n  }));\n  commonTheme(deepAssign({}, params, {\n    chart: findViewById(chart, RIGHT_AXES_VIEW)\n  }));\n  commonTheme(params);\n  return params;\n}\nexport function animation(params) {\n  var chart = params.chart;\n  commonAnimation(deepAssign({}, params, {\n    chart: findViewById(chart, LEFT_AXES_VIEW)\n  }));\n  commonAnimation(deepAssign({}, params, {\n    chart: findViewById(chart, RIGHT_AXES_VIEW)\n  }));\n  return params;\n}\n/**\n * 双轴图 limitInPlot\n * @param params\n */\n\nexport function limitInPlot(params) {\n  var chart = params.chart,\n      options = params.options;\n  var yAxis = options.yAxis;\n  commonLimitInPlot(deepAssign({}, params, {\n    chart: findViewById(chart, LEFT_AXES_VIEW),\n    options: {\n      yAxis: yAxis[0]\n    }\n  }));\n  commonLimitInPlot(deepAssign({}, params, {\n    chart: findViewById(chart, RIGHT_AXES_VIEW),\n    options: {\n      yAxis: yAxis[1]\n    }\n  }));\n  return params;\n}\n/**\n * legend 配置\n * 使用 custom，便于和类似于分组柱状图-单折线图的逻辑统一\n * @param params\n */\n\nexport function legend(params) {\n  var chart = params.chart,\n      options = params.options;\n  var legend = options.legend,\n      geometryOptions = options.geometryOptions,\n      yField = options.yField,\n      data = options.data;\n  var leftView = findViewById(chart, LEFT_AXES_VIEW);\n  var rightView = findViewById(chart, RIGHT_AXES_VIEW);\n\n  if (legend === false) {\n    chart.legend(false);\n  } else if (isObject(legend) && legend.custom === true) {\n    chart.legend(legend);\n  } else {\n    var leftLegend_1 = get(geometryOptions, [0, 'legend'], legend);\n    var rightLegend_1 = get(geometryOptions, [1, 'legend'], legend); // 均使用自定义图例\n\n    chart.once('beforepaint', function () {\n      var leftItems = data[0].length ? getViewLegendItems({\n        view: leftView,\n        geometryOption: geometryOptions[0],\n        yField: yField[0],\n        legend: leftLegend_1\n      }) : [];\n      var rightItems = data[1].length ? getViewLegendItems({\n        view: rightView,\n        geometryOption: geometryOptions[1],\n        yField: yField[1],\n        legend: rightLegend_1\n      }) : [];\n      chart.legend(deepAssign({}, legend, {\n        custom: true,\n        // todo 修改类型定义\n        // @ts-ignore\n        items: leftItems.concat(rightItems)\n      }));\n    });\n\n    if (geometryOptions[0].seriesField) {\n      leftView.legend(geometryOptions[0].seriesField, leftLegend_1);\n    }\n\n    if (geometryOptions[1].seriesField) {\n      rightView.legend(geometryOptions[1].seriesField, rightLegend_1);\n    } // 自定义图例交互\n\n\n    chart.on('legend-item:click', function (evt) {\n      var delegateObject = get(evt, 'gEvent.delegateObject', {});\n\n      if (delegateObject && delegateObject.item) {\n        var _a = delegateObject.item,\n            field_1 = _a.value,\n            isGeometry = _a.isGeometry,\n            viewId = _a.viewId; // geometry 的时候，直接使用 view.changeVisible\n\n        if (isGeometry) {\n          var idx = findIndex(yField, function (yF) {\n            return yF === field_1;\n          });\n\n          if (idx > -1) {\n            var geometries = get(findViewById(chart, viewId), 'geometries');\n            each(geometries, function (g) {\n              g.changeVisible(!delegateObject.item.unchecked);\n            });\n          }\n        } else {\n          var legendItem_1 = get(chart.getController('legend'), 'option.items', []); // 分组柱线图\n\n          each(chart.views, function (view) {\n            // 单折柱图\n            var groupScale = view.getGroupScales();\n            each(groupScale, function (scale) {\n              if (scale.values && scale.values.indexOf(field_1) > -1) {\n                view.filter(scale.field, function (value) {\n                  var curLegendItem = find(legendItem_1, function (item) {\n                    return item.value === value;\n                  }); // 使用 legend 中的 unchecked 来判断，使得支持关闭多个图例\n\n                  return !curLegendItem.unchecked;\n                });\n              }\n            });\n            chart.render(true);\n          });\n        }\n      }\n    });\n  }\n\n  return params;\n}\n/**\n * 双轴图 slider 适配器\n * @param params\n */\n\nexport function slider(params) {\n  var chart = params.chart,\n      options = params.options;\n  var slider = options.slider;\n  var leftView = findViewById(chart, LEFT_AXES_VIEW);\n  var rightView = findViewById(chart, RIGHT_AXES_VIEW);\n\n  if (slider) {\n    // 左 View\n    leftView.option('slider', slider); // 监听左侧 slider 改变事件， 同步右侧 View 视图\n\n    leftView.on('slider:valuechanged', function (evt) {\n      var _a = evt.event,\n          value = _a.value,\n          originValue = _a.originValue;\n\n      if (isEqual(value, originValue)) {\n        return;\n      }\n\n      doSliderFilter(rightView, value);\n    });\n    chart.once('afterpaint', function () {\n      // 初始化数据，配置默认值时需要同步\n      if (!isBoolean(slider)) {\n        var start = slider.start,\n            end = slider.end;\n\n        if (start || end) {\n          doSliderFilter(rightView, [start, end]);\n        }\n      }\n    });\n  }\n\n  return params;\n}\n/**\n * 双折线图适配器\n * @param chart\n * @param options\n */\n\nexport function adaptor(params) {\n  // transformOptions 一定在最前面处理；color legend 使用了 beforepaint，为便于理解放在最后面\n  return flow(transformOptions, createViews, // 主题靠前设置，作为最低优先级\n  theme, geometry, meta, axis, limitInPlot, tooltip, interaction, annotation, animation, color, legend, slider)(params);\n}","map":{"version":3,"sources":["../../../src/plots/dual-axes/adaptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { each, findIndex, get, find, isObject, every, isEqual, isBoolean } from '@antv/util';\nimport { Scale, Types, Event } from '@antv/g2';\nimport {\n  theme as commonTheme,\n  animation as commonAnimation,\n  scale,\n  interaction as commonInteraction,\n  annotation as commonAnnotation,\n  limitInPlot as commonLimitInPlot,\n} from '../../adaptor/common';\nimport { percent } from '../../utils/transform/percent';\nimport { Params } from '../../core/adaptor';\nimport { Datum } from '../../types';\nimport { flow, deepAssign } from '../../utils';\nimport { findViewById } from '../../utils/view';\nimport { isColumn, getYAxisWithDefault, getGeometryOption, transformObjectToArray } from './util/option';\nimport { getViewLegendItems } from './util/legend';\nimport { drawSingleGeometry } from './util/geometry';\nimport { doSliderFilter } from './util/render-sider';\nimport { DualAxesOptions, AxisType, DualAxesGeometry } from './types';\nimport { LEFT_AXES_VIEW, RIGHT_AXES_VIEW } from './constant';\n\n/**\n * transformOptions，双轴图整体的取参逻辑如下\n * 1. get index getOptions: 对应的是默认的图表参数，如 appendPadding，syncView 等\n * 2. get adpator transformOption: 对应的是双轴图的默认参数，deepAssign 优先级从低到高如下\n *    2.1 defaultoption，如 tooltip，legend\n *    2.2 用户填写 options\n *    2.3 根据用户填写的 options 补充的数组型 options，如 yaxis，GeometryOption，因为 deepAssign 无法 assign 数组\n *\n * @param params\n */\nexport function transformOptions(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { options } = params;\n  const { geometryOptions = [], xField, yField } = options;\n  const allLine = every(\n    geometryOptions,\n    ({ geometry }) => geometry === DualAxesGeometry.Line || geometry === undefined\n  );\n  return deepAssign(\n    {},\n    {\n      options: {\n        geometryOptions: [],\n        meta: {\n          [xField]: {\n            // 默认为 cat 类型\n            type: 'cat',\n            // x 轴一定是同步 scale 的\n            sync: true,\n            // 如果有没有柱子，则\n            range: allLine ? [0, 1] : undefined,\n          },\n        },\n        tooltip: {\n          showMarkers: allLine,\n          // 存在柱状图，不显示 crosshairs\n          showCrosshairs: allLine,\n          shared: true,\n          crosshairs: {\n            type: 'x',\n          },\n        },\n        interactions: !allLine\n          ? [{ type: 'legend-visible-filter' }, { type: 'active-region' }]\n          : [{ type: 'legend-visible-filter' }],\n        legend: {\n          position: 'top-left',\n        },\n      },\n    },\n    params,\n    {\n      options: {\n        // yAxis\n        yAxis: transformObjectToArray(yField, options.yAxis),\n        // geometryOptions\n        geometryOptions: [\n          getGeometryOption(xField, yField[0], geometryOptions[0]),\n          getGeometryOption(xField, yField[1], geometryOptions[1]),\n        ],\n        // annotations\n        annotations: transformObjectToArray(yField, options.annotations),\n      },\n    }\n  );\n}\n\n/**\n * 创建 双轴图 中绘制图形的 view，提前创建是因为 theme 适配器的需要\n * @param params\n */\nfunction createViews(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { geometryOptions } = options;\n\n  const SORT_MAP = { line: 0, column: 1 };\n\n  // 包含配置，id，数据的结构\n  const geometries = [\n    { type: geometryOptions[0]?.geometry, id: LEFT_AXES_VIEW },\n    { type: geometryOptions[1]?.geometry, id: RIGHT_AXES_VIEW },\n  ];\n\n  // 将线的 view 放置在更上一层，防止线柱遮挡。先柱后先\n  geometries.sort((a, b) => -SORT_MAP[a.type] + SORT_MAP[b.type]).forEach((g) => chart.createView({ id: g.id }));\n\n  return params;\n}\n\n/**\n * 绘制图形\n * @param params\n */\nfunction geometry(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { xField, yField, geometryOptions, data, tooltip } = options;\n\n  // 包含配置，id，数据的结构\n  const geometries = [\n    { ...geometryOptions[0], id: LEFT_AXES_VIEW, data: data[0], yField: yField[0] },\n    { ...geometryOptions[1], id: RIGHT_AXES_VIEW, data: data[1], yField: yField[1] },\n  ];\n\n  geometries.forEach((geometry) => {\n    const { id, data, yField } = geometry;\n    // 百分比柱状图需要额外处理一次数据\n    const isPercent = isColumn(geometry) && geometry.isPercent;\n    const formatData = isPercent ? percent(data, yField, xField, yField) : data;\n    const view = findViewById(chart, id).data(formatData);\n\n    const tooltipOptions = isPercent\n      ? {\n          formatter: (datum: Datum) => ({\n            name: datum[geometry.seriesField] || yField,\n            value: (Number(datum[yField]) * 100).toFixed(2) + '%',\n          }),\n          ...tooltip,\n        }\n      : tooltip;\n\n    // 绘制图形\n    drawSingleGeometry({\n      chart: view,\n      options: {\n        xField,\n        yField,\n        tooltip: tooltipOptions,\n        geometryOption: geometry,\n      },\n    });\n  });\n  return params;\n}\n\nexport function color(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { geometryOptions } = options;\n  const themeColor = chart.getTheme()?.colors10 || [];\n\n  let start = 0;\n  /* 为 geometry 添加默认 color。\n   * 1. 若 geometryOptions 存在 color，则在 drawGeometry 时已处理\n   * 2. 若 不存在 color，获取 Geometry group scales个数，在 theme color 10 中提取\n   * 3. 为防止 group 过多导致右色板无值或值很少，右 view 面板在依次提取剩下的 N 个 后再 concat 一次 themeColor\n   * 4. 为简便获取 Geometry group scales个数，在绘制完后再执行 color\n   * 5. 考虑之后将不同 view 使用同一个色板的需求沉淀到 g2\n   */\n  chart.once('beforepaint', () => {\n    each(geometryOptions, (geometryOption, index) => {\n      const view = findViewById(chart, index === 0 ? LEFT_AXES_VIEW : RIGHT_AXES_VIEW);\n      if (geometryOption.color) return;\n      const groupScale = view.getGroupScales();\n      const count = get(groupScale, [0, 'values', 'length'], 1);\n      const color = themeColor.slice(start, start + count).concat(index === 0 ? [] : themeColor);\n      view.geometries.forEach((geometry) => {\n        if (geometryOption.seriesField) {\n          geometry.color(geometryOption.seriesField, color);\n        } else {\n          geometry.color(color[0]);\n        }\n      });\n      start += count;\n    });\n    chart.render(true);\n  });\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  scale({\n    [xField]: xAxis,\n    [yField[0]]: yAxis[0],\n  })(deepAssign({}, params, { chart: findViewById(chart, LEFT_AXES_VIEW) }));\n\n  scale({\n    [xField]: xAxis,\n    [yField[1]]: yAxis[1],\n  })(deepAssign({}, params, { chart: findViewById(chart, RIGHT_AXES_VIEW) }));\n\n  return params;\n}\n\n/**\n * axis 配置\n * @param params\n */\nexport function axis(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const leftView = findViewById(chart, LEFT_AXES_VIEW);\n  const rightView = findViewById(chart, RIGHT_AXES_VIEW);\n  const { xField, yField, xAxis, yAxis } = options;\n\n  chart.axis(xField, false);\n  chart.axis(yField[0], false);\n  chart.axis(yField[1], false);\n\n  // 左 View\n  leftView.axis(xField, xAxis);\n  leftView.axis(yField[0], getYAxisWithDefault(yAxis[0], AxisType.Left));\n\n  // 右 Y 轴\n  rightView.axis(xField, false);\n  rightView.axis(yField[1], getYAxisWithDefault(yAxis[1], AxisType.Right));\n\n  return params;\n}\n\n/**\n * tooltip 配置\n * @param params\n */\nexport function tooltip(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { tooltip } = options;\n  const leftView = findViewById(chart, LEFT_AXES_VIEW);\n  const rightView = findViewById(chart, RIGHT_AXES_VIEW);\n  // tooltip 经过 getDefaultOption 处理后，一定不为 undefined\n  chart.tooltip(tooltip);\n  // 在 view 上添加 tooltip，使得 shared 和 interaction active-region 起作用\n  // view 应该继承 chart 里的 shared，但是从表现看来，继承有点问题\n  leftView.tooltip({\n    shared: true,\n  });\n  rightView.tooltip({\n    shared: true,\n  });\n  return params;\n}\n\n/**\n * interaction 配置\n * @param params\n */\nexport function interaction(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart } = params;\n\n  commonInteraction(deepAssign({}, params, { chart: findViewById(chart, LEFT_AXES_VIEW) }));\n  commonInteraction(deepAssign({}, params, { chart: findViewById(chart, RIGHT_AXES_VIEW) }));\n\n  return params;\n}\n\n/**\n * annotation 配置\n * @param params\n */\nexport function annotation(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { annotations } = options;\n\n  const a1 = get(annotations, [0]);\n  const a2 = get(annotations, [1]);\n\n  commonAnnotation(a1)(\n    deepAssign({}, params, {\n      chart: findViewById(chart, LEFT_AXES_VIEW),\n      options: {\n        annotations: a1,\n      },\n    })\n  );\n  commonAnnotation(a2)(\n    deepAssign({}, params, {\n      chart: findViewById(chart, RIGHT_AXES_VIEW),\n      options: {\n        annotations: a2,\n      },\n    })\n  );\n  return params;\n}\n\nexport function theme(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart } = params;\n\n  /*\n   * 双轴图中，部分组件是绘制在子 view 层（例如 axis，line），部分组件是绘制在 chart （例如 legend)\n   * 为 chart 和 子 view 均注册 theme，使其自行遵循 G2 theme geometry > view > chart 进行渲染。\n   */\n  commonTheme(deepAssign({}, params, { chart: findViewById(chart, LEFT_AXES_VIEW) }));\n  commonTheme(deepAssign({}, params, { chart: findViewById(chart, RIGHT_AXES_VIEW) }));\n  commonTheme(params);\n\n  return params;\n}\n\nexport function animation(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart } = params;\n\n  commonAnimation(deepAssign({}, params, { chart: findViewById(chart, LEFT_AXES_VIEW) }));\n  commonAnimation(deepAssign({}, params, { chart: findViewById(chart, RIGHT_AXES_VIEW) }));\n\n  return params;\n}\n\n/**\n * 双轴图 limitInPlot\n * @param params\n */\nexport function limitInPlot(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { yAxis } = options;\n\n  commonLimitInPlot(\n    deepAssign({}, params, {\n      chart: findViewById(chart, LEFT_AXES_VIEW),\n      options: {\n        yAxis: yAxis[0],\n      },\n    })\n  );\n\n  commonLimitInPlot(\n    deepAssign({}, params, {\n      chart: findViewById(chart, RIGHT_AXES_VIEW),\n      options: {\n        yAxis: yAxis[1],\n      },\n    })\n  );\n\n  return params;\n}\n\n/**\n * legend 配置\n * 使用 custom，便于和类似于分组柱状图-单折线图的逻辑统一\n * @param params\n */\nexport function legend(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { legend, geometryOptions, yField, data } = options;\n  const leftView = findViewById(chart, LEFT_AXES_VIEW);\n  const rightView = findViewById(chart, RIGHT_AXES_VIEW);\n\n  if (legend === false) {\n    chart.legend(false);\n  } else if (isObject(legend) && legend.custom === true) {\n    chart.legend(legend);\n  } else {\n    const leftLegend = get(geometryOptions, [0, 'legend'], legend);\n    const rightLegend = get(geometryOptions, [1, 'legend'], legend);\n    // 均使用自定义图例\n    chart.once('beforepaint', () => {\n      const leftItems = data[0].length\n        ? getViewLegendItems({\n            view: leftView,\n            geometryOption: geometryOptions[0],\n            yField: yField[0],\n            legend: leftLegend,\n          })\n        : [];\n\n      const rightItems = data[1].length\n        ? getViewLegendItems({\n            view: rightView,\n            geometryOption: geometryOptions[1],\n            yField: yField[1],\n            legend: rightLegend,\n          })\n        : [];\n\n      chart.legend(\n        deepAssign({}, legend, {\n          custom: true,\n          // todo 修改类型定义\n          // @ts-ignore\n          items: leftItems.concat(rightItems),\n        })\n      );\n    });\n\n    if (geometryOptions[0].seriesField) {\n      leftView.legend(geometryOptions[0].seriesField, leftLegend);\n    }\n    if (geometryOptions[1].seriesField) {\n      rightView.legend(geometryOptions[1].seriesField, rightLegend);\n    }\n\n    // 自定义图例交互\n    chart.on('legend-item:click', (evt) => {\n      const delegateObject = get(evt, 'gEvent.delegateObject', {});\n      if (delegateObject && delegateObject.item) {\n        const { value: field, isGeometry, viewId } = delegateObject.item;\n        // geometry 的时候，直接使用 view.changeVisible\n        if (isGeometry) {\n          const idx = findIndex(yField, (yF: string) => yF === field);\n          if (idx > -1) {\n            const geometries = get(findViewById(chart, viewId), 'geometries');\n            each(geometries, (g) => {\n              g.changeVisible(!delegateObject.item.unchecked);\n            });\n          }\n        } else {\n          const legendItem = get(chart.getController('legend'), 'option.items', []);\n          // 分组柱线图\n          each(chart.views, (view) => {\n            // 单折柱图\n            const groupScale = view.getGroupScales();\n            each(groupScale, (scale: Scale) => {\n              if (scale.values && scale.values.indexOf(field) > -1) {\n                view.filter(scale.field, (value) => {\n                  const curLegendItem: Types.LegendItem = find(\n                    legendItem,\n                    (item: Types.LegendItem) => item.value === value\n                  );\n                  // 使用 legend 中的 unchecked 来判断，使得支持关闭多个图例\n                  return !curLegendItem.unchecked;\n                });\n              }\n            });\n            chart.render(true);\n          });\n        }\n      }\n    });\n  }\n\n  return params;\n}\n\n/**\n * 双轴图 slider 适配器\n * @param params\n */\nexport function slider(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { slider } = options;\n  const leftView = findViewById(chart, LEFT_AXES_VIEW);\n  const rightView = findViewById(chart, RIGHT_AXES_VIEW);\n  if (slider) {\n    // 左 View\n    leftView.option('slider', slider);\n    // 监听左侧 slider 改变事件， 同步右侧 View 视图\n    leftView.on('slider:valuechanged', (evt: Event) => {\n      const {\n        event: { value, originValue },\n      } = evt;\n      if (isEqual(value, originValue)) {\n        return;\n      }\n      doSliderFilter(rightView, value);\n    });\n    chart.once('afterpaint', () => {\n      // 初始化数据，配置默认值时需要同步\n      if (!isBoolean(slider)) {\n        const { start, end } = slider;\n        if (start || end) {\n          doSliderFilter(rightView, [start, end]);\n        }\n      }\n    });\n  }\n\n  return params;\n}\n\n/**\n * 双折线图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  // transformOptions 一定在最前面处理；color legend 使用了 beforepaint，为便于理解放在最后面\n  return flow(\n    transformOptions,\n    createViews,\n    // 主题靠前设置，作为最低优先级\n    theme,\n    geometry,\n    meta,\n    axis,\n    limitInPlot,\n    tooltip,\n    interaction,\n    annotation,\n    animation,\n    color,\n    legend,\n    slider\n  )(params);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}