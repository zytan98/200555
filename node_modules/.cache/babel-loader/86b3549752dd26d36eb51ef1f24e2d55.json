{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport Base from '../base';\nimport { isString, isNil } from '@antv/util';\nimport { modifyCSS, createDom } from '@antv/dom-util';\nimport { Util } from '@antv/g6-core';\nimport { mat3 } from '@antv/matrix-util';\nvar applyMatrix = Util.applyMatrix;\n\nfunction getImgNaturalDimension(img, callback) {\n  var nWidth, nHeight;\n\n  if (img.naturalWidth) {\n    // 现代浏览器\n    nWidth = img.naturalWidth;\n    nHeight = img.naturalHeight;\n  } else {\n    // IE6/7/8\n    var image_1 = new Image();\n    image_1.src = img.src;\n\n    image_1.onload = function () {\n      if (callback) callback(image_1.width, image_1.height);\n    };\n  }\n\n  return [nWidth, nHeight];\n}\n\nvar ImageMiniMap =\n/** @class */\nfunction (_super) {\n  __extends(ImageMiniMap, _super);\n\n  function ImageMiniMap() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ImageMiniMap.prototype.getDefaultCfgs = function () {\n    return {\n      container: null,\n      className: 'g6-minimap',\n      viewportClassName: 'g6-minimap-viewport',\n      width: 200,\n      delegateStyle: {\n        fill: '#40a9ff',\n        stroke: '#096dd9'\n      },\n      refresh: true\n    };\n  };\n\n  ImageMiniMap.prototype.getEvents = function () {\n    return {\n      beforepaint: 'updateViewport',\n      beforeanimate: 'disableRefresh',\n      afteranimate: 'enableRefresh',\n      viewportchange: 'disableOneRefresh'\n    };\n  }; // 若是正在进行动画，不刷新缩略图\n\n\n  ImageMiniMap.prototype.disableRefresh = function () {\n    this.set('refresh', false);\n  };\n\n  ImageMiniMap.prototype.enableRefresh = function () {\n    this.set('refresh', true);\n    this.updateCanvas();\n  };\n\n  ImageMiniMap.prototype.disableOneRefresh = function () {\n    this.set('viewportChange', true);\n  };\n\n  ImageMiniMap.prototype.initViewport = function () {\n    var _this = this;\n\n    var cfgs = this._cfgs; // cWidth and cHeight are the width and height of the minimap's container\n\n    var graph = cfgs.graph;\n    if (this.destroyed) return;\n    var containerDOM = this.get('container');\n\n    if (isString(containerDOM)) {\n      containerDOM = document.getElementById(containerDOM);\n    }\n\n    var viewport = createDom(\"<div class=\" + cfgs.viewportClassName + \"\\n      style='position:absolute;\\n        left:0;\\n        top:0;\\n        box-sizing:border-box;\\n        border: 2px solid #1980ff'>\\n      </div>\"); // 计算拖拽水平方向距离\n\n    var x = 0; // 计算拖拽垂直方向距离\n\n    var y = 0; // 是否在拖拽minimap的视口\n\n    var dragging = false; // 缓存viewport当前对于画布的x\n\n    var left = 0; // 缓存viewport当前对于画布的y\n\n    var top = 0; // 缓存viewport当前宽度\n\n    var width = 0; // 缓存viewport当前高度\n\n    var height = 0;\n    var ratio = 0;\n    var zoom = 0;\n    containerDOM.addEventListener('mousedown', function (e) {\n      cfgs.refresh = false;\n\n      if (e.target !== viewport) {\n        return;\n      } // 如果视口已经最大了，不需要拖拽\n\n\n      var style = viewport.style;\n      width = parseInt(style.width, 10);\n      height = parseInt(style.height, 10);\n\n      var cWidth = _this.get('width');\n\n      var cHeight = _this.get('height');\n\n      if (width > cWidth || height > cHeight) {\n        return;\n      }\n\n      zoom = graph.getZoom();\n      ratio = _this.get('ratio');\n      dragging = true;\n      x = e.clientX;\n      y = e.clientY;\n    }, false);\n    containerDOM.addEventListener('mousemove', function (e) {\n      if (!dragging || isNil(e.clientX) || isNil(e.clientY)) {\n        return;\n      }\n\n      var cWidth = _this.get('width');\n\n      var cHeight = _this.get('height');\n\n      var style = viewport.style;\n      left = parseInt(style.left, 10);\n      top = parseInt(style.top, 10);\n      width = parseInt(style.width, 10);\n      height = parseInt(style.height, 10);\n      var dx = x - e.clientX;\n      var dy = y - e.clientY; // 若视口移动到最左边或最右边了,仅移动到边界\n\n      if (left - dx < 0) {\n        dx = left;\n      } else if (left - dx + width >= cWidth) {\n        dx = 0;\n      } // 若视口移动到最上或最下边了，仅移动到边界\n\n\n      if (top - dy < 0) {\n        dy = top;\n      } else if (top - dy + height >= cHeight) {\n        dy = 0;\n      }\n\n      left -= dx;\n      top -= dy; // 先移动视口，避免移动到边上以后出现视口闪烁\n\n      modifyCSS(viewport, {\n        left: left + \"px\",\n        top: top + \"px\"\n      }); // graph 移动需要偏移量 dx/dy * 缩放比例才会得到正确的移动距离\n\n      graph.translate(dx * zoom / ratio, dy * zoom / ratio);\n      x = e.clientX;\n      y = e.clientY;\n    }, false);\n    containerDOM.addEventListener('mouseleave', function () {\n      dragging = false;\n      cfgs.refresh = true;\n    }, false);\n    containerDOM.addEventListener('mouseup', function () {\n      dragging = false;\n      cfgs.refresh = true;\n    }, false);\n    this.set('viewport', viewport);\n    containerDOM.appendChild(viewport);\n  };\n  /**\n   * 更新 viewport 视图\n   */\n\n\n  ImageMiniMap.prototype.updateViewport = function () {\n    if (this.destroyed) return;\n    var ratio = this.get('ratio');\n    var cWidth = this.get('width');\n    var cHeight = this.get('height');\n    var graph = this.get('graph');\n    var graphWidth = graph.get('width');\n    var graphHeight = graph.get('height');\n    var aspectRatio = graphWidth / graphHeight;\n    var graphGroup = graph.getGroup(); // 主图的 bbox（矩阵变换相关的 bbox）\n\n    var graphCanvasBBox = graphGroup.getCanvasBBox(); // 扩展 graphBBox 到和 graphWidth / graphHeight 等比\n\n    var graphCanvasBBoxMean = [(graphCanvasBBox.minX + graphCanvasBBox.maxX) / 2, (graphCanvasBBox.minY + graphCanvasBBox.maxY) / 2];\n    var graphCanvasBBoxSize = [graphCanvasBBox.maxX - graphCanvasBBox.minX, graphCanvasBBox.maxY - graphCanvasBBox.minY];\n    var expandedGraphCanvasBBox = {\n      centerX: graphCanvasBBoxMean[0],\n      centerY: graphCanvasBBoxMean[1],\n      width: 0,\n      height: 0,\n      minX: 0,\n      minY: 0\n    };\n\n    if (graphCanvasBBox[0] / graphCanvasBBox[1] > aspectRatio) {\n      expandedGraphCanvasBBox.width = graphCanvasBBoxSize[0];\n      expandedGraphCanvasBBox.height = expandedGraphCanvasBBox.width / aspectRatio;\n    } else {\n      expandedGraphCanvasBBox.height = graphCanvasBBoxSize[1];\n      expandedGraphCanvasBBox.width = expandedGraphCanvasBBox.height * aspectRatio;\n    }\n\n    expandedGraphCanvasBBox.minX = graphCanvasBBoxMean[0] - expandedGraphCanvasBBox.width / 2;\n    expandedGraphCanvasBBox.minY = graphCanvasBBoxMean[1] - expandedGraphCanvasBBox.height / 2;\n    var graphMatrix = graphGroup.getMatrix();\n    if (!graphMatrix) graphMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    var invertGraphMatrix = mat3.invert([1, 0, 0, 0, 1, 0, 0, 0, 1], graphMatrix);\n    var minXY = applyMatrix({\n      x: expandedGraphCanvasBBox.minX,\n      y: expandedGraphCanvasBBox.minY\n    }, invertGraphMatrix); // 扩展 graphBBox 后的 bbox 的左上角对应的 canvas container 坐标\n\n    var topLeft = graph.getCanvasByPoint(minXY.x, minXY.y);\n    var viewport = this.get('viewport');\n\n    if (!viewport) {\n      this.initViewport();\n    } // Viewport 与 minimap container 的比例 =  Graph container 与 expandedGraphBBox 比例\n\n\n    var vpToMc = graphWidth / expandedGraphCanvasBBox.width; // viewport 宽高 = vpToMc * minimap container 宽高\n\n    var width = vpToMc * cWidth;\n    var height = vpToMc * cHeight; // vierport 左上角到 minimap container 的距离 / minimap container 宽高\n    // = 主图 expandedBBox 左上角 canvas container 坐标距离 / expandedBBox 宽高\n\n    var left = cWidth * -topLeft.x / expandedGraphCanvasBBox.width;\n    var top = cHeight * -topLeft.y / expandedGraphCanvasBBox.height;\n    var right = left + width;\n    var bottom = top + height;\n\n    if (left < 0) {\n      width += left;\n      left = 0;\n    }\n\n    if (right > cWidth) {\n      width = width - (right - cWidth);\n    }\n\n    if (top < 0) {\n      height += top;\n      top = 0;\n    }\n\n    if (bottom > cHeight) {\n      height = height - (bottom - cHeight);\n    } // 缓存目前缩放比，在移动 minimap 视窗时就不用再计算大图的移动量\n\n\n    this.set('ratio', ratio);\n    var correctLeft = left + \"px\";\n    var correctTop = top + \"px\";\n    modifyCSS(viewport, {\n      left: correctLeft,\n      top: correctTop,\n      width: width + \"px\",\n      height: height + \"px\"\n    });\n  };\n\n  ImageMiniMap.prototype.init = function () {\n    this.initContainer();\n  };\n  /**\n   * 初始化 Minimap 的容器\n   */\n\n\n  ImageMiniMap.prototype.initContainer = function () {\n    var self = this;\n    var graph = self.get('graph');\n    var graphWidth = graph.get('width');\n    var graphHeight = graph.get('height');\n    var aspectRatio = graphHeight / graphWidth;\n    var className = self.get('className');\n    var parentNode = self.get('container'); // size of the minimap's container\n\n    var cWidth = self.get('width');\n    var cHeight = self.get('height');\n\n    if (!cWidth && !cHeight) {\n      cWidth = 200;\n    }\n\n    if (cWidth) {\n      cHeight = aspectRatio * cWidth;\n      self.set('height', cHeight);\n    } else {\n      cWidth = 1 / aspectRatio * cHeight;\n      self.set('width', cWidth);\n    }\n\n    var container = createDom(\"<div class='\" + className + \"' style='width: \" + cWidth + \"px; height: \" + cHeight + \"px; overflow: hidden; position: relative;'></div>\");\n\n    if (isString(parentNode)) {\n      parentNode = document.getElementById(parentNode);\n    }\n\n    if (parentNode) {\n      parentNode.appendChild(container);\n    } else {\n      graph.get('container').appendChild(container);\n    }\n\n    self.set('container', container);\n    var containerDOM = createDom(\"<div class=\\\"g6-minimap-container\\\" style=\\\"position: relative; width: 100%; height: 100%; text-align: center; display: table;\\\"></div>\");\n    container.appendChild(containerDOM);\n    var span = createDom(\"<span style=\\\"display: table-cell; vertical-align: middle; \\\"></span>\");\n    containerDOM.appendChild(span);\n    self.set('containerDOM', containerDOM);\n    self.set('containerSpan', span);\n    var img = createDom(\"<img alt=\\\"\\\" src=\\\"\" + this.get('graphImg') + \"\\\" style=\\\"display: inline-block;\\\" ondragstart=\\\"return false;\\\" onselectstart=\\\"return false;\\\"/>\");\n    self.set('imgDOM', img);\n    self.updateImgSize();\n    span.appendChild(img);\n    self.updateCanvas();\n  };\n\n  ImageMiniMap.prototype.updateImgSize = function () {\n    var self = this;\n    var imgDOM = self.get('imgDOM');\n    var cWidth = self.get('width');\n    var cHeight = self.get('height');\n\n    imgDOM.onload = function () {\n      var naturalSize = getImgNaturalDimension(imgDOM);\n\n      if (naturalSize[0] > naturalSize[1]) {\n        imgDOM.width = cWidth;\n      } else {\n        imgDOM.height = cHeight;\n      }\n    };\n  };\n\n  ImageMiniMap.prototype.updateCanvas = function () {\n    // 如果是在动画，则不刷新视图\n    var isRefresh = this.get('refresh');\n\n    if (!isRefresh) {\n      return;\n    }\n\n    var graph = this.get('graph');\n\n    if (graph.get('destroyed')) {\n      return;\n    } // 如果是视口变换，也不刷新视图，但是需要重置视口大小和位置\n\n\n    if (this.get('viewportChange')) {\n      this.set('viewportChange', false);\n      this.updateViewport();\n    }\n\n    var cWidth = this.get('width');\n    var graphBBox = graph.get('canvas').getCanvasBBox();\n    var width = graphBBox.width;\n    var ratio = cWidth / width; // // 更新minimap视口\n\n    this.set('ratio', ratio);\n    this.updateViewport();\n  };\n  /**\n   * 获取minimap的窗口\n   * @return {HTMLElement} 窗口的dom实例\n   */\n\n\n  ImageMiniMap.prototype.getViewport = function () {\n    return this.get('viewport');\n  };\n  /**\n   * 获取minimap的容器dom\n   * @return {HTMLElement} dom\n   */\n\n\n  ImageMiniMap.prototype.getContainer = function () {\n    return this.get('container');\n  };\n\n  ImageMiniMap.prototype.updateGraphImg = function (img) {\n    var self = this;\n    var oriImgDOM = self.get('imgDOM');\n    oriImgDOM.remove();\n    self.set('graphImg', img);\n    var imgDOM = createDom(\"<img alt=\\\"\\\" src=\\\"\" + img + \"\\\" style=\\\"display: inline-block;\\\" ondragstart=\\\"return false;\\\" onselectstart=\\\"return false;\\\"/>\");\n    self.set('imgDOM', imgDOM);\n    imgDOM.src = img;\n    self.updateImgSize();\n    var span = self.get('containerSpan');\n    span.appendChild(imgDOM);\n    self.updateCanvas();\n  };\n\n  ImageMiniMap.prototype.destroy = function () {\n    var container = this.get('container');\n    container.parentNode.removeChild(container);\n  };\n\n  return ImageMiniMap;\n}(Base);\n\nexport default ImageMiniMap;","map":{"version":3,"sources":["C:/Users/Home/Desktop/cs-2005/node_modules/@antv/g6-plugin/es/imageMinimap/index.js"],"names":["__extends","_extendStatics","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","Base","isString","isNil","modifyCSS","createDom","Util","mat3","applyMatrix","getImgNaturalDimension","img","callback","nWidth","nHeight","naturalWidth","naturalHeight","image_1","Image","src","onload","width","height","ImageMiniMap","_super","apply","arguments","getDefaultCfgs","container","className","viewportClassName","delegateStyle","fill","stroke","refresh","getEvents","beforepaint","beforeanimate","afteranimate","viewportchange","disableRefresh","set","enableRefresh","updateCanvas","disableOneRefresh","initViewport","_this","cfgs","_cfgs","graph","destroyed","containerDOM","get","document","getElementById","viewport","x","y","dragging","left","top","ratio","zoom","addEventListener","e","target","style","parseInt","cWidth","cHeight","getZoom","clientX","clientY","dx","dy","translate","appendChild","updateViewport","graphWidth","graphHeight","aspectRatio","graphGroup","getGroup","graphCanvasBBox","getCanvasBBox","graphCanvasBBoxMean","minX","maxX","minY","maxY","graphCanvasBBoxSize","expandedGraphCanvasBBox","centerX","centerY","graphMatrix","getMatrix","invertGraphMatrix","invert","minXY","topLeft","getCanvasByPoint","vpToMc","right","bottom","correctLeft","correctTop","init","initContainer","self","parentNode","span","updateImgSize","imgDOM","naturalSize","isRefresh","graphBBox","getViewport","getContainer","updateGraphImg","oriImgDOM","remove","destroy","removeChild"],"mappings":"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","sourcesContent":["var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport Base from '../base';\nimport { isString, isNil } from '@antv/util';\nimport { modifyCSS, createDom } from '@antv/dom-util';\nimport { Util } from '@antv/g6-core';\nimport { mat3 } from '@antv/matrix-util';\nvar applyMatrix = Util.applyMatrix;\n\nfunction getImgNaturalDimension(img, callback) {\n  var nWidth, nHeight;\n\n  if (img.naturalWidth) {\n    // 现代浏览器\n    nWidth = img.naturalWidth;\n    nHeight = img.naturalHeight;\n  } else {\n    // IE6/7/8\n    var image_1 = new Image();\n    image_1.src = img.src;\n\n    image_1.onload = function () {\n      if (callback) callback(image_1.width, image_1.height);\n    };\n  }\n\n  return [nWidth, nHeight];\n}\n\nvar ImageMiniMap =\n/** @class */\nfunction (_super) {\n  __extends(ImageMiniMap, _super);\n\n  function ImageMiniMap() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ImageMiniMap.prototype.getDefaultCfgs = function () {\n    return {\n      container: null,\n      className: 'g6-minimap',\n      viewportClassName: 'g6-minimap-viewport',\n      width: 200,\n      delegateStyle: {\n        fill: '#40a9ff',\n        stroke: '#096dd9'\n      },\n      refresh: true\n    };\n  };\n\n  ImageMiniMap.prototype.getEvents = function () {\n    return {\n      beforepaint: 'updateViewport',\n      beforeanimate: 'disableRefresh',\n      afteranimate: 'enableRefresh',\n      viewportchange: 'disableOneRefresh'\n    };\n  }; // 若是正在进行动画，不刷新缩略图\n\n\n  ImageMiniMap.prototype.disableRefresh = function () {\n    this.set('refresh', false);\n  };\n\n  ImageMiniMap.prototype.enableRefresh = function () {\n    this.set('refresh', true);\n    this.updateCanvas();\n  };\n\n  ImageMiniMap.prototype.disableOneRefresh = function () {\n    this.set('viewportChange', true);\n  };\n\n  ImageMiniMap.prototype.initViewport = function () {\n    var _this = this;\n\n    var cfgs = this._cfgs; // cWidth and cHeight are the width and height of the minimap's container\n\n    var graph = cfgs.graph;\n    if (this.destroyed) return;\n    var containerDOM = this.get('container');\n\n    if (isString(containerDOM)) {\n      containerDOM = document.getElementById(containerDOM);\n    }\n\n    var viewport = createDom(\"<div class=\" + cfgs.viewportClassName + \"\\n      style='position:absolute;\\n        left:0;\\n        top:0;\\n        box-sizing:border-box;\\n        border: 2px solid #1980ff'>\\n      </div>\"); // 计算拖拽水平方向距离\n\n    var x = 0; // 计算拖拽垂直方向距离\n\n    var y = 0; // 是否在拖拽minimap的视口\n\n    var dragging = false; // 缓存viewport当前对于画布的x\n\n    var left = 0; // 缓存viewport当前对于画布的y\n\n    var top = 0; // 缓存viewport当前宽度\n\n    var width = 0; // 缓存viewport当前高度\n\n    var height = 0;\n    var ratio = 0;\n    var zoom = 0;\n    containerDOM.addEventListener('mousedown', function (e) {\n      cfgs.refresh = false;\n\n      if (e.target !== viewport) {\n        return;\n      } // 如果视口已经最大了，不需要拖拽\n\n\n      var style = viewport.style;\n      width = parseInt(style.width, 10);\n      height = parseInt(style.height, 10);\n\n      var cWidth = _this.get('width');\n\n      var cHeight = _this.get('height');\n\n      if (width > cWidth || height > cHeight) {\n        return;\n      }\n\n      zoom = graph.getZoom();\n      ratio = _this.get('ratio');\n      dragging = true;\n      x = e.clientX;\n      y = e.clientY;\n    }, false);\n    containerDOM.addEventListener('mousemove', function (e) {\n      if (!dragging || isNil(e.clientX) || isNil(e.clientY)) {\n        return;\n      }\n\n      var cWidth = _this.get('width');\n\n      var cHeight = _this.get('height');\n\n      var style = viewport.style;\n      left = parseInt(style.left, 10);\n      top = parseInt(style.top, 10);\n      width = parseInt(style.width, 10);\n      height = parseInt(style.height, 10);\n      var dx = x - e.clientX;\n      var dy = y - e.clientY; // 若视口移动到最左边或最右边了,仅移动到边界\n\n      if (left - dx < 0) {\n        dx = left;\n      } else if (left - dx + width >= cWidth) {\n        dx = 0;\n      } // 若视口移动到最上或最下边了，仅移动到边界\n\n\n      if (top - dy < 0) {\n        dy = top;\n      } else if (top - dy + height >= cHeight) {\n        dy = 0;\n      }\n\n      left -= dx;\n      top -= dy; // 先移动视口，避免移动到边上以后出现视口闪烁\n\n      modifyCSS(viewport, {\n        left: left + \"px\",\n        top: top + \"px\"\n      }); // graph 移动需要偏移量 dx/dy * 缩放比例才会得到正确的移动距离\n\n      graph.translate(dx * zoom / ratio, dy * zoom / ratio);\n      x = e.clientX;\n      y = e.clientY;\n    }, false);\n    containerDOM.addEventListener('mouseleave', function () {\n      dragging = false;\n      cfgs.refresh = true;\n    }, false);\n    containerDOM.addEventListener('mouseup', function () {\n      dragging = false;\n      cfgs.refresh = true;\n    }, false);\n    this.set('viewport', viewport);\n    containerDOM.appendChild(viewport);\n  };\n  /**\n   * 更新 viewport 视图\n   */\n\n\n  ImageMiniMap.prototype.updateViewport = function () {\n    if (this.destroyed) return;\n    var ratio = this.get('ratio');\n    var cWidth = this.get('width');\n    var cHeight = this.get('height');\n    var graph = this.get('graph');\n    var graphWidth = graph.get('width');\n    var graphHeight = graph.get('height');\n    var aspectRatio = graphWidth / graphHeight;\n    var graphGroup = graph.getGroup(); // 主图的 bbox（矩阵变换相关的 bbox）\n\n    var graphCanvasBBox = graphGroup.getCanvasBBox(); // 扩展 graphBBox 到和 graphWidth / graphHeight 等比\n\n    var graphCanvasBBoxMean = [(graphCanvasBBox.minX + graphCanvasBBox.maxX) / 2, (graphCanvasBBox.minY + graphCanvasBBox.maxY) / 2];\n    var graphCanvasBBoxSize = [graphCanvasBBox.maxX - graphCanvasBBox.minX, graphCanvasBBox.maxY - graphCanvasBBox.minY];\n    var expandedGraphCanvasBBox = {\n      centerX: graphCanvasBBoxMean[0],\n      centerY: graphCanvasBBoxMean[1],\n      width: 0,\n      height: 0,\n      minX: 0,\n      minY: 0\n    };\n\n    if (graphCanvasBBox[0] / graphCanvasBBox[1] > aspectRatio) {\n      expandedGraphCanvasBBox.width = graphCanvasBBoxSize[0];\n      expandedGraphCanvasBBox.height = expandedGraphCanvasBBox.width / aspectRatio;\n    } else {\n      expandedGraphCanvasBBox.height = graphCanvasBBoxSize[1];\n      expandedGraphCanvasBBox.width = expandedGraphCanvasBBox.height * aspectRatio;\n    }\n\n    expandedGraphCanvasBBox.minX = graphCanvasBBoxMean[0] - expandedGraphCanvasBBox.width / 2;\n    expandedGraphCanvasBBox.minY = graphCanvasBBoxMean[1] - expandedGraphCanvasBBox.height / 2;\n    var graphMatrix = graphGroup.getMatrix();\n    if (!graphMatrix) graphMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    var invertGraphMatrix = mat3.invert([1, 0, 0, 0, 1, 0, 0, 0, 1], graphMatrix);\n    var minXY = applyMatrix({\n      x: expandedGraphCanvasBBox.minX,\n      y: expandedGraphCanvasBBox.minY\n    }, invertGraphMatrix); // 扩展 graphBBox 后的 bbox 的左上角对应的 canvas container 坐标\n\n    var topLeft = graph.getCanvasByPoint(minXY.x, minXY.y);\n    var viewport = this.get('viewport');\n\n    if (!viewport) {\n      this.initViewport();\n    } // Viewport 与 minimap container 的比例 =  Graph container 与 expandedGraphBBox 比例\n\n\n    var vpToMc = graphWidth / expandedGraphCanvasBBox.width; // viewport 宽高 = vpToMc * minimap container 宽高\n\n    var width = vpToMc * cWidth;\n    var height = vpToMc * cHeight; // vierport 左上角到 minimap container 的距离 / minimap container 宽高\n    // = 主图 expandedBBox 左上角 canvas container 坐标距离 / expandedBBox 宽高\n\n    var left = cWidth * -topLeft.x / expandedGraphCanvasBBox.width;\n    var top = cHeight * -topLeft.y / expandedGraphCanvasBBox.height;\n    var right = left + width;\n    var bottom = top + height;\n\n    if (left < 0) {\n      width += left;\n      left = 0;\n    }\n\n    if (right > cWidth) {\n      width = width - (right - cWidth);\n    }\n\n    if (top < 0) {\n      height += top;\n      top = 0;\n    }\n\n    if (bottom > cHeight) {\n      height = height - (bottom - cHeight);\n    } // 缓存目前缩放比，在移动 minimap 视窗时就不用再计算大图的移动量\n\n\n    this.set('ratio', ratio);\n    var correctLeft = left + \"px\";\n    var correctTop = top + \"px\";\n    modifyCSS(viewport, {\n      left: correctLeft,\n      top: correctTop,\n      width: width + \"px\",\n      height: height + \"px\"\n    });\n  };\n\n  ImageMiniMap.prototype.init = function () {\n    this.initContainer();\n  };\n  /**\n   * 初始化 Minimap 的容器\n   */\n\n\n  ImageMiniMap.prototype.initContainer = function () {\n    var self = this;\n    var graph = self.get('graph');\n    var graphWidth = graph.get('width');\n    var graphHeight = graph.get('height');\n    var aspectRatio = graphHeight / graphWidth;\n    var className = self.get('className');\n    var parentNode = self.get('container'); // size of the minimap's container\n\n    var cWidth = self.get('width');\n    var cHeight = self.get('height');\n\n    if (!cWidth && !cHeight) {\n      cWidth = 200;\n    }\n\n    if (cWidth) {\n      cHeight = aspectRatio * cWidth;\n      self.set('height', cHeight);\n    } else {\n      cWidth = 1 / aspectRatio * cHeight;\n      self.set('width', cWidth);\n    }\n\n    var container = createDom(\"<div class='\" + className + \"' style='width: \" + cWidth + \"px; height: \" + cHeight + \"px; overflow: hidden; position: relative;'></div>\");\n\n    if (isString(parentNode)) {\n      parentNode = document.getElementById(parentNode);\n    }\n\n    if (parentNode) {\n      parentNode.appendChild(container);\n    } else {\n      graph.get('container').appendChild(container);\n    }\n\n    self.set('container', container);\n    var containerDOM = createDom(\"<div class=\\\"g6-minimap-container\\\" style=\\\"position: relative; width: 100%; height: 100%; text-align: center; display: table;\\\"></div>\");\n    container.appendChild(containerDOM);\n    var span = createDom(\"<span style=\\\"display: table-cell; vertical-align: middle; \\\"></span>\");\n    containerDOM.appendChild(span);\n    self.set('containerDOM', containerDOM);\n    self.set('containerSpan', span);\n    var img = createDom(\"<img alt=\\\"\\\" src=\\\"\" + this.get('graphImg') + \"\\\" style=\\\"display: inline-block;\\\" ondragstart=\\\"return false;\\\" onselectstart=\\\"return false;\\\"/>\");\n    self.set('imgDOM', img);\n    self.updateImgSize();\n    span.appendChild(img);\n    self.updateCanvas();\n  };\n\n  ImageMiniMap.prototype.updateImgSize = function () {\n    var self = this;\n    var imgDOM = self.get('imgDOM');\n    var cWidth = self.get('width');\n    var cHeight = self.get('height');\n\n    imgDOM.onload = function () {\n      var naturalSize = getImgNaturalDimension(imgDOM);\n\n      if (naturalSize[0] > naturalSize[1]) {\n        imgDOM.width = cWidth;\n      } else {\n        imgDOM.height = cHeight;\n      }\n    };\n  };\n\n  ImageMiniMap.prototype.updateCanvas = function () {\n    // 如果是在动画，则不刷新视图\n    var isRefresh = this.get('refresh');\n\n    if (!isRefresh) {\n      return;\n    }\n\n    var graph = this.get('graph');\n\n    if (graph.get('destroyed')) {\n      return;\n    } // 如果是视口变换，也不刷新视图，但是需要重置视口大小和位置\n\n\n    if (this.get('viewportChange')) {\n      this.set('viewportChange', false);\n      this.updateViewport();\n    }\n\n    var cWidth = this.get('width');\n    var graphBBox = graph.get('canvas').getCanvasBBox();\n    var width = graphBBox.width;\n    var ratio = cWidth / width; // // 更新minimap视口\n\n    this.set('ratio', ratio);\n    this.updateViewport();\n  };\n  /**\n   * 获取minimap的窗口\n   * @return {HTMLElement} 窗口的dom实例\n   */\n\n\n  ImageMiniMap.prototype.getViewport = function () {\n    return this.get('viewport');\n  };\n  /**\n   * 获取minimap的容器dom\n   * @return {HTMLElement} dom\n   */\n\n\n  ImageMiniMap.prototype.getContainer = function () {\n    return this.get('container');\n  };\n\n  ImageMiniMap.prototype.updateGraphImg = function (img) {\n    var self = this;\n    var oriImgDOM = self.get('imgDOM');\n    oriImgDOM.remove();\n    self.set('graphImg', img);\n    var imgDOM = createDom(\"<img alt=\\\"\\\" src=\\\"\" + img + \"\\\" style=\\\"display: inline-block;\\\" ondragstart=\\\"return false;\\\" onselectstart=\\\"return false;\\\"/>\");\n    self.set('imgDOM', imgDOM);\n    imgDOM.src = img;\n    self.updateImgSize();\n    var span = self.get('containerSpan');\n    span.appendChild(imgDOM);\n    self.updateCanvas();\n  };\n\n  ImageMiniMap.prototype.destroy = function () {\n    var container = this.get('container');\n    container.parentNode.removeChild(container);\n  };\n\n  return ImageMiniMap;\n}(Base);\n\nexport default ImageMiniMap;"]},"metadata":{},"sourceType":"module"}