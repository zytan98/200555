{"ast":null,"code":"/**\n * 对比当前元素和之前的元素，返回 added, updated, removed\n * @param keyItem 之前的元素的，按照 key-item 的 object 的形式存储\n * @param keys 现在的元素，按照 array 的形式存储\n * @returns 由 added, updated, removed array 构成的 object\n */\nexport function diff(keyItem, keys) {\n  var added = [];\n  var updated = [];\n  var removed = [];\n  var keyIncluded = new Map();\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (keyItem[key]) updated.push(key);else added.push(key);\n    keyIncluded.set(key, true);\n  }\n\n  Object.keys(keyItem).forEach(function (key) {\n    if (!keyIncluded.has(key)) removed.push(key);\n  });\n  return {\n    added: added,\n    updated: updated,\n    removed: removed\n  };\n}","map":{"version":3,"sources":["../../../src/geometry/util/diff.ts"],"names":[],"mappings":"AAAA;;;;;AAKG;AACH,OAAM,SAAU,IAAV,CAAe,OAAf,EAA6C,IAA7C,EAA2D;AAC/D,MAAM,KAAK,GAAG,EAAd;AACA,MAAM,OAAO,GAAG,EAAhB;AACA,MAAM,OAAO,GAAG,EAAhB;AACA,MAAM,WAAW,GAAG,IAAI,GAAJ,EAApB;;AAEA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,CAAC,EAAlC,EAAsC;AACpC,QAAM,GAAG,GAAG,IAAI,CAAC,CAAD,CAAhB;AACA,QAAI,OAAO,CAAC,GAAD,CAAX,EAAkB,OAAO,CAAC,IAAR,CAAa,GAAb,EAAlB,KACK,KAAK,CAAC,IAAN,CAAW,GAAX;AACL,IAAA,WAAW,CAAC,GAAZ,CAAgB,GAAhB,EAAqB,IAArB;AACD;;AAED,EAAA,MAAM,CAAC,IAAP,CAAY,OAAZ,EAAqB,OAArB,CAA6B,UAAC,GAAD,EAAI;AAC/B,QAAI,CAAC,WAAW,CAAC,GAAZ,CAAgB,GAAhB,CAAL,EAA2B,OAAO,CAAC,IAAR,CAAa,GAAb;AAC5B,GAFD;AAIA,SAAO;AACL,IAAA,KAAK,EAAA,KADA;AAEL,IAAA,OAAO,EAAA,OAFF;AAGL,IAAA,OAAO,EAAA;AAHF,GAAP;AAKD","sourcesContent":["/**\n * 对比当前元素和之前的元素，返回 added, updated, removed\n * @param keyItem 之前的元素的，按照 key-item 的 object 的形式存储\n * @param keys 现在的元素，按照 array 的形式存储\n * @returns 由 added, updated, removed array 构成的 object\n */\nexport function diff(keyItem: Record<string, any>, keys: string[]) {\n  const added = [];\n  const updated = [];\n  const removed = [];\n  const keyIncluded = new Map<string, boolean>();\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if (keyItem[key]) updated.push(key);\n    else added.push(key);\n    keyIncluded.set(key, true);\n  }\n\n  Object.keys(keyItem).forEach((key) => {\n    if (!keyIncluded.has(key)) removed.push(key);\n  });\n\n  return {\n    added,\n    updated,\n    removed,\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}