{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { isFunction } from '@antv/util';\nvar DEFAULT_TRIGGER = 'click';\nvar ALLOW_EVENTS = ['click', 'drag'];\nvar DEFAULT_KEY = undefined;\nvar ALLOW_KEYS = ['shift', 'ctrl', 'control', 'alt', 'meta', undefined];\nexport default {\n  getDefaultCfg: function getDefaultCfg() {\n    return {\n      trigger: DEFAULT_TRIGGER,\n      key: DEFAULT_KEY,\n      edgeConfig: {},\n      getEdgeConfig: undefined\n    };\n  },\n  getEvents: function getEvents() {\n    var self = this; // 检测输入是否合法\n\n    if (!(ALLOW_EVENTS.indexOf(self.trigger.toLowerCase()) > -1)) {\n      self.trigger = DEFAULT_TRIGGER; // eslint-disable-next-line no-console\n\n      console.warn(\"Behavior create-edge 的 trigger 参数不合法，请输入 'click'，'drag'\");\n    }\n\n    if (self.key && ALLOW_KEYS.indexOf(self.key.toLowerCase()) === -1) {\n      self.trigger = DEFAULT_KEY; // eslint-disable-next-line no-console\n\n      console.warn(\"Behavior create-edge 的 key 参数不合法，请输入 'shift'，'ctrl'，'alt'，'control'，或 undefined\");\n    }\n\n    var events;\n\n    if (self.trigger === 'drag') {\n      events = {\n        'node:dragstart': 'onClick',\n        'combo:dragstart': 'onClick',\n        drag: 'updateEndPoint',\n        'node:drop': 'onClick',\n        'combo:drop': 'onClick',\n        dragend: 'onDragEnd'\n      };\n    } else if (self.trigger === 'click') {\n      events = {\n        'node:click': 'onClick',\n        mousemove: 'updateEndPoint',\n        'edge:click': 'cancelCreating',\n        'canvas:click': 'cancelCreating',\n        'combo:click': 'onClick'\n      };\n    }\n\n    if (self.key) {\n      events.keydown = 'onKeyDown';\n      events.keyup = 'onKeyUp';\n    }\n\n    return events;\n  },\n  onDragEnd: function onDragEnd(ev) {\n    var self = this;\n    if (self.key && !self.keydown) return;\n    var item = ev.item;\n    if (!item || item.getID() === self.source || item.getType() !== 'node') self.cancelCreating({\n      item: self.edge,\n      x: ev.x,\n      y: ev.y\n    });\n  },\n  // 如果边的起点没有指定，则根据起点创建新边；如果起点已经指定而终点未指定，则指定终点\n  onClick: function onClick(ev) {\n    var self = this;\n    if (self.key && !self.keydown) return;\n    var node = ev.item;\n    var graph = self.graph;\n    var model = node.getModel();\n    var getEdgeConfig = self.getEdgeConfig; // 如果起点已经指定而终点未指定，则指定终点\n\n    if (self.addingEdge && self.edge) {\n      if (!self.shouldEnd.call(self, ev)) return;\n      var edgeConfig = void 0;\n\n      if (getEdgeConfig && isFunction(getEdgeConfig)) {\n        edgeConfig = getEdgeConfig({\n          source: self.source,\n          target: model.id\n        });\n      } else {\n        edgeConfig = self.edgeConfig;\n      }\n\n      var updateCfg = __assign({\n        target: model.id\n      }, edgeConfig);\n\n      if (self.source === model.id) {\n        updateCfg.type = 'loop';\n      }\n\n      graph.emit('beforecreateedge', {});\n      graph.updateItem(self.edge, updateCfg, false);\n\n      if (graph.get('enabledStack')) {\n        var addedModel = __assign(__assign({}, self.edge.getModel()), {\n          itemType: 'edge'\n        });\n\n        var after = {};\n        after.edges = [addedModel];\n        graph.pushStack('add', {\n          before: {},\n          after: after\n        });\n      }\n\n      graph.emit('aftercreateedge', {\n        edge: self.edge\n      }); // 暂时将该边的 capture 恢复为 true\n\n      self.edge.getKeyShape().set('capture', true);\n      self.edge = null;\n      self.addingEdge = false;\n    } else {\n      // 如果边的起点没有指定，则根据起点创建新边\n      if (!self.shouldBegin.call(self, ev)) return; // 获取自定义 edge 配置\n\n      var edgeConfig = void 0;\n\n      if (getEdgeConfig && isFunction(getEdgeConfig)) {\n        edgeConfig = getEdgeConfig({\n          source: model.id,\n          target: model.id\n        });\n      } else {\n        edgeConfig = self.edgeConfig;\n      }\n\n      self.edge = graph.addItem('edge', __assign({\n        source: model.id,\n        target: model.id\n      }, edgeConfig), false);\n      self.source = model.id;\n      self.addingEdge = true; // 暂时将该边的 capture 设置为 false，这样可以拾取到后面的元素\n\n      self.edge.getKeyShape().set('capture', false);\n    }\n  },\n  // 边的起点已经确定，边的末端跟随鼠标移动\n  updateEndPoint: function updateEndPoint(ev) {\n    var self = this;\n    if (self.key && !self.keydown) return;\n    var point = {\n      x: ev.x,\n      y: ev.y\n    }; // 若此时 source 节点已经被移除，结束添加边\n\n    if (!self.graph.findById(self.source)) {\n      self.addingEdge = false;\n      return;\n    }\n\n    if (self.addingEdge && self.edge) {\n      // 更新边的终点为鼠标位置\n      self.graph.updateItem(self.edge, {\n        target: point\n      }, false);\n    }\n  },\n  // 取消增加边，删除该边；或指定终点\n  cancelCreating: function cancelCreating(ev) {\n    var self = this;\n    if (self.key && !self.keydown) return;\n    var graph = self.graph;\n    var currentEdge = ev.item;\n\n    if (self.addingEdge && ev.target && ev.target.isCanvas && ev.target.isCanvas()) {\n      graph.removeItem(self.edge, false);\n      self.edge = null;\n      self.addingEdge = false;\n      return;\n    }\n\n    if (self.addingEdge && self.edge === currentEdge) {\n      graph.removeItem(self.edge, false);\n      self.edge = null;\n      self.addingEdge = false;\n    }\n  },\n  onKeyDown: function onKeyDown(e) {\n    var self = this;\n    var code = e.key;\n\n    if (!code) {\n      return;\n    }\n\n    if (code.toLowerCase() === self.key.toLowerCase()) {\n      self.keydown = true;\n    } else {\n      self.keydown = false;\n    }\n  },\n  onKeyUp: function onKeyUp() {\n    var self = this;\n\n    if (self.addingEdge && self.edge) {\n      // 清除正在增加的边\n      self.graph.removeItem(self.edge, false);\n      self.addingEdge = false;\n      self.edge = null;\n    }\n\n    this.keydown = false;\n  }\n};","map":{"version":3,"sources":["C:/Users/Home/Desktop/cs-2005/node_modules/@antv/g6-pc/es/behavior/create-edge.js"],"names":["__assign","isFunction","DEFAULT_TRIGGER","ALLOW_EVENTS","DEFAULT_KEY","undefined","ALLOW_KEYS","getDefaultCfg","trigger","key","edgeConfig","getEdgeConfig","getEvents","self","indexOf","toLowerCase","console","warn","events","drag","dragend","mousemove","keydown","keyup","onDragEnd","ev","item","getID","source","getType","cancelCreating","edge","x","y","onClick","node","graph","model","getModel","addingEdge","shouldEnd","call","target","id","updateCfg","type","emit","updateItem","get","addedModel","itemType","after","edges","pushStack","before","getKeyShape","set","shouldBegin","addItem","updateEndPoint","point","findById","currentEdge","isCanvas","removeItem","onKeyDown","e","code","onKeyUp"],"mappings":"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","sourcesContent":["import { __assign } from \"tslib\";\nimport { isFunction } from '@antv/util';\nvar DEFAULT_TRIGGER = 'click';\nvar ALLOW_EVENTS = ['click', 'drag'];\nvar DEFAULT_KEY = undefined;\nvar ALLOW_KEYS = ['shift', 'ctrl', 'control', 'alt', 'meta', undefined];\nexport default {\n  getDefaultCfg: function getDefaultCfg() {\n    return {\n      trigger: DEFAULT_TRIGGER,\n      key: DEFAULT_KEY,\n      edgeConfig: {},\n      getEdgeConfig: undefined\n    };\n  },\n  getEvents: function getEvents() {\n    var self = this; // 检测输入是否合法\n\n    if (!(ALLOW_EVENTS.indexOf(self.trigger.toLowerCase()) > -1)) {\n      self.trigger = DEFAULT_TRIGGER; // eslint-disable-next-line no-console\n\n      console.warn(\"Behavior create-edge 的 trigger 参数不合法，请输入 'click'，'drag'\");\n    }\n\n    if (self.key && ALLOW_KEYS.indexOf(self.key.toLowerCase()) === -1) {\n      self.trigger = DEFAULT_KEY; // eslint-disable-next-line no-console\n\n      console.warn(\"Behavior create-edge 的 key 参数不合法，请输入 'shift'，'ctrl'，'alt'，'control'，或 undefined\");\n    }\n\n    var events;\n\n    if (self.trigger === 'drag') {\n      events = {\n        'node:dragstart': 'onClick',\n        'combo:dragstart': 'onClick',\n        drag: 'updateEndPoint',\n        'node:drop': 'onClick',\n        'combo:drop': 'onClick',\n        dragend: 'onDragEnd'\n      };\n    } else if (self.trigger === 'click') {\n      events = {\n        'node:click': 'onClick',\n        mousemove: 'updateEndPoint',\n        'edge:click': 'cancelCreating',\n        'canvas:click': 'cancelCreating',\n        'combo:click': 'onClick'\n      };\n    }\n\n    if (self.key) {\n      events.keydown = 'onKeyDown';\n      events.keyup = 'onKeyUp';\n    }\n\n    return events;\n  },\n  onDragEnd: function onDragEnd(ev) {\n    var self = this;\n    if (self.key && !self.keydown) return;\n    var item = ev.item;\n    if (!item || item.getID() === self.source || item.getType() !== 'node') self.cancelCreating({\n      item: self.edge,\n      x: ev.x,\n      y: ev.y\n    });\n  },\n  // 如果边的起点没有指定，则根据起点创建新边；如果起点已经指定而终点未指定，则指定终点\n  onClick: function onClick(ev) {\n    var self = this;\n    if (self.key && !self.keydown) return;\n    var node = ev.item;\n    var graph = self.graph;\n    var model = node.getModel();\n    var getEdgeConfig = self.getEdgeConfig; // 如果起点已经指定而终点未指定，则指定终点\n\n    if (self.addingEdge && self.edge) {\n      if (!self.shouldEnd.call(self, ev)) return;\n      var edgeConfig = void 0;\n\n      if (getEdgeConfig && isFunction(getEdgeConfig)) {\n        edgeConfig = getEdgeConfig({\n          source: self.source,\n          target: model.id\n        });\n      } else {\n        edgeConfig = self.edgeConfig;\n      }\n\n      var updateCfg = __assign({\n        target: model.id\n      }, edgeConfig);\n\n      if (self.source === model.id) {\n        updateCfg.type = 'loop';\n      }\n\n      graph.emit('beforecreateedge', {});\n      graph.updateItem(self.edge, updateCfg, false);\n\n      if (graph.get('enabledStack')) {\n        var addedModel = __assign(__assign({}, self.edge.getModel()), {\n          itemType: 'edge'\n        });\n\n        var after = {};\n        after.edges = [addedModel];\n        graph.pushStack('add', {\n          before: {},\n          after: after\n        });\n      }\n\n      graph.emit('aftercreateedge', {\n        edge: self.edge\n      }); // 暂时将该边的 capture 恢复为 true\n\n      self.edge.getKeyShape().set('capture', true);\n      self.edge = null;\n      self.addingEdge = false;\n    } else {\n      // 如果边的起点没有指定，则根据起点创建新边\n      if (!self.shouldBegin.call(self, ev)) return; // 获取自定义 edge 配置\n\n      var edgeConfig = void 0;\n\n      if (getEdgeConfig && isFunction(getEdgeConfig)) {\n        edgeConfig = getEdgeConfig({\n          source: model.id,\n          target: model.id\n        });\n      } else {\n        edgeConfig = self.edgeConfig;\n      }\n\n      self.edge = graph.addItem('edge', __assign({\n        source: model.id,\n        target: model.id\n      }, edgeConfig), false);\n      self.source = model.id;\n      self.addingEdge = true; // 暂时将该边的 capture 设置为 false，这样可以拾取到后面的元素\n\n      self.edge.getKeyShape().set('capture', false);\n    }\n  },\n  // 边的起点已经确定，边的末端跟随鼠标移动\n  updateEndPoint: function updateEndPoint(ev) {\n    var self = this;\n    if (self.key && !self.keydown) return;\n    var point = {\n      x: ev.x,\n      y: ev.y\n    }; // 若此时 source 节点已经被移除，结束添加边\n\n    if (!self.graph.findById(self.source)) {\n      self.addingEdge = false;\n      return;\n    }\n\n    if (self.addingEdge && self.edge) {\n      // 更新边的终点为鼠标位置\n      self.graph.updateItem(self.edge, {\n        target: point\n      }, false);\n    }\n  },\n  // 取消增加边，删除该边；或指定终点\n  cancelCreating: function cancelCreating(ev) {\n    var self = this;\n    if (self.key && !self.keydown) return;\n    var graph = self.graph;\n    var currentEdge = ev.item;\n\n    if (self.addingEdge && ev.target && ev.target.isCanvas && ev.target.isCanvas()) {\n      graph.removeItem(self.edge, false);\n      self.edge = null;\n      self.addingEdge = false;\n      return;\n    }\n\n    if (self.addingEdge && self.edge === currentEdge) {\n      graph.removeItem(self.edge, false);\n      self.edge = null;\n      self.addingEdge = false;\n    }\n  },\n  onKeyDown: function onKeyDown(e) {\n    var self = this;\n    var code = e.key;\n\n    if (!code) {\n      return;\n    }\n\n    if (code.toLowerCase() === self.key.toLowerCase()) {\n      self.keydown = true;\n    } else {\n      self.keydown = false;\n    }\n  },\n  onKeyUp: function onKeyUp() {\n    var self = this;\n\n    if (self.addingEdge && self.edge) {\n      // 清除正在增加的边\n      self.graph.removeItem(self.edge, false);\n      self.addingEdge = false;\n      self.edge = null;\n    }\n\n    this.keydown = false;\n  }\n};"]},"metadata":{},"sourceType":"module"}