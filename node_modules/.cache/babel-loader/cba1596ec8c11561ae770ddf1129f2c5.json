{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { adaptor } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constant';\nimport { transformData } from './utils';\n/**\n * 瀑布图\n */\n\nvar Waterfall =\n/** @class */\nfunction (_super) {\n  __extends(Waterfall, _super);\n\n  function Waterfall() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n\n\n    _this.type = 'waterfall';\n    return _this;\n  }\n  /**\n   * 获取 瀑布图 默认配置项\n   * 供外部使用\n   */\n\n\n  Waterfall.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  /**\n   * @override\n   * @param data\n   */\n\n\n  Waterfall.prototype.changeData = function (data) {\n    var _a = this.options,\n        xField = _a.xField,\n        yField = _a.yField,\n        total = _a.total;\n    this.updateOption({\n      data: data\n    });\n    this.chart.changeData(transformData(data, xField, yField, total));\n  };\n  /**\n   * 获取 瀑布图 的适配器\n   */\n\n\n  Waterfall.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n  /**\n   * 获取 瀑布图 的默认配置\n   */\n\n\n  Waterfall.prototype.getDefaultOptions = function () {\n    return Waterfall.getDefaultOptions();\n  };\n\n  return Waterfall;\n}(Plot);\n\nexport { Waterfall };","map":{"version":3,"sources":["../../../src/plots/waterfall/index.ts"],"names":[],"mappings":";AAAA,SAAS,IAAT,QAAqB,iBAArB;AAGA,SAAS,OAAT,QAAwB,WAAxB;AACA,SAAS,eAAT,QAAgC,YAAhC;AACA,SAAS,aAAT,QAA8B,SAA9B;AAIA;;AAEG;;AACH,IAAA,SAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA+B,EAAA,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;;AAA/B,WAAA,SAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AASE;;;AACgB,IAAA,KAAA,CAAA,IAAA,GAAe,WAAf;;AAyBjB;AAlCC;;;AAGG;;;AACI,EAAA,SAAA,CAAA,iBAAA,GAAP,YAAA;AACE,WAAO,eAAP;AACD,GAFM;AAOP;;;AAGG;;;AACI,EAAA,SAAA,CAAA,SAAA,CAAA,UAAA,GAAP,UAAkB,IAAlB,EAAsB;AACd,QAAA,EAAA,GAA4B,KAAK,OAAjC;AAAA,QAAE,MAAM,GAAA,EAAA,CAAA,MAAR;AAAA,QAAU,MAAM,GAAA,EAAA,CAAA,MAAhB;AAAA,QAAkB,KAAK,GAAA,EAAA,CAAA,KAAvB;AACN,SAAK,YAAL,CAAkB;AAAE,MAAA,IAAI,EAAA;AAAN,KAAlB;AACA,SAAK,KAAL,CAAW,UAAX,CAAsB,aAAa,CAAC,IAAD,EAAO,MAAP,EAAe,MAAf,EAAuB,KAAvB,CAAnC;AACD,GAJM;AAMP;;AAEG;;;AACO,EAAA,SAAA,CAAA,SAAA,CAAA,gBAAA,GAAV,YAAA;AACE,WAAO,OAAP;AACD,GAFS;AAIV;;AAEG;;;AACO,EAAA,SAAA,CAAA,SAAA,CAAA,iBAAA,GAAV,YAAA;AACE,WAAO,SAAS,CAAC,iBAAV,EAAP;AACD,GAFS;;AAGZ,SAAA,SAAA;AAAC,CAnCD,CAA+B,IAA/B,CAAA","sourcesContent":["import { Plot } from '../../core/plot';\nimport { Adaptor } from '../../core/adaptor';\nimport { WaterfallOptions } from './types';\nimport { adaptor } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constant';\nimport { transformData } from './utils';\n\nexport type { WaterfallOptions };\n\n/**\n * 瀑布图\n */\nexport class Waterfall extends Plot<WaterfallOptions> {\n  /**\n   * 获取 瀑布图 默认配置项\n   * 供外部使用\n   */\n  static getDefaultOptions(): Partial<WaterfallOptions> {\n    return DEFAULT_OPTIONS;\n  }\n\n  /** 图表类型 */\n  public readonly type: string = 'waterfall';\n\n  /**\n   * @override\n   * @param data\n   */\n  public changeData(data) {\n    const { xField, yField, total } = this.options;\n    this.updateOption({ data });\n    this.chart.changeData(transformData(data, xField, yField, total));\n  }\n\n  /**\n   * 获取 瀑布图 的适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<WaterfallOptions> {\n    return adaptor;\n  }\n\n  /**\n   * 获取 瀑布图 的默认配置\n   */\n  protected getDefaultOptions(): Partial<WaterfallOptions> {\n    return Waterfall.getDefaultOptions();\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}