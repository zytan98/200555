{"ast":null,"code":"import _initializerDefineProperty from \"@babel/runtime/helpers/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/initializerWarningHelper\";\n\nvar _dec, _dec2, _dec3, _class, _class2, _descriptor, _temp;\n\nimport { IDENTIFIER } from '@antv/g-webgpu-core';\nimport { inject, injectable, named } from 'inversify';\nexport var View = (_dec = injectable(), _dec2 = inject(IDENTIFIER.Systems), _dec3 = named(IDENTIFIER.RendererSystem), _dec(_class = (_class2 = (_temp = /*#__PURE__*/function () {\n  function View() {\n    _classCallCheck(this, View);\n\n    _initializerDefineProperty(this, \"rendererSystem\", _descriptor, this);\n\n    this.camera = void 0;\n    this.scene = void 0;\n    this.viewport = {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n    this.clearColor = [1, 1, 1, 1];\n  }\n\n  _createClass(View, [{\n    key: \"getCamera\",\n    value: function getCamera() {\n      return this.camera;\n    }\n  }, {\n    key: \"getScene\",\n    value: function getScene() {\n      return this.scene;\n    }\n  }, {\n    key: \"getViewport\",\n    value: function getViewport() {\n      return this.viewport;\n    }\n  }, {\n    key: \"getClearColor\",\n    value: function getClearColor() {\n      return this.clearColor;\n    }\n  }, {\n    key: \"setCamera\",\n    value: function setCamera(camera) {\n      this.camera = camera;\n      return this;\n    }\n  }, {\n    key: \"setScene\",\n    value: function setScene(scene) {\n      this.scene = scene;\n      return this;\n    }\n  }, {\n    key: \"setViewport\",\n    value: function setViewport(viewport) {\n      this.viewport = viewport;\n      return this;\n    }\n  }, {\n    key: \"setClearColor\",\n    value: function setClearColor(clearColor) {\n      this.clearColor = clearColor;\n      return this;\n    }\n  }, {\n    key: \"pick\",\n    value: function pick(position) {\n      return this.rendererSystem.pick(position, this);\n    }\n  }]);\n\n  return View;\n}(), _temp), _descriptor = _applyDecoratedDescriptor(_class2.prototype, \"rendererSystem\", [_dec2, _dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _class2)) || _class);","map":{"version":3,"sources":["../src/View.ts"],"names":["injectable","View","inject","IDENTIFIER","named","x","y","width","height"],"mappings":";;;;;;;;AAAA,SAAA,UAAA,QAAA,qBAAA;AAQA,SAAA,MAAA,EAAA,UAAA,EAAA,KAAA,QAAA,WAAA;AAGA,OAAA,IAAaC,IAAb,IAAA,IAAA,GADCD,UAAU,EACX,EAAA,KAAA,GACGE,MAAM,CAACC,UAAU,CADpB,OACS,CADT,EAAA,KAAA,GAEGC,KAAK,CAACD,UAAU,CAFnB,cAEQ,CAFR,EAAA,IAAA,CAAA,MAAA,IAAA,OAAA,IAAA,KAAA,GAAA,aAAA,YAAA;AAAA,WAAA,IAAA,GAAA;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,IAAA,CAAA;;AAAA,IAAA,0BAAA,CAAA,IAAA,EAAA,gBAAA,EAAA,WAAA,EAAA,IAAA,CAAA;;AAAA,SAAA,MAAA,GAAA,KAAA,CAAA;AAAA,SAAA,KAAA,GAAA,KAAA,CAAA;AAAA,SAAA,QAAA,GAOgC;AAC5BE,MAAAA,CAAC,EAD2B,CAAA;AAE5BC,MAAAA,CAAC,EAF2B,CAAA;AAG5BC,MAAAA,KAAK,EAHuB,CAAA;AAI5BC,MAAAA,MAAM,EAAE;AAJoB,KAPhC;AAAA,SAAA,UAAA,GAayD,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAbzD,CAayD,CAbzD;AAAA;;AAAA,EAAA,YAAA,CAAA,IAAA,EAAA,CAAA;AAAA,IAAA,GAAA,EAAA,WAAA;AAAA,IAAA,KAAA,EAAA,SAAA,SAAA,GAeqB;AACjB,aAAO,KAAP,MAAA;AACD;AAjBH,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,UAAA;AAAA,IAAA,KAAA,EAAA,SAAA,QAAA,GAmBoB;AAChB,aAAO,KAAP,KAAA;AACD;AArBH,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,aAAA;AAAA,IAAA,KAAA,EAAA,SAAA,WAAA,GAuBuB;AACnB,aAAO,KAAP,QAAA;AACD;AAzBH,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,eAAA;AAAA,IAAA,KAAA,EAAA,SAAA,aAAA,GA2ByB;AACrB,aAAO,KAAP,UAAA;AACD;AA7BH,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,WAAA;AAAA,IAAA,KAAA,EAAA,SAAA,SAAA,CAAA,MAAA,EA+BoC;AAChC,WAAA,MAAA,GAAA,MAAA;AACA,aAAA,IAAA;AACD;AAlCH,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,UAAA;AAAA,IAAA,KAAA,EAAA,SAAA,QAAA,CAAA,KAAA,EAoCiC;AAC7B,WAAA,KAAA,GAAA,KAAA;AACA,aAAA,IAAA;AACD;AAvCH,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,aAAA;AAAA,IAAA,KAAA,EAAA,SAAA,WAAA,CAAA,QAAA,EAyC0C;AACtC,WAAA,QAAA,GAAA,QAAA;AACA,aAAA,IAAA;AACD;AA5CH,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,eAAA;AAAA,IAAA,KAAA,EAAA,SAAA,aAAA,CAAA,UAAA,EA8CqE;AACjE,WAAA,UAAA,GAAA,UAAA;AACA,aAAA,IAAA;AACD;AAjDH,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,MAAA;AAAA,IAAA,KAAA,EAAA,SAAA,IAAA,CAAA,QAAA,EAmDkD;AAC9C,aAAO,KAAA,cAAA,CAAA,IAAA,CAAA,QAAA,EAAP,IAAO,CAAP;AACD;AArDH,GAAA,CAAA,CAAA;;AAAA,SAAA,IAAA;AAAA,CAAA,EAAA,EAAA,KAAA,CAAA,EAAA,WAAA,GAAA,yBAAA,CAAA,OAAA,CAAA,SAAA,EAAA,gBAAA,EAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA;AAAA,EAAA,YAAA,EAAA,IAAA;AAAA,EAAA,UAAA,EAAA,IAAA;AAAA,EAAA,QAAA,EAAA,IAAA;AAAA,EAAA,WAAA,EAAA;AAAA,CAAA,CAAA,EAAA,OAAA,CAAA,CAAA,IAAA,MAAA,CAAA","sourcesContent":["import {\n  ICamera,\n  IDENTIFIER,\n  IScene,\n  IView,\n  IViewport,\n  RendererSystem,\n} from '@antv/g-webgpu-core';\nimport { inject, injectable, named } from 'inversify';\n\n@injectable()\nexport class View implements IView {\n  @inject(IDENTIFIER.Systems)\n  @named(IDENTIFIER.RendererSystem)\n  private readonly rendererSystem: RendererSystem;\n\n  private camera: ICamera;\n  private scene: IScene;\n  private viewport: IViewport = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n  };\n  private clearColor: [number, number, number, number] = [1, 1, 1, 1];\n\n  public getCamera() {\n    return this.camera;\n  }\n\n  public getScene() {\n    return this.scene;\n  }\n\n  public getViewport() {\n    return this.viewport;\n  }\n\n  public getClearColor() {\n    return this.clearColor;\n  }\n\n  public setCamera(camera: ICamera) {\n    this.camera = camera;\n    return this;\n  }\n\n  public setScene(scene: IScene) {\n    this.scene = scene;\n    return this;\n  }\n\n  public setViewport(viewport: IViewport) {\n    this.viewport = viewport;\n    return this;\n  }\n\n  public setClearColor(clearColor: [number, number, number, number]) {\n    this.clearColor = clearColor;\n    return this;\n  }\n\n  public pick(position: { x: number; y: number }) {\n    return this.rendererSystem.pick(position, this);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}