{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport { EMPTY } from './Entity';\nexport var Component = function Component(data) {\n  //\n  _classCallCheck(this, Component);\n};\n/**\n * 管理某一类 Component，尽可能做到 AoS 而非 SoA\n * @see https://wickedengine.net/2019/09/29/entity-component-system/\n * @see https://github.com/turanszkij/WickedEngine/blob/master/WickedEngine/wiECS.h\n */\n// tslint:disable-next-line:max-classes-per-file\n\nexport var ComponentManager = /*#__PURE__*/function () {\n  /**\n   * 不在 Entity 中维护拥有的 Component 列表，反之亦然\n   */\n  function ComponentManager(clazz) {\n    _classCallCheck(this, ComponentManager);\n\n    this.clazz = void 0;\n    this.components = [];\n    this.entities = [];\n    this.lookup = {};\n    this.clazz = clazz;\n  }\n\n  _createClass(ComponentManager, [{\n    key: \"clear\",\n    value: function clear() {\n      this.components = [];\n      this.entities = [];\n      this.lookup = {};\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(entity) {\n      return this.lookup[entity] > -1;\n    }\n  }, {\n    key: \"create\",\n    value: function create(entity, data) {\n      this.lookup[entity] = this.components.length;\n      var component = new this.clazz(data || {});\n      this.components.push(component);\n      this.entities.push(entity);\n      return component;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(entity) {\n      var componentIndex = this.lookup[entity];\n\n      if (componentIndex > -1) {\n        if (componentIndex < this.components.length - 1) {\n          // 将待删除元素和最后一个元素交换\n          // C++ 中有 std::move 这样的操作，避免数据的拷贝\n          // @see https://github.com/turanszkij/WickedEngine/blob/master/WickedEngine/wiECS.h#L169\n          this.components[componentIndex] = this.components[this.components.length - 1];\n          this.entities[componentIndex] = this.entities[this.entities.length - 1];\n          this.lookup[this.entities[componentIndex]] = componentIndex;\n        }\n      } // 待删除元素已经移动到了最后一个\n\n\n      this.components.pop();\n      this.entities.pop();\n      delete this.lookup[entity];\n    }\n  }, {\n    key: \"removeKeepSorted\",\n    value: function removeKeepSorted(entity) {\n      var componentIndex = this.lookup[entity];\n\n      if (componentIndex > -1) {\n        var entity2 = this.entities[componentIndex];\n\n        if (componentIndex < this.components.length - 1) {\n          // Move every component left by one that is after this element:\n          for (var _i = componentIndex + 1; _i < this.components.length; ++_i) {\n            this.components[_i - 1] = this.components[_i];\n          } // Move every entity left by one that is after this element and update lut:\n\n\n          for (var _i2 = componentIndex + 1; _i2 < this.entities.length; ++_i2) {\n            this.entities[_i2 - 1] = this.entities[_i2];\n            this.lookup[this.entities[_i2 - 1]] = _i2 - 1;\n          }\n        }\n\n        this.components.pop();\n        this.entities.pop();\n        delete this.lookup[entity2];\n      }\n    }\n  }, {\n    key: \"moveItem\",\n    value: function moveItem(srcIndex, destIndex) {\n      if (srcIndex === destIndex) {\n        return;\n      } // Save the moved component and entity:\n\n\n      var srcComponent = this.components[srcIndex];\n      var srcEntity = this.entities[srcIndex]; // Every other entity-component that's in the way gets moved by one and lut is kept updated:\n\n      var direction = srcIndex < destIndex ? 1 : -1;\n\n      for (var _i3 = srcIndex; _i3 !== destIndex; _i3 += direction) {\n        var next = _i3 + direction;\n        this.components[_i3] = this.components[next];\n        this.entities[_i3] = this.entities[next];\n        this.lookup[this.entities[_i3]] = _i3;\n      } // Saved entity-component moved to the required position:\n\n\n      this.components[destIndex] = srcComponent;\n      this.entities[destIndex] = srcEntity;\n      this.lookup[srcEntity] = destIndex;\n    }\n  }, {\n    key: \"getEntity\",\n    value: function getEntity(index) {\n      return this.entities[index];\n    }\n    /**\n     * 由于缺少类似 C++ 的重载操作符，没法通过 [下标] 直接访问。因此只能增加该方法用于遍历。\n     */\n\n  }, {\n    key: \"getComponent\",\n    value: function getComponent(index) {\n      return this.components[index];\n    }\n  }, {\n    key: \"getComponentByEntity\",\n    value: function getComponentByEntity(entity) {\n      var componentIndex = this.lookup[entity];\n\n      if (componentIndex > -1) {\n        return this.components[componentIndex];\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getCount\",\n    value: function getCount() {\n      return this.components.length;\n    }\n  }, {\n    key: \"getEntityByComponentIndex\",\n    value: function getEntityByComponentIndex(componentIdx) {\n      for (var _i4 = 0, _Object$keys = Object.keys(this.lookup); _i4 < _Object$keys.length; _i4++) {\n        var _entity = _Object$keys[_i4];\n        var entityInNum = Number(_entity);\n\n        if (this.lookup[entityInNum] === componentIdx) {\n          return entityInNum;\n        }\n      }\n\n      return EMPTY;\n    }\n  }, {\n    key: \"find\",\n    value: function find(callback) {\n      for (var _i5 = 0; _i5 < this.getCount(); _i5++) {\n        var _component = this.getComponent(_i5);\n\n        if (callback(_component, _i5)) {\n          return _component;\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"findIndex\",\n    value: function findIndex(callback) {\n      for (var _i6 = 0; _i6 < this.getCount(); _i6++) {\n        var _component2 = this.getComponent(_i6);\n\n        if (callback(_component2, _i6)) {\n          return _i6;\n        }\n      }\n\n      return -1;\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(callback) {\n      for (var _i7 = 0, _Object$keys2 = Object.keys(this.lookup); _i7 < _Object$keys2.length; _i7++) {\n        var _entity2 = _Object$keys2[_i7];\n        var entityInNum = Number(_entity2);\n        var componentIndex = this.lookup[entityInNum];\n        callback(entityInNum, this.getComponent(componentIndex));\n      }\n    }\n  }, {\n    key: \"forEachAsync\",\n    value: function () {\n      var _forEachAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(callback) {\n        var _i8, _Object$keys3, _entity3, entityInNum, componentIndex;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _i8 = 0, _Object$keys3 = Object.keys(this.lookup);\n\n              case 1:\n                if (!(_i8 < _Object$keys3.length)) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _entity3 = _Object$keys3[_i8];\n                entityInNum = Number(_entity3);\n                componentIndex = this.lookup[entityInNum];\n                _context.next = 7;\n                return callback(entityInNum, this.getComponent(componentIndex));\n\n              case 7:\n                _i8++;\n                _context.next = 1;\n                break;\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function forEachAsync(_x) {\n        return _forEachAsync.apply(this, arguments);\n      }\n\n      return forEachAsync;\n    }()\n  }, {\n    key: \"map\",\n    value: function map(callback) {\n      var result = [];\n\n      for (var _i9 = 0, _Object$keys4 = Object.keys(this.lookup); _i9 < _Object$keys4.length; _i9++) {\n        var _entity4 = _Object$keys4[_i9];\n        var entityInNum = Number(_entity4);\n        var componentIndex = this.lookup[entityInNum];\n        result.push(callback(entityInNum, this.getComponent(componentIndex)));\n      }\n\n      return result;\n    }\n  }]);\n\n  return ComponentManager;\n}();","map":{"version":3,"sources":["../src/ComponentManager.ts"],"names":["Component","ComponentManager","clazz","components","entities","lookup","component","data","componentIndex","entity2","i","srcIndex","srcComponent","srcEntity","direction","next","entity","Object","entityInNum","Number","callback","result"],"mappings":"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","sourcesContent":["import { Entity } from '.';\nimport { EMPTY } from './Entity';\n\ntype NonFunctionPropertyNames<T> = {\n  [K in keyof T]: T[K] extends (args: unknown) => void ? never : K;\n}[keyof T];\nexport type NonFunctionProperties<T> = Pick<T, NonFunctionPropertyNames<T>>;\n\nexport type ComponentClassType<P> = new (\n  data: Partial<NonFunctionProperties<P>>,\n) => Component<P> & P;\n\nexport abstract class Component<P> {\n  constructor(data?: Partial<NonFunctionProperties<P>>) {\n    //\n  }\n}\n\n/**\n * 管理某一类 Component，尽可能做到 AoS 而非 SoA\n * @see https://wickedengine.net/2019/09/29/entity-component-system/\n * @see https://github.com/turanszkij/WickedEngine/blob/master/WickedEngine/wiECS.h\n */\n// tslint:disable-next-line:max-classes-per-file\nexport class ComponentManager<P> {\n  private clazz: ComponentClassType<P>;\n  private components: Array<Component<P> & P> = [];\n  private entities: Entity[] = [];\n\n  /**\n   * 不在 Entity 中维护拥有的 Component 列表，反之亦然\n   */\n  private lookup: Record<Entity, number> = {};\n\n  constructor(clazz: ComponentClassType<P>) {\n    this.clazz = clazz;\n  }\n\n  public clear() {\n    this.components = [];\n    this.entities = [];\n    this.lookup = {};\n  }\n\n  public contains(entity: Entity) {\n    return this.lookup[entity] > -1;\n  }\n\n  public create(entity: Entity, data?: Partial<NonFunctionProperties<P>>) {\n    this.lookup[entity] = this.components.length;\n    const component = new this.clazz(data || {});\n    this.components.push(component);\n    this.entities.push(entity);\n    return component;\n  }\n\n  public remove(entity: Entity) {\n    const componentIndex = this.lookup[entity];\n    if (componentIndex > -1) {\n      if (componentIndex < this.components.length - 1) {\n        // 将待删除元素和最后一个元素交换\n        // C++ 中有 std::move 这样的操作，避免数据的拷贝\n        // @see https://github.com/turanszkij/WickedEngine/blob/master/WickedEngine/wiECS.h#L169\n        this.components[componentIndex] = this.components[\n          this.components.length - 1\n        ];\n        this.entities[componentIndex] = this.entities[this.entities.length - 1];\n        this.lookup[this.entities[componentIndex]] = componentIndex;\n      }\n    }\n\n    // 待删除元素已经移动到了最后一个\n    this.components.pop();\n    this.entities.pop();\n    delete this.lookup[entity];\n  }\n\n  public removeKeepSorted(entity: Entity) {\n    const componentIndex = this.lookup[entity];\n    if (componentIndex > -1) {\n      const entity2 = this.entities[componentIndex];\n\n      if (componentIndex < this.components.length - 1) {\n        // Move every component left by one that is after this element:\n        for (let i = componentIndex + 1; i < this.components.length; ++i) {\n          this.components[i - 1] = this.components[i];\n        }\n        // Move every entity left by one that is after this element and update lut:\n        for (let i = componentIndex + 1; i < this.entities.length; ++i) {\n          this.entities[i - 1] = this.entities[i];\n          this.lookup[this.entities[i - 1]] = i - 1;\n        }\n      }\n\n      this.components.pop();\n      this.entities.pop();\n      delete this.lookup[entity2];\n    }\n  }\n\n  public moveItem(srcIndex: number, destIndex: number) {\n    if (srcIndex === destIndex) {\n      return;\n    }\n\n    // Save the moved component and entity:\n    const srcComponent = this.components[srcIndex];\n    const srcEntity = this.entities[srcIndex];\n\n    // Every other entity-component that's in the way gets moved by one and lut is kept updated:\n    const direction = srcIndex < destIndex ? 1 : -1;\n    for (let i = srcIndex; i !== destIndex; i += direction) {\n      const next = i + direction;\n      this.components[i] = this.components[next];\n      this.entities[i] = this.entities[next];\n      this.lookup[this.entities[i]] = i;\n    }\n\n    // Saved entity-component moved to the required position:\n    this.components[destIndex] = srcComponent;\n    this.entities[destIndex] = srcEntity;\n    this.lookup[srcEntity] = destIndex;\n  }\n\n  public getEntity(index: number) {\n    return this.entities[index];\n  }\n\n  /**\n   * 由于缺少类似 C++ 的重载操作符，没法通过 [下标] 直接访问。因此只能增加该方法用于遍历。\n   */\n  public getComponent(index: number) {\n    return this.components[index];\n  }\n\n  public getComponentByEntity(entity: Entity) {\n    const componentIndex = this.lookup[entity];\n    if (componentIndex > -1) {\n      return this.components[componentIndex];\n    }\n    return null;\n  }\n\n  public getCount() {\n    return this.components.length;\n  }\n\n  public getEntityByComponentIndex(componentIdx: number) {\n    for (const entity of Object.keys(this.lookup)) {\n      const entityInNum = Number(entity);\n      if (this.lookup[entityInNum] === componentIdx) {\n        return entityInNum;\n      }\n    }\n    return EMPTY;\n  }\n\n  public find(callback: (component: Component<P> & P, i: number) => boolean) {\n    for (let i = 0; i < this.getCount(); i++) {\n      const component = this.getComponent(i);\n      if (callback(component, i)) {\n        return component;\n      }\n    }\n    return null;\n  }\n\n  public findIndex(\n    callback: (component: Component<P> & P, i: number) => boolean,\n  ) {\n    for (let i = 0; i < this.getCount(); i++) {\n      const component = this.getComponent(i);\n      if (callback(component, i)) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  public forEach(\n    callback: (entity: Entity, component: Component<P> & P) => void,\n  ) {\n    for (const entity of Object.keys(this.lookup)) {\n      const entityInNum = Number(entity);\n      const componentIndex = this.lookup[entityInNum];\n      callback(entityInNum, this.getComponent(componentIndex));\n    }\n  }\n\n  public async forEachAsync(\n    callback: (entity: Entity, component: Component<P> & P) => Promise<void>,\n  ) {\n    for (const entity of Object.keys(this.lookup)) {\n      const entityInNum = Number(entity);\n      const componentIndex = this.lookup[entityInNum];\n      await callback(entityInNum, this.getComponent(componentIndex));\n    }\n  }\n\n  public map(callback: (entity: Entity, component: Component<P> & P) => void) {\n    const result = [];\n    for (const entity of Object.keys(this.lookup)) {\n      const entityInNum = Number(entity);\n      const componentIndex = this.lookup[entityInNum];\n      result.push(callback(entityInNum, this.getComponent(componentIndex)));\n    }\n    return result;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}