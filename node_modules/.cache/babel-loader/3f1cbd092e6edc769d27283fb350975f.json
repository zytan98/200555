{"ast":null,"code":"import { vec2 } from '@antv/matrix-util';\n\nfunction smoothBezier(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var hasConstraint = !!constraint;\n  var prevPoint;\n  var nextPoint;\n  var min;\n  var max;\n  var nextCp0;\n  var cp1;\n  var cp0;\n\n  if (hasConstraint) {\n    min = constraint[0], max = constraint[1];\n\n    for (var i = 0, l = points.length; i < l; i += 1) {\n      var point = points[i];\n      min = vec2.min([0, 0], min, point);\n      max = vec2.max([0, 0], max, point);\n    }\n  }\n\n  for (var i = 0, len = points.length; i < len; i += 1) {\n    var point = points[i];\n\n    if (i === 0 && !isLoop) {\n      cp0 = point;\n    } else if (i === len - 1 && !isLoop) {\n      cp1 = point;\n      cps.push(cp0);\n      cps.push(cp1);\n    } else {\n      var prevIdx = [i ? i - 1 : len - 1, i - 1][isLoop ? 0 : 1];\n      prevPoint = points[prevIdx];\n      nextPoint = points[isLoop ? (i + 1) % len : i + 1];\n      var v = [0, 0];\n      v = vec2.sub(v, nextPoint, prevPoint);\n      v = vec2.scale(v, v, smooth);\n      var d0 = vec2.distance(point, prevPoint);\n      var d1 = vec2.distance(point, nextPoint);\n      var sum = d0 + d1;\n\n      if (sum !== 0) {\n        d0 /= sum;\n        d1 /= sum;\n      }\n\n      var v1 = vec2.scale([0, 0], v, -d0);\n      var v2 = vec2.scale([0, 0], v, d1);\n      cp1 = vec2.add([0, 0], point, v1);\n      nextCp0 = vec2.add([0, 0], point, v2); // 下一个控制点必须在这个点和下一个点之间\n\n      nextCp0 = vec2.min([0, 0], nextCp0, vec2.max([0, 0], nextPoint, point));\n      nextCp0 = vec2.max([0, 0], nextCp0, vec2.min([0, 0], nextPoint, point)); // 重新计算 cp1 的值\n\n      v1 = vec2.sub([0, 0], nextCp0, point);\n      v1 = vec2.scale([0, 0], v1, -d0 / d1);\n      cp1 = vec2.add([0, 0], point, v1); // 上一个控制点必须要在上一个点和这一个点之间\n\n      cp1 = vec2.min([0, 0], cp1, vec2.max([0, 0], prevPoint, point));\n      cp1 = vec2.max([0, 0], cp1, vec2.min([0, 0], prevPoint, point)); // 重新计算 nextCp0 的值\n\n      v2 = vec2.sub([0, 0], point, cp1);\n      v2 = vec2.scale([0, 0], v2, d1 / d0);\n      nextCp0 = vec2.add([0, 0], point, v2);\n\n      if (hasConstraint) {\n        cp1 = vec2.max([0, 0], cp1, min);\n        cp1 = vec2.min([0, 0], cp1, max);\n        nextCp0 = vec2.max([0, 0], nextCp0, min);\n        nextCp0 = vec2.min([0, 0], nextCp0, max);\n      }\n\n      cps.push(cp0);\n      cps.push(cp1);\n      cp0 = nextCp0;\n    }\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n/**\n * create bezier spline from catmull rom spline\n * @param {Array} crp Catmull Rom Points\n * @param {boolean} z Spline is loop\n * @param {Array} constraint Constraint\n */\n\n\nfunction catmullRom2Bezier(crp, z, constraint) {\n  if (z === void 0) {\n    z = false;\n  }\n\n  if (constraint === void 0) {\n    constraint = [[0, 0], [1, 1]];\n  }\n\n  var isLoop = !!z;\n  var pointList = [];\n\n  for (var i = 0, l = crp.length; i < l; i += 2) {\n    pointList.push([crp[i], crp[i + 1]]);\n  }\n\n  var controlPointList = smoothBezier(pointList, 0.4, isLoop, constraint);\n  var len = pointList.length;\n  var d1 = [];\n  var cp1;\n  var cp2;\n  var p;\n\n  for (var i = 0; i < len - 1; i += 1) {\n    cp1 = controlPointList[i * 2];\n    cp2 = controlPointList[i * 2 + 1];\n    p = pointList[i + 1];\n    d1.push(['C', cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]]);\n  }\n\n  if (isLoop) {\n    cp1 = controlPointList[len];\n    cp2 = controlPointList[len + 1];\n    p = pointList[0];\n    d1.push(['C', cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]]);\n  }\n\n  return d1;\n}\n\nexport default catmullRom2Bezier;","map":{"version":3,"sources":["../src/catmull-rom-2-bezier.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { vec2 } from '@antv/matrix-util';\nfunction smoothBezier(points, smooth, isLoop, constraint) {\n    var cps = [];\n    var hasConstraint = !!constraint;\n    var prevPoint;\n    var nextPoint;\n    var min;\n    var max;\n    var nextCp0;\n    var cp1;\n    var cp0;\n    if (hasConstraint) {\n        min = constraint[0], max = constraint[1];\n        for (var i = 0, l = points.length; i < l; i += 1) {\n            var point = points[i];\n            min = vec2.min([0, 0], min, point);\n            max = vec2.max([0, 0], max, point);\n        }\n    }\n    for (var i = 0, len = points.length; i < len; i += 1) {\n        var point = points[i];\n        if (i === 0 && !isLoop) {\n            cp0 = point;\n        }\n        else if (i === len - 1 && !isLoop) {\n            cp1 = point;\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n        else {\n            var prevIdx = [i ? i - 1 : len - 1, i - 1][isLoop ? 0 : 1];\n            prevPoint = points[prevIdx];\n            nextPoint = points[isLoop ? (i + 1) % len : i + 1];\n            var v = [0, 0];\n            v = vec2.sub(v, nextPoint, prevPoint);\n            v = vec2.scale(v, v, smooth);\n            var d0 = vec2.distance(point, prevPoint);\n            var d1 = vec2.distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n            var v1 = vec2.scale([0, 0], v, -d0);\n            var v2 = vec2.scale([0, 0], v, d1);\n            cp1 = vec2.add([0, 0], point, v1);\n            nextCp0 = vec2.add([0, 0], point, v2);\n            // 下一个控制点必须在这个点和下一个点之间\n            nextCp0 = vec2.min([0, 0], nextCp0, vec2.max([0, 0], nextPoint, point));\n            nextCp0 = vec2.max([0, 0], nextCp0, vec2.min([0, 0], nextPoint, point));\n            // 重新计算 cp1 的值\n            v1 = vec2.sub([0, 0], nextCp0, point);\n            v1 = vec2.scale([0, 0], v1, -d0 / d1);\n            cp1 = vec2.add([0, 0], point, v1);\n            // 上一个控制点必须要在上一个点和这一个点之间\n            cp1 = vec2.min([0, 0], cp1, vec2.max([0, 0], prevPoint, point));\n            cp1 = vec2.max([0, 0], cp1, vec2.min([0, 0], prevPoint, point));\n            // 重新计算 nextCp0 的值\n            v2 = vec2.sub([0, 0], point, cp1);\n            v2 = vec2.scale([0, 0], v2, d1 / d0);\n            nextCp0 = vec2.add([0, 0], point, v2);\n            if (hasConstraint) {\n                cp1 = vec2.max([0, 0], cp1, min);\n                cp1 = vec2.min([0, 0], cp1, max);\n                nextCp0 = vec2.max([0, 0], nextCp0, min);\n                nextCp0 = vec2.min([0, 0], nextCp0, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n            cp0 = nextCp0;\n        }\n    }\n    if (isLoop) {\n        cps.push(cps.shift());\n    }\n    return cps;\n}\n/**\n * create bezier spline from catmull rom spline\n * @param {Array} crp Catmull Rom Points\n * @param {boolean} z Spline is loop\n * @param {Array} constraint Constraint\n */\nfunction catmullRom2Bezier(crp, z, constraint) {\n    if (z === void 0) { z = false; }\n    if (constraint === void 0) { constraint = [\n        [0, 0],\n        [1, 1],\n    ]; }\n    var isLoop = !!z;\n    var pointList = [];\n    for (var i = 0, l = crp.length; i < l; i += 2) {\n        pointList.push([crp[i], crp[i + 1]]);\n    }\n    var controlPointList = smoothBezier(pointList, 0.4, isLoop, constraint);\n    var len = pointList.length;\n    var d1 = [];\n    var cp1;\n    var cp2;\n    var p;\n    for (var i = 0; i < len - 1; i += 1) {\n        cp1 = controlPointList[i * 2];\n        cp2 = controlPointList[i * 2 + 1];\n        p = pointList[i + 1];\n        d1.push(['C', cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]]);\n    }\n    if (isLoop) {\n        cp1 = controlPointList[len];\n        cp2 = controlPointList[len + 1];\n        p = pointList[0];\n        d1.push(['C', cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]]);\n    }\n    return d1;\n}\nexport default catmullRom2Bezier;\n//# sourceMappingURL=catmull-rom-2-bezier.js.map"]},"metadata":{},"sourceType":"module"}