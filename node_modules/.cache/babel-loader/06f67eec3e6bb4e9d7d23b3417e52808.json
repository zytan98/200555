{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { isFunction, isString, isNil, get, isArray, isNumber, each, toString, isEmpty } from '@antv/util';\nimport { legend, animation, theme, state, annotation } from '../../adaptor/common';\nimport { getMappingFunction } from '../../adaptor/geometries/base';\nimport { interval } from '../../adaptor/geometries';\nimport { pattern } from '../../adaptor/pattern';\nimport { getLocale } from '../../core/locale';\nimport { flow, template, transformLabel, deepAssign, renderStatistic, processIllegalData } from '../../utils';\nimport { DEFAULT_OPTIONS } from './contants';\nimport { adaptOffset, getTotalValue, isAllZero } from './utils';\nimport { PIE_STATISTIC } from './interactions';\n/**\n * 字段\n * @param params\n */\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var data = options.data,\n      angleField = options.angleField,\n      colorField = options.colorField,\n      color = options.color,\n      pieStyle = options.pieStyle; // 处理不合法的数据\n\n  var processData = processIllegalData(data, angleField);\n\n  if (isAllZero(processData, angleField)) {\n    // 数据全 0 处理，调整 position 映射\n    var percentageField_1 = '$$percentage$$';\n    processData = processData.map(function (d) {\n      var _a;\n\n      return __assign(__assign({}, d), (_a = {}, _a[percentageField_1] = 1 / processData.length, _a));\n    });\n    chart.data(processData);\n    var p = deepAssign({}, params, {\n      options: {\n        xField: '1',\n        yField: percentageField_1,\n        seriesField: colorField,\n        isStack: true,\n        interval: {\n          color: color,\n          style: pieStyle\n        },\n        args: {\n          zIndexReversed: true\n        }\n      }\n    });\n    interval(p);\n  } else {\n    chart.data(processData);\n    var p = deepAssign({}, params, {\n      options: {\n        xField: '1',\n        yField: angleField,\n        seriesField: colorField,\n        isStack: true,\n        interval: {\n          color: color,\n          style: pieStyle\n        },\n        args: {\n          zIndexReversed: true\n        }\n      }\n    });\n    interval(p);\n  }\n\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\n\n\nfunction meta(params) {\n  var _a;\n\n  var chart = params.chart,\n      options = params.options;\n  var meta = options.meta,\n      colorField = options.colorField; // meta 直接是 scale 的信息\n\n  var scales = deepAssign({}, meta);\n  chart.scale(scales, (_a = {}, _a[colorField] = {\n    type: 'cat'\n  }, _a));\n  return params;\n}\n/**\n * coord 配置\n * @param params\n */\n\n\nfunction coordinate(params) {\n  var chart = params.chart,\n      options = params.options;\n  var radius = options.radius,\n      innerRadius = options.innerRadius,\n      startAngle = options.startAngle,\n      endAngle = options.endAngle;\n  chart.coordinate({\n    type: 'theta',\n    cfg: {\n      radius: radius,\n      innerRadius: innerRadius,\n      startAngle: startAngle,\n      endAngle: endAngle\n    }\n  });\n  return params;\n}\n/**\n * label 配置\n * @param params\n */\n\n\nfunction label(params) {\n  var chart = params.chart,\n      options = params.options;\n  var label = options.label,\n      colorField = options.colorField,\n      angleField = options.angleField;\n  var geometry = chart.geometries[0]; // label 为 false, 空 则不显示 label\n\n  if (!label) {\n    geometry.label(false);\n  } else {\n    var callback = label.callback,\n        cfg = __rest(label, [\"callback\"]);\n\n    var labelCfg = transformLabel(cfg); // ① 提供模板字符串的 label content 配置\n\n    if (labelCfg.content) {\n      var content_1 = labelCfg.content;\n\n      labelCfg.content = function (data, dataum, index) {\n        var name = data[colorField];\n        var value = data[angleField]; // dymatic get scale, scale is ready this time\n\n        var angleScale = chart.getScaleByField(angleField);\n        var percent = angleScale === null || angleScale === void 0 ? void 0 : angleScale.scale(value);\n        return isFunction(content_1) ? // append pecent (number) to data, users can get origin data from `dataum._origin`\n        content_1(__assign(__assign({}, data), {\n          percent: percent\n        }), dataum, index) : isString(content_1) ? template(content_1, {\n          value: value,\n          name: name,\n          // percentage (string), default keep 2\n          percentage: isNumber(percent) && !isNil(value) ? (percent * 100).toFixed(2) + \"%\" : null\n        }) : content_1;\n      };\n    }\n\n    var LABEL_LAYOUT_TYPE_MAP = {\n      inner: '',\n      outer: 'pie-outer',\n      spider: 'pie-spider'\n    };\n    var labelLayoutType = labelCfg.type ? LABEL_LAYOUT_TYPE_MAP[labelCfg.type] : 'pie-outer';\n    var labelLayoutCfg = labelCfg.layout ? !isArray(labelCfg.layout) ? [labelCfg.layout] : labelCfg.layout : [];\n    labelCfg.layout = (labelLayoutType ? [{\n      type: labelLayoutType\n    }] : []).concat(labelLayoutCfg);\n    geometry.label({\n      // fix: could not create scale, when field is undefined（attributes 中的 fields 定义都会被用来创建 scale）\n      fields: colorField ? [angleField, colorField] : [angleField],\n      callback: callback,\n      cfg: __assign(__assign({}, labelCfg), {\n        offset: adaptOffset(labelCfg.type, labelCfg.offset),\n        type: 'pie'\n      })\n    });\n  }\n\n  return params;\n}\n/**\n * statistic options 处理\n * 1. 默认继承 default options 的样式\n * 2. 默认使用 meta 的 formatter\n */\n\n\nexport function transformStatisticOptions(options) {\n  var innerRadius = options.innerRadius,\n      statistic = options.statistic,\n      angleField = options.angleField,\n      colorField = options.colorField,\n      meta = options.meta,\n      locale = options.locale;\n  var i18n = getLocale(locale);\n\n  if (innerRadius && statistic) {\n    var _a = deepAssign({}, DEFAULT_OPTIONS.statistic, statistic),\n        titleOpt_1 = _a.title,\n        contentOpt_1 = _a.content;\n\n    if (titleOpt_1 !== false) {\n      titleOpt_1 = deepAssign({}, {\n        formatter: function (datum) {\n          // 交互中\n          if (datum) {\n            return datum[colorField];\n          }\n\n          return !isNil(titleOpt_1.content) ? titleOpt_1.content : i18n.get(['statistic', 'total']);\n        }\n      }, titleOpt_1);\n    }\n\n    if (contentOpt_1 !== false) {\n      contentOpt_1 = deepAssign({}, {\n        formatter: function (datum, data) {\n          var dataValue = datum ? datum[angleField] : getTotalValue(data, angleField);\n\n          var metaFormatter = get(meta, [angleField, 'formatter']) || function (v) {\n            return v;\n          }; // 交互中\n\n\n          if (datum) {\n            return metaFormatter(dataValue);\n          }\n\n          return !isNil(contentOpt_1.content) ? contentOpt_1.content : metaFormatter(dataValue);\n        }\n      }, contentOpt_1);\n    }\n\n    return deepAssign({}, {\n      statistic: {\n        title: titleOpt_1,\n        content: contentOpt_1\n      }\n    }, options);\n  }\n\n  return options;\n}\n/**\n * statistic 中心文本配置\n * @param params\n */\n\nexport function pieAnnotation(params) {\n  var chart = params.chart,\n      options = params.options;\n\n  var _a = transformStatisticOptions(options),\n      innerRadius = _a.innerRadius,\n      statistic = _a.statistic; // 先清空标注，再重新渲染\n\n\n  chart.getController('annotation').clear(true); // 先进行其他 annotations，再去渲染统计文本\n\n  flow(annotation())(params);\n  /** 中心文本 指标卡 */\n\n  if (innerRadius && statistic) {\n    renderStatistic(chart, {\n      statistic: statistic,\n      plotType: 'pie'\n    });\n  }\n\n  return params;\n}\n/**\n * 饼图 tooltip 配置\n * 1. 强制 tooltip.shared 为 false\n * @param params\n */\n\nfunction tooltip(params) {\n  var chart = params.chart,\n      options = params.options;\n  var tooltip = options.tooltip,\n      colorField = options.colorField,\n      angleField = options.angleField,\n      data = options.data;\n\n  if (tooltip === false) {\n    chart.tooltip(tooltip);\n  } else {\n    chart.tooltip(deepAssign({}, tooltip, {\n      shared: false\n    })); // 主要解决 all zero， 对于非 all zero 不再适用\n\n    if (isAllZero(data, angleField)) {\n      var fields = get(tooltip, 'fields');\n      var formatter = get(tooltip, 'formatter');\n\n      if (isEmpty(get(tooltip, 'fields'))) {\n        fields = [colorField, angleField];\n\n        formatter = formatter || function (datum) {\n          return {\n            name: datum[colorField],\n            value: toString(datum[angleField])\n          };\n        };\n      }\n\n      chart.geometries[0].tooltip(fields.join('*'), getMappingFunction(fields, formatter));\n    }\n  }\n\n  return params;\n}\n/**\n * Interaction 配置 (饼图特殊的 interaction, 中心文本变更的时候，需要将一些配置参数传进去）\n * @param params\n */\n\n\nexport function interaction(params) {\n  var chart = params.chart,\n      options = params.options;\n\n  var _a = transformStatisticOptions(options),\n      interactions = _a.interactions,\n      statistic = _a.statistic,\n      annotations = _a.annotations;\n\n  each(interactions, function (i) {\n    var _a, _b;\n\n    if (i.enable === false) {\n      chart.removeInteraction(i.type);\n    } else if (i.type === 'pie-statistic-active') {\n      // 只针对 start 阶段的配置，进行添加参数信息\n      var startStages_1 = [];\n\n      if (!((_a = i.cfg) === null || _a === void 0 ? void 0 : _a.start)) {\n        startStages_1 = [{\n          trigger: 'element:mouseenter',\n          action: PIE_STATISTIC + \":change\",\n          arg: {\n            statistic: statistic,\n            annotations: annotations\n          }\n        }];\n      }\n\n      each((_b = i.cfg) === null || _b === void 0 ? void 0 : _b.start, function (stage) {\n        startStages_1.push(__assign(__assign({}, stage), {\n          arg: {\n            statistic: statistic,\n            annotations: annotations\n          }\n        }));\n      });\n      chart.interaction(i.type, deepAssign({}, i.cfg, {\n        start: startStages_1\n      }));\n    } else {\n      chart.interaction(i.type, i.cfg || {});\n    }\n  });\n  return params;\n}\n/**\n * 饼图适配器\n * @param chart\n * @param options\n */\n\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(pattern('pieStyle'), geometry, meta, theme, coordinate, legend, tooltip, label, state,\n  /** 指标卡中心文本 放在下层 */\n  pieAnnotation, interaction, animation)(params);\n}","map":{"version":3,"sources":["../../../src/plots/pie/adaptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { isFunction, isString, isNil, get, isArray, isNumber, each, toString, isEmpty } from '@antv/util';\nimport { Params } from '../../core/adaptor';\nimport { legend, animation, theme, state, annotation } from '../../adaptor/common';\nimport { getMappingFunction } from '../../adaptor/geometries/base';\nimport { interval } from '../../adaptor/geometries';\nimport { pattern } from '../../adaptor/pattern';\nimport { getLocale } from '../../core/locale';\nimport { Interaction } from '../../types/interaction';\nimport { flow, template, transformLabel, deepAssign, renderStatistic, processIllegalData } from '../../utils';\nimport { Data, Datum } from '../../types';\nimport { DEFAULT_OPTIONS } from './contants';\nimport { adaptOffset, getTotalValue, isAllZero } from './utils';\nimport { PIE_STATISTIC } from './interactions';\nimport { PieOptions } from './types';\n\n/**\n * 字段\n * @param params\n */\nfunction geometry(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { data, angleField, colorField, color, pieStyle } = options;\n\n  // 处理不合法的数据\n  let processData = processIllegalData(data, angleField);\n\n  if (isAllZero(processData, angleField)) {\n    // 数据全 0 处理，调整 position 映射\n    const percentageField = '$$percentage$$';\n    processData = processData.map((d) => ({ ...d, [percentageField]: 1 / processData.length }));\n    chart.data(processData);\n\n    const p = deepAssign({}, params, {\n      options: {\n        xField: '1',\n        yField: percentageField,\n        seriesField: colorField,\n        isStack: true,\n        interval: {\n          color,\n          style: pieStyle,\n        },\n        args: {\n          zIndexReversed: true,\n        },\n      },\n    });\n\n    interval(p);\n  } else {\n    chart.data(processData);\n\n    const p = deepAssign({}, params, {\n      options: {\n        xField: '1',\n        yField: angleField,\n        seriesField: colorField,\n        isStack: true,\n        interval: {\n          color,\n          style: pieStyle,\n        },\n        args: {\n          zIndexReversed: true,\n        },\n      },\n    });\n\n    interval(p);\n  }\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { meta, colorField } = options;\n\n  // meta 直接是 scale 的信息\n  const scales = deepAssign({}, meta);\n  chart.scale(scales, {\n    [colorField]: { type: 'cat' },\n  });\n\n  return params;\n}\n\n/**\n * coord 配置\n * @param params\n */\nfunction coordinate(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { radius, innerRadius, startAngle, endAngle } = options;\n\n  chart.coordinate({\n    type: 'theta',\n    cfg: {\n      radius,\n      innerRadius,\n      startAngle,\n      endAngle,\n    },\n  });\n\n  return params;\n}\n\n/**\n * label 配置\n * @param params\n */\nfunction label(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { label, colorField, angleField } = options;\n\n  const geometry = chart.geometries[0];\n  // label 为 false, 空 则不显示 label\n  if (!label) {\n    geometry.label(false);\n  } else {\n    const { callback, ...cfg } = label;\n    const labelCfg = transformLabel(cfg);\n\n    // ① 提供模板字符串的 label content 配置\n    if (labelCfg.content) {\n      const { content } = labelCfg;\n      labelCfg.content = (data: object, dataum: any, index: number) => {\n        const name = data[colorField];\n        const value = data[angleField];\n        // dymatic get scale, scale is ready this time\n        const angleScale = chart.getScaleByField(angleField);\n        const percent = angleScale?.scale(value);\n        return isFunction(content)\n          ? // append pecent (number) to data, users can get origin data from `dataum._origin`\n            content({ ...data, percent }, dataum, index)\n          : isString(content)\n          ? template(content as string, {\n              value,\n              name,\n              // percentage (string), default keep 2\n              percentage: isNumber(percent) && !isNil(value) ? `${(percent * 100).toFixed(2)}%` : null,\n            })\n          : content;\n      };\n    }\n\n    const LABEL_LAYOUT_TYPE_MAP = {\n      inner: '',\n      outer: 'pie-outer',\n      spider: 'pie-spider',\n    };\n    const labelLayoutType = labelCfg.type ? LABEL_LAYOUT_TYPE_MAP[labelCfg.type] : 'pie-outer';\n    const labelLayoutCfg = labelCfg.layout ? (!isArray(labelCfg.layout) ? [labelCfg.layout] : labelCfg.layout) : [];\n    labelCfg.layout = (labelLayoutType ? [{ type: labelLayoutType }] : []).concat(labelLayoutCfg);\n\n    geometry.label({\n      // fix: could not create scale, when field is undefined（attributes 中的 fields 定义都会被用来创建 scale）\n      fields: colorField ? [angleField, colorField] : [angleField],\n      callback,\n      cfg: {\n        ...labelCfg,\n        offset: adaptOffset(labelCfg.type, labelCfg.offset),\n        type: 'pie',\n      },\n    });\n  }\n  return params;\n}\n\n/**\n * statistic options 处理\n * 1. 默认继承 default options 的样式\n * 2. 默认使用 meta 的 formatter\n */\nexport function transformStatisticOptions(options: PieOptions): PieOptions {\n  const { innerRadius, statistic, angleField, colorField, meta, locale } = options;\n\n  const i18n = getLocale(locale);\n\n  if (innerRadius && statistic) {\n    let { title: titleOpt, content: contentOpt } = deepAssign({}, DEFAULT_OPTIONS.statistic, statistic);\n    if (titleOpt !== false) {\n      titleOpt = deepAssign(\n        {},\n        {\n          formatter: (datum: Datum) => {\n            // 交互中\n            if (datum) {\n              return datum[colorField];\n            }\n            return !isNil(titleOpt.content) ? titleOpt.content : i18n.get(['statistic', 'total']);\n          },\n        },\n        titleOpt\n      );\n    }\n    if (contentOpt !== false) {\n      contentOpt = deepAssign(\n        {},\n        {\n          formatter: (datum: Datum, data: Data) => {\n            const dataValue = datum ? datum[angleField] : getTotalValue(data, angleField);\n            const metaFormatter = get(meta, [angleField, 'formatter']) || ((v) => v);\n            // 交互中\n            if (datum) {\n              return metaFormatter(dataValue);\n            }\n            return !isNil(contentOpt.content) ? contentOpt.content : metaFormatter(dataValue);\n          },\n        },\n        contentOpt\n      );\n    }\n\n    return deepAssign({}, { statistic: { title: titleOpt, content: contentOpt } }, options);\n  }\n  return options;\n}\n\n/**\n * statistic 中心文本配置\n * @param params\n */\nexport function pieAnnotation(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { innerRadius, statistic } = transformStatisticOptions(options);\n  // 先清空标注，再重新渲染\n  chart.getController('annotation').clear(true);\n\n  // 先进行其他 annotations，再去渲染统计文本\n  flow(annotation())(params);\n\n  /** 中心文本 指标卡 */\n  if (innerRadius && statistic) {\n    renderStatistic(chart, { statistic, plotType: 'pie' });\n  }\n\n  return params;\n}\n\n/**\n * 饼图 tooltip 配置\n * 1. 强制 tooltip.shared 为 false\n * @param params\n */\nfunction tooltip(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { tooltip, colorField, angleField, data } = options;\n\n  if (tooltip === false) {\n    chart.tooltip(tooltip);\n  } else {\n    chart.tooltip(deepAssign({}, tooltip, { shared: false }));\n\n    // 主要解决 all zero， 对于非 all zero 不再适用\n    if (isAllZero(data, angleField)) {\n      let fields = get(tooltip, 'fields');\n      let formatter = get(tooltip, 'formatter');\n\n      if (isEmpty(get(tooltip, 'fields'))) {\n        fields = [colorField, angleField];\n        formatter = formatter || ((datum) => ({ name: datum[colorField], value: toString(datum[angleField]) }));\n      }\n      chart.geometries[0].tooltip(fields.join('*'), getMappingFunction(fields, formatter));\n    }\n  }\n\n  return params;\n}\n\n/**\n * Interaction 配置 (饼图特殊的 interaction, 中心文本变更的时候，需要将一些配置参数传进去）\n * @param params\n */\nexport function interaction(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { interactions, statistic, annotations } = transformStatisticOptions(options);\n\n  each(interactions, (i: Interaction) => {\n    if (i.enable === false) {\n      chart.removeInteraction(i.type);\n    } else if (i.type === 'pie-statistic-active') {\n      // 只针对 start 阶段的配置，进行添加参数信息\n      let startStages = [];\n      if (!i.cfg?.start) {\n        startStages = [\n          {\n            trigger: 'element:mouseenter',\n            action: `${PIE_STATISTIC}:change`,\n            arg: { statistic, annotations },\n          },\n        ];\n      }\n      each(i.cfg?.start, (stage) => {\n        startStages.push({ ...stage, arg: { statistic, annotations } });\n      });\n      chart.interaction(i.type, deepAssign({}, i.cfg, { start: startStages }));\n    } else {\n      chart.interaction(i.type, i.cfg || {});\n    }\n  });\n\n  return params;\n}\n\n/**\n * 饼图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<PieOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow<Params<PieOptions>>(\n    pattern('pieStyle'),\n    geometry,\n    meta,\n    theme,\n    coordinate,\n    legend,\n    tooltip,\n    label,\n    state,\n    /** 指标卡中心文本 放在下层 */\n    pieAnnotation,\n    interaction,\n    animation\n  )(params);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}