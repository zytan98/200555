{"ast":null,"code":"// https://github.com/HarryStevens/d3-regression#readme Version 1.3.9. Copyright 2021 Harry Stevens.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = global || self, factory(global.d3 = {}));\n})(this, function (exports) {\n  'use strict';\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  } // Adapted from vega-statistics by Jeffrey Heer\n  // License: https://github.com/vega/vega/blob/f058b099decad9db78301405dd0d2e9d8ba3d51a/LICENSE\n  // Source: https://github.com/vega/vega/blob/f058b099decad9db78301405dd0d2e9d8ba3d51a/packages/vega-statistics/src/regression/points.js\n\n\n  function points(data, x, y, sort) {\n    data = data.filter(function (d, i) {\n      var u = x(d, i),\n          v = y(d, i);\n      return u != null && isFinite(u) && v != null && isFinite(v);\n    });\n\n    if (sort) {\n      data.sort(function (a, b) {\n        return x(a) - x(b);\n      });\n    }\n\n    var n = data.length,\n        X = new Float64Array(n),\n        Y = new Float64Array(n); // extract values, calculate means\n\n    var ux = 0,\n        uy = 0,\n        xv,\n        yv,\n        d;\n\n    for (var i = 0; i < n;) {\n      d = data[i];\n      X[i] = xv = +x(d, i, data);\n      Y[i] = yv = +y(d, i, data);\n      ++i;\n      ux += (xv - ux) / i;\n      uy += (yv - uy) / i;\n    } // mean center the data\n\n\n    for (var _i = 0; _i < n; ++_i) {\n      X[_i] -= ux;\n      Y[_i] -= uy;\n    }\n\n    return [X, Y, ux, uy];\n  }\n\n  function visitPoints(data, x, y, cb) {\n    var iterations = 0;\n\n    for (var i = 0, n = data.length; i < n; i++) {\n      var d = data[i],\n          dx = +x(d, i, data),\n          dy = +y(d, i, data);\n\n      if (dx != null && isFinite(dx) && dy != null && isFinite(dy)) {\n        cb(dx, dy, iterations++);\n      }\n    }\n  } // return the coefficient of determination, or R squared.\n\n\n  function determination(data, x, y, uY, predict) {\n    var SSE = 0,\n        SST = 0;\n    visitPoints(data, x, y, function (dx, dy) {\n      var sse = dy - predict(dx),\n          sst = dy - uY;\n      SSE += sse * sse;\n      SST += sst * sst;\n    });\n    return 1 - SSE / SST;\n  } // Returns the angle of a line in degrees.\n\n\n  function angle(line) {\n    return Math.atan2(line[1][1] - line[0][1], line[1][0] - line[0][0]) * 180 / Math.PI;\n  } // Returns the midpoint of a line.\n\n\n  function midpoint(line) {\n    return [(line[0][0] + line[1][0]) / 2, (line[0][1] + line[1][1]) / 2];\n  } // returns a smooth line.\n\n\n  function interpose(xmin, xmax, predict) {\n    var l = Math.log(xmax - xmin) * Math.LOG10E + 1 | 0;\n    var precision = 1 * Math.pow(10, -l / 2 - 1),\n        maxIter = 1e4;\n    var points = [px(xmin), px(xmax)],\n        iter = 0;\n\n    while (find(points) && iter < maxIter) {}\n\n    return points;\n\n    function px(x) {\n      return [x, predict(x)];\n    }\n\n    function find(points) {\n      iter++;\n      var n = points.length;\n      var found = false;\n\n      for (var i = 0; i < n - 1; i++) {\n        var p0 = points[i],\n            p1 = points[i + 1],\n            m = midpoint([p0, p1]),\n            mp = px(m[0]),\n            a0 = angle([p0, m]),\n            a1 = angle([p0, mp]),\n            a = Math.abs(a0 - a1);\n\n        if (a > precision) {\n          points.splice(i + 1, 0, mp);\n          found = true;\n        }\n      }\n\n      return found;\n    }\n  } // Ordinary Least Squares from vega-statistics by Jeffrey Heer\n  // License: https://github.com/vega/vega/blob/f058b099decad9db78301405dd0d2e9d8ba3d51a/LICENSE\n  // Source: https://github.com/vega/vega/blob/f058b099decad9db78301405dd0d2e9d8ba3d51a/packages/vega-statistics/src/regression/ols.js\n\n\n  function ols(uX, uY, uXY, uX2) {\n    var delta = uX2 - uX * uX,\n        slope = Math.abs(delta) < 1e-24 ? 0 : (uXY - uX * uY) / delta,\n        intercept = uY - slope * uX;\n    return [intercept, slope];\n  }\n\n  function exponential() {\n    var x = function x(d) {\n      return d[0];\n    },\n        y = function y(d) {\n      return d[1];\n    },\n        domain;\n\n    function exponential(data) {\n      var n = 0,\n          Y = 0,\n          YL = 0,\n          XY = 0,\n          XYL = 0,\n          X2Y = 0,\n          xmin = domain ? +domain[0] : Infinity,\n          xmax = domain ? +domain[1] : -Infinity;\n      visitPoints(data, x, y, function (dx, dy) {\n        var ly = Math.log(dy),\n            xy = dx * dy;\n        ++n;\n        Y += (dy - Y) / n;\n        XY += (xy - XY) / n;\n        X2Y += (dx * xy - X2Y) / n;\n        YL += (dy * ly - YL) / n;\n        XYL += (xy * ly - XYL) / n;\n\n        if (!domain) {\n          if (dx < xmin) xmin = dx;\n          if (dx > xmax) xmax = dx;\n        }\n      });\n\n      var _ols = ols(XY / Y, YL / Y, XYL / Y, X2Y / Y),\n          _ols2 = _slicedToArray(_ols, 2),\n          a = _ols2[0],\n          b = _ols2[1];\n\n      a = Math.exp(a);\n\n      var fn = function fn(x) {\n        return a * Math.exp(b * x);\n      },\n          out = interpose(xmin, xmax, fn);\n\n      out.a = a;\n      out.b = b;\n      out.predict = fn;\n      out.rSquared = determination(data, x, y, Y, fn);\n      return out;\n    }\n\n    exponential.domain = function (arr) {\n      return arguments.length ? (domain = arr, exponential) : domain;\n    };\n\n    exponential.x = function (fn) {\n      return arguments.length ? (x = fn, exponential) : x;\n    };\n\n    exponential.y = function (fn) {\n      return arguments.length ? (y = fn, exponential) : y;\n    };\n\n    return exponential;\n  }\n\n  function linear() {\n    var x = function x(d) {\n      return d[0];\n    },\n        y = function y(d) {\n      return d[1];\n    },\n        domain;\n\n    function linear(data) {\n      var n = 0,\n          X = 0,\n          // sum of x\n      Y = 0,\n          // sum of y\n      XY = 0,\n          // sum of x * y\n      X2 = 0,\n          // sum of x * x\n      xmin = domain ? +domain[0] : Infinity,\n          xmax = domain ? +domain[1] : -Infinity;\n      visitPoints(data, x, y, function (dx, dy) {\n        ++n;\n        X += (dx - X) / n;\n        Y += (dy - Y) / n;\n        XY += (dx * dy - XY) / n;\n        X2 += (dx * dx - X2) / n;\n\n        if (!domain) {\n          if (dx < xmin) xmin = dx;\n          if (dx > xmax) xmax = dx;\n        }\n      });\n\n      var _ols = ols(X, Y, XY, X2),\n          _ols2 = _slicedToArray(_ols, 2),\n          intercept = _ols2[0],\n          slope = _ols2[1],\n          fn = function fn(x) {\n        return slope * x + intercept;\n      },\n          out = [[xmin, fn(xmin)], [xmax, fn(xmax)]];\n\n      out.a = slope;\n      out.b = intercept;\n      out.predict = fn;\n      out.rSquared = determination(data, x, y, Y, fn);\n      return out;\n    }\n\n    linear.domain = function (arr) {\n      return arguments.length ? (domain = arr, linear) : domain;\n    };\n\n    linear.x = function (fn) {\n      return arguments.length ? (x = fn, linear) : x;\n    };\n\n    linear.y = function (fn) {\n      return arguments.length ? (y = fn, linear) : y;\n    };\n\n    return linear;\n  } // Returns the medium value of an array of numbers.\n\n\n  function median(arr) {\n    arr.sort(function (a, b) {\n      return a - b;\n    });\n    var i = arr.length / 2;\n    return i % 1 === 0 ? (arr[i - 1] + arr[i]) / 2 : arr[Math.floor(i)];\n  }\n\n  var maxiters = 2,\n      epsilon = 1e-12;\n\n  function loess() {\n    var x = function x(d) {\n      return d[0];\n    },\n        y = function y(d) {\n      return d[1];\n    },\n        bandwidth = .3;\n\n    function loess(data) {\n      var _points = points(data, x, y, true),\n          _points2 = _slicedToArray(_points, 4),\n          xv = _points2[0],\n          yv = _points2[1],\n          ux = _points2[2],\n          uy = _points2[3],\n          n = xv.length,\n          bw = Math.max(2, ~~(bandwidth * n)),\n          yhat = new Float64Array(n),\n          residuals = new Float64Array(n),\n          robustWeights = new Float64Array(n).fill(1);\n\n      for (var iter = -1; ++iter <= maxiters;) {\n        var interval = [0, bw - 1];\n\n        for (var i = 0; i < n; ++i) {\n          var dx = xv[i],\n              i0 = interval[0],\n              i1 = interval[1],\n              edge = dx - xv[i0] > xv[i1] - dx ? i0 : i1;\n          var W = 0,\n              X = 0,\n              Y = 0,\n              XY = 0,\n              X2 = 0,\n              denom = 1 / Math.abs(xv[edge] - dx || 1); // Avoid singularity\n\n          for (var k = i0; k <= i1; ++k) {\n            var xk = xv[k],\n                yk = yv[k],\n                w = tricube(Math.abs(dx - xk) * denom) * robustWeights[k],\n                xkw = xk * w;\n            W += w;\n            X += xkw;\n            Y += yk * w;\n            XY += yk * xkw;\n            X2 += xk * xkw;\n          } // Linear regression fit\n\n\n          var _ols = ols(X / W, Y / W, XY / W, X2 / W),\n              _ols2 = _slicedToArray(_ols, 2),\n              a = _ols2[0],\n              b = _ols2[1];\n\n          yhat[i] = a + b * dx;\n          residuals[i] = Math.abs(yv[i] - yhat[i]);\n          updateInterval(xv, i + 1, interval);\n        }\n\n        if (iter === maxiters) {\n          break;\n        }\n\n        var medianResidual = median(residuals);\n        if (Math.abs(medianResidual) < epsilon) break;\n\n        for (var _i = 0, arg, _w; _i < n; ++_i) {\n          arg = residuals[_i] / (6 * medianResidual); // Default to epsilon (rather than zero) for large deviations\n          // Keeping weights tiny but non-zero prevents singularites\n\n          robustWeights[_i] = arg >= 1 ? epsilon : (_w = 1 - arg * arg) * _w;\n        }\n      }\n\n      return output(xv, yhat, ux, uy);\n    }\n\n    loess.bandwidth = function (bw) {\n      return arguments.length ? (bandwidth = bw, loess) : bandwidth;\n    };\n\n    loess.x = function (fn) {\n      return arguments.length ? (x = fn, loess) : x;\n    };\n\n    loess.y = function (fn) {\n      return arguments.length ? (y = fn, loess) : y;\n    };\n\n    return loess;\n  } // Weighting kernel for local regression\n\n\n  function tricube(x) {\n    return (x = 1 - x * x * x) * x * x;\n  } // Advance sliding window interval of nearest neighbors\n\n\n  function updateInterval(xv, i, interval) {\n    var val = xv[i],\n        left = interval[0],\n        right = interval[1] + 1;\n    if (right >= xv.length) return; // Step right if distance to new right edge is <= distance to old left edge\n    // Step when distance is equal to ensure movement over duplicate x values\n\n    while (i > left && xv[right] - val <= val - xv[left]) {\n      interval[0] = ++left;\n      interval[1] = right;\n      ++right;\n    }\n  } // Generate smoothed output points\n  // Average points with repeated x values\n\n\n  function output(xv, yhat, ux, uy) {\n    var n = xv.length,\n        out = [];\n    var i = 0,\n        cnt = 0,\n        prev = [],\n        v;\n\n    for (; i < n; ++i) {\n      v = xv[i] + ux;\n\n      if (prev[0] === v) {\n        // Average output values via online update\n        prev[1] += (yhat[i] - prev[1]) / ++cnt;\n      } else {\n        // Add new output point\n        cnt = 0;\n        prev[1] += uy;\n        prev = [v, yhat[i]];\n        out.push(prev);\n      }\n    }\n\n    prev[1] += uy;\n    return out;\n  }\n\n  function logarithmic() {\n    var x = function x(d) {\n      return d[0];\n    },\n        y = function y(d) {\n      return d[1];\n    },\n        base = Math.E,\n        domain;\n\n    function logarithmic(data) {\n      var n = 0,\n          X = 0,\n          Y = 0,\n          XY = 0,\n          X2 = 0,\n          xmin = domain ? +domain[0] : Infinity,\n          xmax = domain ? +domain[1] : -Infinity,\n          lb = Math.log(base);\n      visitPoints(data, x, y, function (dx, dy) {\n        var lx = Math.log(dx) / lb;\n        ++n;\n        X += (lx - X) / n;\n        Y += (dy - Y) / n;\n        XY += (lx * dy - XY) / n;\n        X2 += (lx * lx - X2) / n;\n\n        if (!domain) {\n          if (dx < xmin) xmin = dx;\n          if (dx > xmax) xmax = dx;\n        }\n      });\n\n      var _ols = ols(X, Y, XY, X2),\n          _ols2 = _slicedToArray(_ols, 2),\n          intercept = _ols2[0],\n          slope = _ols2[1],\n          fn = function fn(x) {\n        return slope * Math.log(x) / lb + intercept;\n      },\n          out = interpose(xmin, xmax, fn);\n\n      out.a = slope;\n      out.b = intercept;\n      out.predict = fn;\n      out.rSquared = determination(data, x, y, Y, fn);\n      return out;\n    }\n\n    logarithmic.domain = function (arr) {\n      return arguments.length ? (domain = arr, logarithmic) : domain;\n    };\n\n    logarithmic.x = function (fn) {\n      return arguments.length ? (x = fn, logarithmic) : x;\n    };\n\n    logarithmic.y = function (fn) {\n      return arguments.length ? (y = fn, logarithmic) : y;\n    };\n\n    logarithmic.base = function (n) {\n      return arguments.length ? (base = n, logarithmic) : base;\n    };\n\n    return logarithmic;\n  }\n\n  function quad() {\n    var x = function x(d) {\n      return d[0];\n    },\n        y = function y(d) {\n      return d[1];\n    },\n        domain;\n\n    function quadratic(data) {\n      var _points = points(data, x, y),\n          _points2 = _slicedToArray(_points, 4),\n          xv = _points2[0],\n          yv = _points2[1],\n          ux = _points2[2],\n          uy = _points2[3],\n          n = xv.length;\n\n      var X2 = 0,\n          X3 = 0,\n          X4 = 0,\n          XY = 0,\n          X2Y = 0,\n          i,\n          dx,\n          dy,\n          x2;\n\n      for (i = 0; i < n;) {\n        dx = xv[i];\n        dy = yv[i++];\n        x2 = dx * dx;\n        X2 += (x2 - X2) / i;\n        X3 += (x2 * dx - X3) / i;\n        X4 += (x2 * x2 - X4) / i;\n        XY += (dx * dy - XY) / i;\n        X2Y += (x2 * dy - X2Y) / i;\n      }\n\n      var Y = 0,\n          n0 = 0,\n          xmin = domain ? +domain[0] : Infinity,\n          xmax = domain ? +domain[1] : -Infinity;\n      visitPoints(data, x, y, function (dx, dy) {\n        n0++;\n        Y += (dy - Y) / n0;\n\n        if (!domain) {\n          if (dx < xmin) xmin = dx;\n          if (dx > xmax) xmax = dx;\n        }\n      });\n\n      var X2X2 = X4 - X2 * X2,\n          d = X2 * X2X2 - X3 * X3,\n          a = (X2Y * X2 - XY * X3) / d,\n          b = (XY * X2X2 - X2Y * X3) / d,\n          c = -a * X2,\n          fn = function fn(x) {\n        x = x - ux;\n        return a * x * x + b * x + c + uy;\n      };\n\n      var out = interpose(xmin, xmax, fn);\n      out.a = a;\n      out.b = b - 2 * a * ux;\n      out.c = c - b * ux + a * ux * ux + uy;\n      out.predict = fn;\n      out.rSquared = determination(data, x, y, Y, fn);\n      return out;\n    }\n\n    quadratic.domain = function (arr) {\n      return arguments.length ? (domain = arr, quadratic) : domain;\n    };\n\n    quadratic.x = function (fn) {\n      return arguments.length ? (x = fn, quadratic) : x;\n    };\n\n    quadratic.y = function (fn) {\n      return arguments.length ? (y = fn, quadratic) : y;\n    };\n\n    return quadratic;\n  } // Source: https://github.com/Tom-Alexander/regression-js/blob/master/src/regression.js#L246\n  // License: https://github.com/Tom-Alexander/regression-js/blob/master/LICENSE\n  // ...with ideas from vega-statistics by Jeffrey Heer\n  // Source: https://github.com/vega/vega/blob/f21cb8792b4e0cbe2b1a3fd44b0f5db370dbaadb/packages/vega-statistics/src/regression/poly.js\n  // License: https://github.com/vega/vega/blob/f058b099decad9db78301405dd0d2e9d8ba3d51a/LICENSE\n\n\n  function polynomial() {\n    var x = function x(d) {\n      return d[0];\n    },\n        y = function y(d) {\n      return d[1];\n    },\n        order = 3,\n        domain;\n\n    function polynomial(data) {\n      // Use more efficient methods for lower orders\n      if (order === 1) {\n        var o = linear().x(x).y(y).domain(domain)(data);\n        o.coefficients = [o.b, o.a];\n        delete o.a;\n        delete o.b;\n        return o;\n      }\n\n      if (order === 2) {\n        var _o = quad().x(x).y(y).domain(domain)(data);\n\n        _o.coefficients = [_o.c, _o.b, _o.a];\n        delete _o.a;\n        delete _o.b;\n        delete _o.c;\n        return _o;\n      }\n\n      var _points = points(data, x, y),\n          _points2 = _slicedToArray(_points, 4),\n          xv = _points2[0],\n          yv = _points2[1],\n          ux = _points2[2],\n          uy = _points2[3],\n          n = xv.length,\n          lhs = [],\n          rhs = [],\n          k = order + 1;\n\n      var Y = 0,\n          n0 = 0,\n          xmin = domain ? +domain[0] : Infinity,\n          xmax = domain ? +domain[1] : -Infinity;\n      visitPoints(data, x, y, function (dx, dy) {\n        ++n0;\n        Y += (dy - Y) / n0;\n\n        if (!domain) {\n          if (dx < xmin) xmin = dx;\n          if (dx > xmax) xmax = dx;\n        }\n      });\n      var i, j, l, v, c;\n\n      for (i = 0; i < k; ++i) {\n        for (l = 0, v = 0; l < n; ++l) {\n          v += Math.pow(xv[l], i) * yv[l];\n        }\n\n        lhs.push(v);\n        c = new Float64Array(k);\n\n        for (j = 0; j < k; ++j) {\n          for (l = 0, v = 0; l < n; ++l) {\n            v += Math.pow(xv[l], i + j);\n          }\n\n          c[j] = v;\n        }\n\n        rhs.push(c);\n      }\n\n      rhs.push(lhs);\n\n      var coef = gaussianElimination(rhs),\n          fn = function fn(x) {\n        x -= ux;\n        var y = uy + coef[0] + coef[1] * x + coef[2] * x * x;\n\n        for (i = 3; i < k; ++i) {\n          y += coef[i] * Math.pow(x, i);\n        }\n\n        return y;\n      },\n          out = interpose(xmin, xmax, fn);\n\n      out.coefficients = uncenter(k, coef, -ux, uy);\n      out.predict = fn;\n      out.rSquared = determination(data, x, y, Y, fn);\n      return out;\n    }\n\n    polynomial.domain = function (arr) {\n      return arguments.length ? (domain = arr, polynomial) : domain;\n    };\n\n    polynomial.x = function (fn) {\n      return arguments.length ? (x = fn, polynomial) : x;\n    };\n\n    polynomial.y = function (fn) {\n      return arguments.length ? (y = fn, polynomial) : y;\n    };\n\n    polynomial.order = function (n) {\n      return arguments.length ? (order = n, polynomial) : order;\n    };\n\n    return polynomial;\n  }\n\n  function uncenter(k, a, x, y) {\n    var z = Array(k);\n    var i, j, v, c; // initialize to zero\n\n    for (i = 0; i < k; ++i) {\n      z[i] = 0;\n    } // polynomial expansion\n\n\n    for (i = k - 1; i >= 0; --i) {\n      v = a[i];\n      c = 1;\n      z[i] += v;\n\n      for (j = 1; j <= i; ++j) {\n        c *= (i + 1 - j) / j; // binomial coefficent\n\n        z[i - j] += v * Math.pow(x, j) * c;\n      }\n    } // bias term\n\n\n    z[0] += y;\n    return z;\n  } // Given an array for a two-dimensional matrix and the polynomial order,\n  // solve A * x = b using Gaussian elimination.\n\n\n  function gaussianElimination(matrix) {\n    var n = matrix.length - 1,\n        coef = [];\n    var i, j, k, r, t;\n\n    for (i = 0; i < n; ++i) {\n      r = i; // max row\n\n      for (j = i + 1; j < n; ++j) {\n        if (Math.abs(matrix[i][j]) > Math.abs(matrix[i][r])) {\n          r = j;\n        }\n      }\n\n      for (k = i; k < n + 1; ++k) {\n        t = matrix[k][i];\n        matrix[k][i] = matrix[k][r];\n        matrix[k][r] = t;\n      }\n\n      for (j = i + 1; j < n; ++j) {\n        for (k = n; k >= i; k--) {\n          matrix[k][j] -= matrix[k][i] * matrix[i][j] / matrix[i][i];\n        }\n      }\n    }\n\n    for (j = n - 1; j >= 0; --j) {\n      t = 0;\n\n      for (k = j + 1; k < n; ++k) {\n        t += matrix[k][j] * coef[k];\n      }\n\n      coef[j] = (matrix[n][j] - t) / matrix[j][j];\n    }\n\n    return coef;\n  }\n\n  function power() {\n    var x = function x(d) {\n      return d[0];\n    },\n        y = function y(d) {\n      return d[1];\n    },\n        domain;\n\n    function power(data) {\n      var n = 0,\n          X = 0,\n          Y = 0,\n          XY = 0,\n          X2 = 0,\n          YS = 0,\n          xmin = domain ? +domain[0] : Infinity,\n          xmax = domain ? +domain[1] : -Infinity;\n      visitPoints(data, x, y, function (dx, dy) {\n        var lx = Math.log(dx),\n            ly = Math.log(dy);\n        ++n;\n        X += (lx - X) / n;\n        Y += (ly - Y) / n;\n        XY += (lx * ly - XY) / n;\n        X2 += (lx * lx - X2) / n;\n        YS += (dy - YS) / n;\n\n        if (!domain) {\n          if (dx < xmin) xmin = dx;\n          if (dx > xmax) xmax = dx;\n        }\n      });\n\n      var _ols = ols(X, Y, XY, X2),\n          _ols2 = _slicedToArray(_ols, 2),\n          a = _ols2[0],\n          b = _ols2[1];\n\n      a = Math.exp(a);\n\n      var fn = function fn(x) {\n        return a * Math.pow(x, b);\n      },\n          out = interpose(xmin, xmax, fn);\n\n      out.a = a;\n      out.b = b;\n      out.predict = fn;\n      out.rSquared = determination(data, x, y, YS, fn);\n      return out;\n    }\n\n    power.domain = function (arr) {\n      return arguments.length ? (domain = arr, power) : domain;\n    };\n\n    power.x = function (fn) {\n      return arguments.length ? (x = fn, power) : x;\n    };\n\n    power.y = function (fn) {\n      return arguments.length ? (y = fn, power) : y;\n    };\n\n    return power;\n  }\n\n  exports.regressionExp = exponential;\n  exports.regressionLinear = linear;\n  exports.regressionLoess = loess;\n  exports.regressionLog = logarithmic;\n  exports.regressionPoly = polynomial;\n  exports.regressionPow = power;\n  exports.regressionQuad = quad;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["C:/Users/Home/Desktop/cs-2005/node_modules/d3-regression/dist/d3-regression.js"],"names":["global","factory","exports","module","define","amd","self","d3","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","Array","isArray","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","TypeError","points","data","x","y","sort","filter","d","u","v","isFinite","a","b","n","X","Float64Array","Y","ux","uy","xv","yv","visitPoints","cb","iterations","dx","dy","determination","uY","predict","SSE","SST","sse","sst","angle","line","Math","atan2","PI","midpoint","interpose","xmin","xmax","l","log","LOG10E","precision","pow","maxIter","px","iter","find","found","p0","p1","m","mp","a0","a1","abs","splice","ols","uX","uXY","uX2","delta","slope","intercept","exponential","domain","YL","XY","XYL","X2Y","Infinity","ly","xy","_ols","_ols2","exp","fn","out","rSquared","arguments","linear","X2","median","floor","maxiters","epsilon","loess","bandwidth","_points","_points2","bw","max","yhat","residuals","robustWeights","fill","interval","i0","i1","edge","W","denom","k","xk","yk","w","tricube","xkw","updateInterval","medianResidual","arg","_w","output","val","left","right","cnt","prev","logarithmic","base","E","lb","lx","quad","quadratic","X3","X4","x2","n0","X2X2","c","polynomial","order","o","coefficients","_o","lhs","rhs","j","coef","gaussianElimination","uncenter","z","matrix","r","t","power","YS","regressionExp","regressionLinear","regressionLoess","regressionLog","regressionPoly","regressionPow","regressionQuad","Object","defineProperty"],"mappings":"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","sourcesContent":["// https://github.com/HarryStevens/d3-regression#readme Version 1.3.9. Copyright 2021 Harry Stevens.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.d3 = {}));\n}(this, (function (exports) { 'use strict';\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }\n\n  // Adapted from vega-statistics by Jeffrey Heer\n  // License: https://github.com/vega/vega/blob/f058b099decad9db78301405dd0d2e9d8ba3d51a/LICENSE\n  // Source: https://github.com/vega/vega/blob/f058b099decad9db78301405dd0d2e9d8ba3d51a/packages/vega-statistics/src/regression/points.js\n  function points(data, x, y, sort) {\n    data = data.filter(function (d, i) {\n      var u = x(d, i),\n          v = y(d, i);\n      return u != null && isFinite(u) && v != null && isFinite(v);\n    });\n\n    if (sort) {\n      data.sort(function (a, b) {\n        return x(a) - x(b);\n      });\n    }\n\n    var n = data.length,\n        X = new Float64Array(n),\n        Y = new Float64Array(n); // extract values, calculate means\n\n    var ux = 0,\n        uy = 0,\n        xv,\n        yv,\n        d;\n\n    for (var i = 0; i < n;) {\n      d = data[i];\n      X[i] = xv = +x(d, i, data);\n      Y[i] = yv = +y(d, i, data);\n      ++i;\n      ux += (xv - ux) / i;\n      uy += (yv - uy) / i;\n    } // mean center the data\n\n\n    for (var _i = 0; _i < n; ++_i) {\n      X[_i] -= ux;\n      Y[_i] -= uy;\n    }\n\n    return [X, Y, ux, uy];\n  }\n  function visitPoints(data, x, y, cb) {\n    var iterations = 0;\n\n    for (var i = 0, n = data.length; i < n; i++) {\n      var d = data[i],\n          dx = +x(d, i, data),\n          dy = +y(d, i, data);\n\n      if (dx != null && isFinite(dx) && dy != null && isFinite(dy)) {\n        cb(dx, dy, iterations++);\n      }\n    }\n  }\n\n  // return the coefficient of determination, or R squared.\n\n  function determination(data, x, y, uY, predict) {\n    var SSE = 0,\n        SST = 0;\n    visitPoints(data, x, y, function (dx, dy) {\n      var sse = dy - predict(dx),\n          sst = dy - uY;\n      SSE += sse * sse;\n      SST += sst * sst;\n    });\n    return 1 - SSE / SST;\n  }\n\n  // Returns the angle of a line in degrees.\n  function angle(line) {\n    return Math.atan2(line[1][1] - line[0][1], line[1][0] - line[0][0]) * 180 / Math.PI;\n  } // Returns the midpoint of a line.\n\n  function midpoint(line) {\n    return [(line[0][0] + line[1][0]) / 2, (line[0][1] + line[1][1]) / 2];\n  }\n\n  // returns a smooth line.\n\n  function interpose(xmin, xmax, predict) {\n    var l = Math.log(xmax - xmin) * Math.LOG10E + 1 | 0;\n    var precision = 1 * Math.pow(10, -l / 2 - 1),\n        maxIter = 1e4;\n    var points = [px(xmin), px(xmax)],\n        iter = 0;\n\n    while (find(points) && iter < maxIter) {\n    }\n\n    return points;\n\n    function px(x) {\n      return [x, predict(x)];\n    }\n\n    function find(points) {\n      iter++;\n      var n = points.length;\n      var found = false;\n\n      for (var i = 0; i < n - 1; i++) {\n        var p0 = points[i],\n            p1 = points[i + 1],\n            m = midpoint([p0, p1]),\n            mp = px(m[0]),\n            a0 = angle([p0, m]),\n            a1 = angle([p0, mp]),\n            a = Math.abs(a0 - a1);\n\n        if (a > precision) {\n          points.splice(i + 1, 0, mp);\n          found = true;\n        }\n      }\n\n      return found;\n    }\n  }\n\n  // Ordinary Least Squares from vega-statistics by Jeffrey Heer\n  // License: https://github.com/vega/vega/blob/f058b099decad9db78301405dd0d2e9d8ba3d51a/LICENSE\n  // Source: https://github.com/vega/vega/blob/f058b099decad9db78301405dd0d2e9d8ba3d51a/packages/vega-statistics/src/regression/ols.js\n  function ols(uX, uY, uXY, uX2) {\n    var delta = uX2 - uX * uX,\n        slope = Math.abs(delta) < 1e-24 ? 0 : (uXY - uX * uY) / delta,\n        intercept = uY - slope * uX;\n    return [intercept, slope];\n  }\n\n  function exponential () {\n    var x = function x(d) {\n      return d[0];\n    },\n        y = function y(d) {\n      return d[1];\n    },\n        domain;\n\n    function exponential(data) {\n      var n = 0,\n          Y = 0,\n          YL = 0,\n          XY = 0,\n          XYL = 0,\n          X2Y = 0,\n          xmin = domain ? +domain[0] : Infinity,\n          xmax = domain ? +domain[1] : -Infinity;\n      visitPoints(data, x, y, function (dx, dy) {\n        var ly = Math.log(dy),\n            xy = dx * dy;\n        ++n;\n        Y += (dy - Y) / n;\n        XY += (xy - XY) / n;\n        X2Y += (dx * xy - X2Y) / n;\n        YL += (dy * ly - YL) / n;\n        XYL += (xy * ly - XYL) / n;\n\n        if (!domain) {\n          if (dx < xmin) xmin = dx;\n          if (dx > xmax) xmax = dx;\n        }\n      });\n\n      var _ols = ols(XY / Y, YL / Y, XYL / Y, X2Y / Y),\n          _ols2 = _slicedToArray(_ols, 2),\n          a = _ols2[0],\n          b = _ols2[1];\n\n      a = Math.exp(a);\n\n      var fn = function fn(x) {\n        return a * Math.exp(b * x);\n      },\n          out = interpose(xmin, xmax, fn);\n\n      out.a = a;\n      out.b = b;\n      out.predict = fn;\n      out.rSquared = determination(data, x, y, Y, fn);\n      return out;\n    }\n\n    exponential.domain = function (arr) {\n      return arguments.length ? (domain = arr, exponential) : domain;\n    };\n\n    exponential.x = function (fn) {\n      return arguments.length ? (x = fn, exponential) : x;\n    };\n\n    exponential.y = function (fn) {\n      return arguments.length ? (y = fn, exponential) : y;\n    };\n\n    return exponential;\n  }\n\n  function linear () {\n    var x = function x(d) {\n      return d[0];\n    },\n        y = function y(d) {\n      return d[1];\n    },\n        domain;\n\n    function linear(data) {\n      var n = 0,\n          X = 0,\n          // sum of x\n      Y = 0,\n          // sum of y\n      XY = 0,\n          // sum of x * y\n      X2 = 0,\n          // sum of x * x\n      xmin = domain ? +domain[0] : Infinity,\n          xmax = domain ? +domain[1] : -Infinity;\n      visitPoints(data, x, y, function (dx, dy) {\n        ++n;\n        X += (dx - X) / n;\n        Y += (dy - Y) / n;\n        XY += (dx * dy - XY) / n;\n        X2 += (dx * dx - X2) / n;\n\n        if (!domain) {\n          if (dx < xmin) xmin = dx;\n          if (dx > xmax) xmax = dx;\n        }\n      });\n\n      var _ols = ols(X, Y, XY, X2),\n          _ols2 = _slicedToArray(_ols, 2),\n          intercept = _ols2[0],\n          slope = _ols2[1],\n          fn = function fn(x) {\n        return slope * x + intercept;\n      },\n          out = [[xmin, fn(xmin)], [xmax, fn(xmax)]];\n\n      out.a = slope;\n      out.b = intercept;\n      out.predict = fn;\n      out.rSquared = determination(data, x, y, Y, fn);\n      return out;\n    }\n\n    linear.domain = function (arr) {\n      return arguments.length ? (domain = arr, linear) : domain;\n    };\n\n    linear.x = function (fn) {\n      return arguments.length ? (x = fn, linear) : x;\n    };\n\n    linear.y = function (fn) {\n      return arguments.length ? (y = fn, linear) : y;\n    };\n\n    return linear;\n  }\n\n  // Returns the medium value of an array of numbers.\n  function median(arr) {\n    arr.sort(function (a, b) {\n      return a - b;\n    });\n    var i = arr.length / 2;\n    return i % 1 === 0 ? (arr[i - 1] + arr[i]) / 2 : arr[Math.floor(i)];\n  }\n\n  var maxiters = 2,\n      epsilon = 1e-12;\n  function loess () {\n    var x = function x(d) {\n      return d[0];\n    },\n        y = function y(d) {\n      return d[1];\n    },\n        bandwidth = .3;\n\n    function loess(data) {\n      var _points = points(data, x, y, true),\n          _points2 = _slicedToArray(_points, 4),\n          xv = _points2[0],\n          yv = _points2[1],\n          ux = _points2[2],\n          uy = _points2[3],\n          n = xv.length,\n          bw = Math.max(2, ~~(bandwidth * n)),\n          yhat = new Float64Array(n),\n          residuals = new Float64Array(n),\n          robustWeights = new Float64Array(n).fill(1);\n\n      for (var iter = -1; ++iter <= maxiters;) {\n        var interval = [0, bw - 1];\n\n        for (var i = 0; i < n; ++i) {\n          var dx = xv[i],\n              i0 = interval[0],\n              i1 = interval[1],\n              edge = dx - xv[i0] > xv[i1] - dx ? i0 : i1;\n          var W = 0,\n              X = 0,\n              Y = 0,\n              XY = 0,\n              X2 = 0,\n              denom = 1 / Math.abs(xv[edge] - dx || 1); // Avoid singularity\n\n          for (var k = i0; k <= i1; ++k) {\n            var xk = xv[k],\n                yk = yv[k],\n                w = tricube(Math.abs(dx - xk) * denom) * robustWeights[k],\n                xkw = xk * w;\n            W += w;\n            X += xkw;\n            Y += yk * w;\n            XY += yk * xkw;\n            X2 += xk * xkw;\n          } // Linear regression fit\n\n\n          var _ols = ols(X / W, Y / W, XY / W, X2 / W),\n              _ols2 = _slicedToArray(_ols, 2),\n              a = _ols2[0],\n              b = _ols2[1];\n\n          yhat[i] = a + b * dx;\n          residuals[i] = Math.abs(yv[i] - yhat[i]);\n          updateInterval(xv, i + 1, interval);\n        }\n\n        if (iter === maxiters) {\n          break;\n        }\n\n        var medianResidual = median(residuals);\n        if (Math.abs(medianResidual) < epsilon) break;\n\n        for (var _i = 0, arg, _w; _i < n; ++_i) {\n          arg = residuals[_i] / (6 * medianResidual); // Default to epsilon (rather than zero) for large deviations\n          // Keeping weights tiny but non-zero prevents singularites\n\n          robustWeights[_i] = arg >= 1 ? epsilon : (_w = 1 - arg * arg) * _w;\n        }\n      }\n\n      return output(xv, yhat, ux, uy);\n    }\n\n    loess.bandwidth = function (bw) {\n      return arguments.length ? (bandwidth = bw, loess) : bandwidth;\n    };\n\n    loess.x = function (fn) {\n      return arguments.length ? (x = fn, loess) : x;\n    };\n\n    loess.y = function (fn) {\n      return arguments.length ? (y = fn, loess) : y;\n    };\n\n    return loess;\n  } // Weighting kernel for local regression\n\n  function tricube(x) {\n    return (x = 1 - x * x * x) * x * x;\n  } // Advance sliding window interval of nearest neighbors\n\n\n  function updateInterval(xv, i, interval) {\n    var val = xv[i],\n        left = interval[0],\n        right = interval[1] + 1;\n    if (right >= xv.length) return; // Step right if distance to new right edge is <= distance to old left edge\n    // Step when distance is equal to ensure movement over duplicate x values\n\n    while (i > left && xv[right] - val <= val - xv[left]) {\n      interval[0] = ++left;\n      interval[1] = right;\n      ++right;\n    }\n  } // Generate smoothed output points\n  // Average points with repeated x values\n\n\n  function output(xv, yhat, ux, uy) {\n    var n = xv.length,\n        out = [];\n    var i = 0,\n        cnt = 0,\n        prev = [],\n        v;\n\n    for (; i < n; ++i) {\n      v = xv[i] + ux;\n\n      if (prev[0] === v) {\n        // Average output values via online update\n        prev[1] += (yhat[i] - prev[1]) / ++cnt;\n      } else {\n        // Add new output point\n        cnt = 0;\n        prev[1] += uy;\n        prev = [v, yhat[i]];\n        out.push(prev);\n      }\n    }\n\n    prev[1] += uy;\n    return out;\n  }\n\n  function logarithmic () {\n    var x = function x(d) {\n      return d[0];\n    },\n        y = function y(d) {\n      return d[1];\n    },\n        base = Math.E,\n        domain;\n\n    function logarithmic(data) {\n      var n = 0,\n          X = 0,\n          Y = 0,\n          XY = 0,\n          X2 = 0,\n          xmin = domain ? +domain[0] : Infinity,\n          xmax = domain ? +domain[1] : -Infinity,\n          lb = Math.log(base);\n      visitPoints(data, x, y, function (dx, dy) {\n        var lx = Math.log(dx) / lb;\n        ++n;\n        X += (lx - X) / n;\n        Y += (dy - Y) / n;\n        XY += (lx * dy - XY) / n;\n        X2 += (lx * lx - X2) / n;\n\n        if (!domain) {\n          if (dx < xmin) xmin = dx;\n          if (dx > xmax) xmax = dx;\n        }\n      });\n\n      var _ols = ols(X, Y, XY, X2),\n          _ols2 = _slicedToArray(_ols, 2),\n          intercept = _ols2[0],\n          slope = _ols2[1],\n          fn = function fn(x) {\n        return slope * Math.log(x) / lb + intercept;\n      },\n          out = interpose(xmin, xmax, fn);\n\n      out.a = slope;\n      out.b = intercept;\n      out.predict = fn;\n      out.rSquared = determination(data, x, y, Y, fn);\n      return out;\n    }\n\n    logarithmic.domain = function (arr) {\n      return arguments.length ? (domain = arr, logarithmic) : domain;\n    };\n\n    logarithmic.x = function (fn) {\n      return arguments.length ? (x = fn, logarithmic) : x;\n    };\n\n    logarithmic.y = function (fn) {\n      return arguments.length ? (y = fn, logarithmic) : y;\n    };\n\n    logarithmic.base = function (n) {\n      return arguments.length ? (base = n, logarithmic) : base;\n    };\n\n    return logarithmic;\n  }\n\n  function quad () {\n    var x = function x(d) {\n      return d[0];\n    },\n        y = function y(d) {\n      return d[1];\n    },\n        domain;\n\n    function quadratic(data) {\n      var _points = points(data, x, y),\n          _points2 = _slicedToArray(_points, 4),\n          xv = _points2[0],\n          yv = _points2[1],\n          ux = _points2[2],\n          uy = _points2[3],\n          n = xv.length;\n\n      var X2 = 0,\n          X3 = 0,\n          X4 = 0,\n          XY = 0,\n          X2Y = 0,\n          i,\n          dx,\n          dy,\n          x2;\n\n      for (i = 0; i < n;) {\n        dx = xv[i];\n        dy = yv[i++];\n        x2 = dx * dx;\n        X2 += (x2 - X2) / i;\n        X3 += (x2 * dx - X3) / i;\n        X4 += (x2 * x2 - X4) / i;\n        XY += (dx * dy - XY) / i;\n        X2Y += (x2 * dy - X2Y) / i;\n      }\n\n      var Y = 0,\n          n0 = 0,\n          xmin = domain ? +domain[0] : Infinity,\n          xmax = domain ? +domain[1] : -Infinity;\n      visitPoints(data, x, y, function (dx, dy) {\n        n0++;\n        Y += (dy - Y) / n0;\n\n        if (!domain) {\n          if (dx < xmin) xmin = dx;\n          if (dx > xmax) xmax = dx;\n        }\n      });\n\n      var X2X2 = X4 - X2 * X2,\n          d = X2 * X2X2 - X3 * X3,\n          a = (X2Y * X2 - XY * X3) / d,\n          b = (XY * X2X2 - X2Y * X3) / d,\n          c = -a * X2,\n          fn = function fn(x) {\n        x = x - ux;\n        return a * x * x + b * x + c + uy;\n      };\n\n      var out = interpose(xmin, xmax, fn);\n      out.a = a;\n      out.b = b - 2 * a * ux;\n      out.c = c - b * ux + a * ux * ux + uy;\n      out.predict = fn;\n      out.rSquared = determination(data, x, y, Y, fn);\n      return out;\n    }\n\n    quadratic.domain = function (arr) {\n      return arguments.length ? (domain = arr, quadratic) : domain;\n    };\n\n    quadratic.x = function (fn) {\n      return arguments.length ? (x = fn, quadratic) : x;\n    };\n\n    quadratic.y = function (fn) {\n      return arguments.length ? (y = fn, quadratic) : y;\n    };\n\n    return quadratic;\n  }\n\n  // Source: https://github.com/Tom-Alexander/regression-js/blob/master/src/regression.js#L246\n  // License: https://github.com/Tom-Alexander/regression-js/blob/master/LICENSE\n  // ...with ideas from vega-statistics by Jeffrey Heer\n  // Source: https://github.com/vega/vega/blob/f21cb8792b4e0cbe2b1a3fd44b0f5db370dbaadb/packages/vega-statistics/src/regression/poly.js\n  // License: https://github.com/vega/vega/blob/f058b099decad9db78301405dd0d2e9d8ba3d51a/LICENSE\n\n  function polynomial () {\n    var x = function x(d) {\n      return d[0];\n    },\n        y = function y(d) {\n      return d[1];\n    },\n        order = 3,\n        domain;\n\n    function polynomial(data) {\n      // Use more efficient methods for lower orders\n      if (order === 1) {\n        var o = linear().x(x).y(y).domain(domain)(data);\n        o.coefficients = [o.b, o.a];\n        delete o.a;\n        delete o.b;\n        return o;\n      }\n\n      if (order === 2) {\n        var _o = quad().x(x).y(y).domain(domain)(data);\n\n        _o.coefficients = [_o.c, _o.b, _o.a];\n        delete _o.a;\n        delete _o.b;\n        delete _o.c;\n        return _o;\n      }\n\n      var _points = points(data, x, y),\n          _points2 = _slicedToArray(_points, 4),\n          xv = _points2[0],\n          yv = _points2[1],\n          ux = _points2[2],\n          uy = _points2[3],\n          n = xv.length,\n          lhs = [],\n          rhs = [],\n          k = order + 1;\n\n      var Y = 0,\n          n0 = 0,\n          xmin = domain ? +domain[0] : Infinity,\n          xmax = domain ? +domain[1] : -Infinity;\n      visitPoints(data, x, y, function (dx, dy) {\n        ++n0;\n        Y += (dy - Y) / n0;\n\n        if (!domain) {\n          if (dx < xmin) xmin = dx;\n          if (dx > xmax) xmax = dx;\n        }\n      });\n      var i, j, l, v, c;\n\n      for (i = 0; i < k; ++i) {\n        for (l = 0, v = 0; l < n; ++l) {\n          v += Math.pow(xv[l], i) * yv[l];\n        }\n\n        lhs.push(v);\n        c = new Float64Array(k);\n\n        for (j = 0; j < k; ++j) {\n          for (l = 0, v = 0; l < n; ++l) {\n            v += Math.pow(xv[l], i + j);\n          }\n\n          c[j] = v;\n        }\n\n        rhs.push(c);\n      }\n\n      rhs.push(lhs);\n\n      var coef = gaussianElimination(rhs),\n          fn = function fn(x) {\n        x -= ux;\n        var y = uy + coef[0] + coef[1] * x + coef[2] * x * x;\n\n        for (i = 3; i < k; ++i) {\n          y += coef[i] * Math.pow(x, i);\n        }\n\n        return y;\n      },\n          out = interpose(xmin, xmax, fn);\n\n      out.coefficients = uncenter(k, coef, -ux, uy);\n      out.predict = fn;\n      out.rSquared = determination(data, x, y, Y, fn);\n      return out;\n    }\n\n    polynomial.domain = function (arr) {\n      return arguments.length ? (domain = arr, polynomial) : domain;\n    };\n\n    polynomial.x = function (fn) {\n      return arguments.length ? (x = fn, polynomial) : x;\n    };\n\n    polynomial.y = function (fn) {\n      return arguments.length ? (y = fn, polynomial) : y;\n    };\n\n    polynomial.order = function (n) {\n      return arguments.length ? (order = n, polynomial) : order;\n    };\n\n    return polynomial;\n  }\n\n  function uncenter(k, a, x, y) {\n    var z = Array(k);\n    var i, j, v, c; // initialize to zero\n\n    for (i = 0; i < k; ++i) {\n      z[i] = 0;\n    } // polynomial expansion\n\n\n    for (i = k - 1; i >= 0; --i) {\n      v = a[i];\n      c = 1;\n      z[i] += v;\n\n      for (j = 1; j <= i; ++j) {\n        c *= (i + 1 - j) / j; // binomial coefficent\n\n        z[i - j] += v * Math.pow(x, j) * c;\n      }\n    } // bias term\n\n\n    z[0] += y;\n    return z;\n  } // Given an array for a two-dimensional matrix and the polynomial order,\n  // solve A * x = b using Gaussian elimination.\n\n\n  function gaussianElimination(matrix) {\n    var n = matrix.length - 1,\n        coef = [];\n    var i, j, k, r, t;\n\n    for (i = 0; i < n; ++i) {\n      r = i; // max row\n\n      for (j = i + 1; j < n; ++j) {\n        if (Math.abs(matrix[i][j]) > Math.abs(matrix[i][r])) {\n          r = j;\n        }\n      }\n\n      for (k = i; k < n + 1; ++k) {\n        t = matrix[k][i];\n        matrix[k][i] = matrix[k][r];\n        matrix[k][r] = t;\n      }\n\n      for (j = i + 1; j < n; ++j) {\n        for (k = n; k >= i; k--) {\n          matrix[k][j] -= matrix[k][i] * matrix[i][j] / matrix[i][i];\n        }\n      }\n    }\n\n    for (j = n - 1; j >= 0; --j) {\n      t = 0;\n\n      for (k = j + 1; k < n; ++k) {\n        t += matrix[k][j] * coef[k];\n      }\n\n      coef[j] = (matrix[n][j] - t) / matrix[j][j];\n    }\n\n    return coef;\n  }\n\n  function power () {\n    var x = function x(d) {\n      return d[0];\n    },\n        y = function y(d) {\n      return d[1];\n    },\n        domain;\n\n    function power(data) {\n      var n = 0,\n          X = 0,\n          Y = 0,\n          XY = 0,\n          X2 = 0,\n          YS = 0,\n          xmin = domain ? +domain[0] : Infinity,\n          xmax = domain ? +domain[1] : -Infinity;\n      visitPoints(data, x, y, function (dx, dy) {\n        var lx = Math.log(dx),\n            ly = Math.log(dy);\n        ++n;\n        X += (lx - X) / n;\n        Y += (ly - Y) / n;\n        XY += (lx * ly - XY) / n;\n        X2 += (lx * lx - X2) / n;\n        YS += (dy - YS) / n;\n\n        if (!domain) {\n          if (dx < xmin) xmin = dx;\n          if (dx > xmax) xmax = dx;\n        }\n      });\n\n      var _ols = ols(X, Y, XY, X2),\n          _ols2 = _slicedToArray(_ols, 2),\n          a = _ols2[0],\n          b = _ols2[1];\n\n      a = Math.exp(a);\n\n      var fn = function fn(x) {\n        return a * Math.pow(x, b);\n      },\n          out = interpose(xmin, xmax, fn);\n\n      out.a = a;\n      out.b = b;\n      out.predict = fn;\n      out.rSquared = determination(data, x, y, YS, fn);\n      return out;\n    }\n\n    power.domain = function (arr) {\n      return arguments.length ? (domain = arr, power) : domain;\n    };\n\n    power.x = function (fn) {\n      return arguments.length ? (x = fn, power) : x;\n    };\n\n    power.y = function (fn) {\n      return arguments.length ? (y = fn, power) : y;\n    };\n\n    return power;\n  }\n\n  exports.regressionExp = exponential;\n  exports.regressionLinear = linear;\n  exports.regressionLoess = loess;\n  exports.regressionLog = logarithmic;\n  exports.regressionPoly = polynomial;\n  exports.regressionPow = power;\n  exports.regressionQuad = quad;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]},"metadata":{},"sourceType":"script"}