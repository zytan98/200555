{"ast":null,"code":"import { each, isArray } from '@antv/util';\nimport { getAllElements } from '../../../utils';\n/**\n * 获取图表元素对应字段的值\n * @param element 图表元素\n * @param field 字段名\n * @ignore\n */\n\nexport function getElementValue(element, field) {\n  var model = element.getModel();\n  var record = model.data;\n  var value;\n\n  if (isArray(record)) {\n    value = record[0][field];\n  } else {\n    value = record[field];\n  }\n\n  return value;\n}\n/**\n * @ignore\n * 清理 highlight 效果\n * @param view View 或者 Chart\n */\n\nexport function clearHighlight(view) {\n  var elements = getAllElements(view);\n  each(elements, function (el) {\n    if (el.hasState('active')) {\n      el.setState('active', false);\n    }\n\n    if (el.hasState('selected')) {\n      el.setState('selected', false);\n    }\n\n    if (el.hasState('inactive')) {\n      el.setState('inactive', false);\n    }\n  });\n}","map":{"version":3,"sources":["../../../../src/plots/mix/interactions/utils.ts"],"names":[],"mappings":"AACA,SAAS,IAAT,EAAe,OAAf,QAA8B,YAA9B;AACA,SAAS,cAAT,QAA+B,gBAA/B;AAEA;;;;;AAKG;;AACH,OAAM,SAAU,eAAV,CAA0B,OAA1B,EAA4C,KAA5C,EAAiD;AACrD,MAAM,KAAK,GAAG,OAAO,CAAC,QAAR,EAAd;AACA,MAAM,MAAM,GAAG,KAAK,CAAC,IAArB;AACA,MAAI,KAAJ;;AACA,MAAI,OAAO,CAAC,MAAD,CAAX,EAAqB;AACnB,IAAA,KAAK,GAAG,MAAM,CAAC,CAAD,CAAN,CAAU,KAAV,CAAR;AACD,GAFD,MAEO;AACL,IAAA,KAAK,GAAG,MAAM,CAAC,KAAD,CAAd;AACD;;AACD,SAAO,KAAP;AACD;AAED;;;;AAIG;;AACH,OAAM,SAAU,cAAV,CAAyB,IAAzB,EAAmC;AACvC,MAAM,QAAQ,GAAG,cAAc,CAAC,IAAD,CAA/B;AACA,EAAA,IAAI,CAAC,QAAD,EAAW,UAAC,EAAD,EAAG;AAChB,QAAI,EAAE,CAAC,QAAH,CAAY,QAAZ,CAAJ,EAA2B;AACzB,MAAA,EAAE,CAAC,QAAH,CAAY,QAAZ,EAAsB,KAAtB;AACD;;AACD,QAAI,EAAE,CAAC,QAAH,CAAY,UAAZ,CAAJ,EAA6B;AAC3B,MAAA,EAAE,CAAC,QAAH,CAAY,UAAZ,EAAwB,KAAxB;AACD;;AACD,QAAI,EAAE,CAAC,QAAH,CAAY,UAAZ,CAAJ,EAA6B;AAC3B,MAAA,EAAE,CAAC,QAAH,CAAY,UAAZ,EAAwB,KAAxB;AACD;AACF,GAVG,CAAJ;AAWD","sourcesContent":["import { View, Element } from '@antv/g2';\nimport { each, isArray } from '@antv/util';\nimport { getAllElements } from '../../../utils';\n\n/**\n * 获取图表元素对应字段的值\n * @param element 图表元素\n * @param field 字段名\n * @ignore\n */\nexport function getElementValue(element: Element, field) {\n  const model = element.getModel();\n  const record = model.data;\n  let value;\n  if (isArray(record)) {\n    value = record[0][field];\n  } else {\n    value = record[field];\n  }\n  return value;\n}\n\n/**\n * @ignore\n * 清理 highlight 效果\n * @param view View 或者 Chart\n */\nexport function clearHighlight(view: View) {\n  const elements = getAllElements(view);\n  each(elements, (el) => {\n    if (el.hasState('active')) {\n      el.setState('active', false);\n    }\n    if (el.hasState('selected')) {\n      el.setState('selected', false);\n    }\n    if (el.hasState('inactive')) {\n      el.setState('inactive', false);\n    }\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}