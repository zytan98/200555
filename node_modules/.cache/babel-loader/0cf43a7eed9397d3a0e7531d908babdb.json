{"ast":null,"code":"import React, { useEffect } from 'react';\nimport G6 from '@antv/g6';\nimport ChartLoading from '../../util/createLoading';\nimport { ErrorBoundary } from '../../base';\nimport useGraph from '../hooks/useGraph';\nimport { customIconNode } from './customItems';\nimport { defaultLabelCfg, defaultStateStyles } from './constants';\nimport { getGraphSize, processMinimap, getGraphId, renderGraph, bindEvents, useProps } from './utils';\nvar defaultNodeStyle = {\n  fill: '#91d5ff',\n  stroke: '#40a9ff',\n  radius: 2\n};\nvar defaultEdgeStyle = {\n  stroke: '#91d5ff',\n  endArrow: {\n    path: 'M 0,0 L 12, 6 L 9,0 L 12, -6 Z',\n    fill: '#91d5ff',\n    d: -20\n  }\n};\nvar defaultLayout = {\n  type: 'compactBox',\n  direction: 'TB',\n  getId: function getId(d) {\n    return d.id;\n  },\n  getHeight: function getHeight() {\n    return 16;\n  },\n  getWidth: function getWidth() {\n    return 16;\n  },\n  getVGap: function getVGap() {\n    return 40;\n  },\n  getHGap: function getHGap() {\n    return 70;\n  }\n};\nvar defaultProps = {\n  nodeType: 'rect',\n  edgeType: 'flow-line',\n  collapseExpand: false,\n  nodeSize: [120, 40],\n  nodeLabelCfg: defaultLabelCfg,\n  edgeLabelCfg: defaultLabelCfg,\n  layout: defaultLayout,\n  enableEdit: false,\n  nodeStyle: defaultNodeStyle,\n  edgeStyle: defaultEdgeStyle,\n  nodeStateStyles: defaultStateStyles,\n  edgeStateStyles: defaultStateStyles,\n  autoFit: true\n};\nvar graphs = {};\n\nvar OrganizationTreeGraphComponent = function (props) {\n  var uProps = useProps(props, defaultProps);\n  var data = uProps.data,\n      className = uProps.className,\n      style = uProps.style,\n      width = uProps.width,\n      height = uProps.height,\n      _a = uProps.nodeType,\n      nodeType = _a === void 0 ? 'rect' : _a,\n      _b = uProps.edgeType,\n      edgeType = _b === void 0 ? 'flow-line' : _b,\n      _c = uProps.collapseExpand,\n      collapseExpand = _c === void 0 ? false : _c,\n      _d = uProps.nodeSize,\n      nodeSize = _d === void 0 ? [120, 40] : _d,\n      _e = uProps.nodeLabelCfg,\n      nodeLabelCfg = _e === void 0 ? defaultLabelCfg : _e,\n      _f = uProps.edgeLabelCfg,\n      edgeLabelCfg = _f === void 0 ? defaultLabelCfg : _f,\n      _g = uProps.layout,\n      layout = _g === void 0 ? defaultLayout : _g,\n      _h = uProps.enableEdit,\n      enableEdit = _h === void 0 ? false : _h,\n      minimapCfg = uProps.minimapCfg,\n      _j = uProps.nodeStyle,\n      nodeStyle = _j === void 0 ? defaultNodeStyle : _j,\n      _k = uProps.edgeStyle,\n      edgeStyle = _k === void 0 ? defaultEdgeStyle : _k,\n      _l = uProps.nodeStateStyles,\n      nodeStateStyles = _l === void 0 ? defaultStateStyles : _l,\n      _m = uProps.edgeStateStyles,\n      edgeStateStyles = _m === void 0 ? defaultStateStyles : _m,\n      _o = uProps.autoFit,\n      autoFit = _o === void 0 ? true : _o,\n      graphRef = uProps.graphRef,\n      onReady = uProps.onReady,\n      loading = uProps.loading,\n      loadingTemplate = uProps.loadingTemplate,\n      errorTemplate = uProps.errorTemplate;\n  var container = React.useRef(null);\n  var graph = React.useRef(null);\n  var graphId = getGraphId(graph);\n  useGraph(graphs[graphId], uProps, container);\n  useEffect(function () {\n    var graphSize = getGraphSize(width, height, container);\n\n    if (nodeType === 'icon-node') {\n      customIconNode({\n        enableEdit: enableEdit\n      });\n    }\n\n    var graph = graphs[graphId];\n\n    if (!graph) {\n      graph = new G6.TreeGraph({\n        container: container.current,\n        width: graphSize[0],\n        height: graphSize[1],\n        linkCenter: true,\n        modes: {\n          default: ['drag-canvas', 'zoom-canvas']\n        },\n        defaultNode: {\n          type: nodeType,\n          size: nodeSize,\n          style: nodeStyle,\n          labelCfg: nodeLabelCfg\n        },\n        defaultEdge: {\n          type: edgeType,\n          style: edgeStyle,\n          labelCfg: edgeLabelCfg\n        },\n        nodeStateStyles: nodeStateStyles,\n        edgeStateStyles: edgeStateStyles,\n        layout: layout,\n        fitView: autoFit\n      });\n      graphs[graphId] = graph;\n    }\n\n    if (graphRef) {\n      graphRef.current = graph;\n    }\n\n    processMinimap(minimapCfg, graph);\n    renderGraph(graph, data);\n\n    if (onReady) {\n      onReady(graph);\n    }\n\n    if (collapseExpand) {\n      graph.addBehaviors({\n        type: 'collapse-expand'\n      }, 'default');\n    }\n\n    bindEvents(graph, props);\n    return function () {\n      if (graphs[graphId]) {\n        graphs[graphId].destroy();\n        delete graphs[graphId];\n      }\n    };\n  }, []);\n  return React.createElement(ErrorBoundary, {\n    errorTemplate: errorTemplate\n  }, loading && React.createElement(ChartLoading, {\n    loadingTemplate: loadingTemplate\n  }), React.createElement(\"div\", {\n    className: className,\n    style: style,\n    ref: container\n  }));\n};\n\nexport default OrganizationTreeGraphComponent;","map":{"version":3,"sources":["C:/Users/Home/Desktop/cs-2005/node_modules/@ant-design/charts/es/obsolescent/graph/organizationTreeGraph.js"],"names":["React","useEffect","G6","ChartLoading","ErrorBoundary","useGraph","customIconNode","defaultLabelCfg","defaultStateStyles","getGraphSize","processMinimap","getGraphId","renderGraph","bindEvents","useProps","defaultNodeStyle","fill","stroke","radius","defaultEdgeStyle","endArrow","path","d","defaultLayout","type","direction","getId","id","getHeight","getWidth","getVGap","getHGap","defaultProps","nodeType","edgeType","collapseExpand","nodeSize","nodeLabelCfg","edgeLabelCfg","layout","enableEdit","nodeStyle","edgeStyle","nodeStateStyles","edgeStateStyles","autoFit","graphs","OrganizationTreeGraphComponent","props","uProps","data","className","style","width","height","_a","_b","_c","_d","_e","_f","_g","_h","minimapCfg","_j","_k","_l","_m","_o","graphRef","onReady","loading","loadingTemplate","errorTemplate","container","useRef","graph","graphId","graphSize","TreeGraph","current","linkCenter","modes","default","defaultNode","size","labelCfg","defaultEdge","fitView","addBehaviors","destroy","createElement","ref"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport G6 from '@antv/g6';\nimport ChartLoading from '../../util/createLoading';\nimport { ErrorBoundary } from '../../base';\nimport useGraph from '../hooks/useGraph';\nimport { customIconNode } from './customItems';\nimport { defaultLabelCfg, defaultStateStyles } from './constants';\nimport { getGraphSize, processMinimap, getGraphId, renderGraph, bindEvents, useProps, } from './utils';\nvar defaultNodeStyle = {\n    fill: '#91d5ff',\n    stroke: '#40a9ff',\n    radius: 2,\n};\nvar defaultEdgeStyle = {\n    stroke: '#91d5ff',\n    endArrow: {\n        path: 'M 0,0 L 12, 6 L 9,0 L 12, -6 Z',\n        fill: '#91d5ff',\n        d: -20,\n    },\n};\nvar defaultLayout = {\n    type: 'compactBox',\n    direction: 'TB',\n    getId: function getId(d) {\n        return d.id;\n    },\n    getHeight: function getHeight() {\n        return 16;\n    },\n    getWidth: function getWidth() {\n        return 16;\n    },\n    getVGap: function getVGap() {\n        return 40;\n    },\n    getHGap: function getHGap() {\n        return 70;\n    },\n};\nvar defaultProps = {\n    nodeType: 'rect',\n    edgeType: 'flow-line',\n    collapseExpand: false,\n    nodeSize: [120, 40],\n    nodeLabelCfg: defaultLabelCfg,\n    edgeLabelCfg: defaultLabelCfg,\n    layout: defaultLayout,\n    enableEdit: false,\n    nodeStyle: defaultNodeStyle,\n    edgeStyle: defaultEdgeStyle,\n    nodeStateStyles: defaultStateStyles,\n    edgeStateStyles: defaultStateStyles,\n    autoFit: true,\n};\nvar graphs = {};\nvar OrganizationTreeGraphComponent = function (props) {\n    var uProps = useProps(props, defaultProps);\n    var data = uProps.data, className = uProps.className, style = uProps.style, width = uProps.width, height = uProps.height, _a = uProps.nodeType, nodeType = _a === void 0 ? 'rect' : _a, _b = uProps.edgeType, edgeType = _b === void 0 ? 'flow-line' : _b, _c = uProps.collapseExpand, collapseExpand = _c === void 0 ? false : _c, _d = uProps.nodeSize, nodeSize = _d === void 0 ? [120, 40] : _d, _e = uProps.nodeLabelCfg, nodeLabelCfg = _e === void 0 ? defaultLabelCfg : _e, _f = uProps.edgeLabelCfg, edgeLabelCfg = _f === void 0 ? defaultLabelCfg : _f, _g = uProps.layout, layout = _g === void 0 ? defaultLayout : _g, _h = uProps.enableEdit, enableEdit = _h === void 0 ? false : _h, minimapCfg = uProps.minimapCfg, _j = uProps.nodeStyle, nodeStyle = _j === void 0 ? defaultNodeStyle : _j, _k = uProps.edgeStyle, edgeStyle = _k === void 0 ? defaultEdgeStyle : _k, _l = uProps.nodeStateStyles, nodeStateStyles = _l === void 0 ? defaultStateStyles : _l, _m = uProps.edgeStateStyles, edgeStateStyles = _m === void 0 ? defaultStateStyles : _m, _o = uProps.autoFit, autoFit = _o === void 0 ? true : _o, graphRef = uProps.graphRef, onReady = uProps.onReady, loading = uProps.loading, loadingTemplate = uProps.loadingTemplate, errorTemplate = uProps.errorTemplate;\n    var container = React.useRef(null);\n    var graph = React.useRef(null);\n    var graphId = getGraphId(graph);\n    useGraph(graphs[graphId], uProps, container);\n    useEffect(function () {\n        var graphSize = getGraphSize(width, height, container);\n        if (nodeType === 'icon-node') {\n            customIconNode({ enableEdit: enableEdit });\n        }\n        var graph = graphs[graphId];\n        if (!graph) {\n            graph = new G6.TreeGraph({\n                container: container.current,\n                width: graphSize[0],\n                height: graphSize[1],\n                linkCenter: true,\n                modes: {\n                    default: ['drag-canvas', 'zoom-canvas'],\n                },\n                defaultNode: {\n                    type: nodeType,\n                    size: nodeSize,\n                    style: nodeStyle,\n                    labelCfg: nodeLabelCfg,\n                },\n                defaultEdge: {\n                    type: edgeType,\n                    style: edgeStyle,\n                    labelCfg: edgeLabelCfg,\n                },\n                nodeStateStyles: nodeStateStyles,\n                edgeStateStyles: edgeStateStyles,\n                layout: layout,\n                fitView: autoFit,\n            });\n            graphs[graphId] = graph;\n        }\n        if (graphRef) {\n            graphRef.current = graph;\n        }\n        processMinimap(minimapCfg, graph);\n        renderGraph(graph, data);\n        if (onReady) {\n            onReady(graph);\n        }\n        if (collapseExpand) {\n            graph.addBehaviors({\n                type: 'collapse-expand',\n            }, 'default');\n        }\n        bindEvents(graph, props);\n        return function () {\n            if (graphs[graphId]) {\n                graphs[graphId].destroy();\n                delete graphs[graphId];\n            }\n        };\n    }, []);\n    return (React.createElement(ErrorBoundary, { errorTemplate: errorTemplate },\n        loading && React.createElement(ChartLoading, { loadingTemplate: loadingTemplate }),\n        React.createElement(\"div\", { className: className, style: style, ref: container })));\n};\nexport default OrganizationTreeGraphComponent;\n"]},"metadata":{},"sourceType":"module"}