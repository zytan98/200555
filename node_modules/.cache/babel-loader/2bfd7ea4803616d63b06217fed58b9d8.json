{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nvar _dec, _class;\n\nimport { injectable } from 'inversify';\nexport var IInteractorEvent;\n\n(function (IInteractorEvent) {\n  IInteractorEvent[\"PANSTART\"] = \"PANSTART\";\n  IInteractorEvent[\"PANEND\"] = \"PANEND\";\n  IInteractorEvent[\"PANMOVE\"] = \"PANMOVE\";\n  IInteractorEvent[\"PINCH\"] = \"PINCH\";\n  IInteractorEvent[\"KEYDOWN\"] = \"KEYDOWN\";\n  IInteractorEvent[\"KEYUP\"] = \"KEYUP\";\n  IInteractorEvent[\"HOVER\"] = \"HOVER\";\n})(IInteractorEvent || (IInteractorEvent = {}));\n\nexport var InteractorService = (_dec = injectable(), _dec(_class = /*#__PURE__*/function () {\n  function InteractorService() {\n    _classCallCheck(this, InteractorService);\n  }\n\n  _createClass(InteractorService, [{\n    key: \"listen\",\n    value: function listen(canvas) {}\n  }, {\n    key: \"on\",\n    value: function on(event, args) {}\n  }, {\n    key: \"connect\",\n    value: function connect() {}\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {}\n  }, {\n    key: \"destroy\",\n    value: function destroy() {}\n  }]);\n\n  return InteractorService;\n}()) || _class);","map":{"version":3,"sources":["../../../src/services/interactor/IteractorService.ts"],"names":["IInteractorEvent","injectable","InteractorService"],"mappings":";;;;;AAAA,SAAA,UAAA,QAAA,WAAA;AAUA,OAAA,IAAA,gBAAA;;WAAYA,gB;AAAAA,EAAAA,gB,YAAAA,G,UAAAA;AAAAA,EAAAA,gB,UAAAA,G,QAAAA;AAAAA,EAAAA,gB,WAAAA,G,SAAAA;AAAAA,EAAAA,gB,SAAAA,G,OAAAA;AAAAA,EAAAA,gB,WAAAA,G,SAAAA;AAAAA,EAAAA,gB,SAAAA,G,OAAAA;AAAAA,EAAAA,gB,SAAAA,G,OAAAA;GAAAA,gB,KAAAA,gB;;AAWZ,OAAA,IAAaE,iBAAb,IAAA,IAAA,GADCD,UAAU,EACX,EAAA,IAAA,CAAA,MAAA,GAAA,aAAA,YAAA;AAAA,WAAA,iBAAA,GAAA;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,iBAAA,CAAA;AAAA;;AAAA,EAAA,YAAA,CAAA,iBAAA,EAAA,CAAA;AAAA,IAAA,GAAA,EAAA,QAAA;AAAA,IAAA,KAAA,EAAA,SAAA,MAAA,CAAA,MAAA,EACiD,CAAE;AADnD,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,IAAA;AAAA,IAAA,KAAA,EAAA,SAAA,EAAA,CAAA,KAAA,EAAA,IAAA,EAE2D,CAAE;AAF7D,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,SAAA;AAAA,IAAA,KAAA,EAAA,SAAA,OAAA,GAGmB,CAAE;AAHrB,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,YAAA;AAAA,IAAA,KAAA,EAAA,SAAA,UAAA,GAIsB,CAAE;AAJxB,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,SAAA;AAAA,IAAA,KAAA,EAAA,SAAA,OAAA,GAKmB,CAAE;AALrB,GAAA,CAAA,CAAA;;AAAA,SAAA,iBAAA;AAAA,CAAA,EAAA,CAAA,IAAA,MAAA,CAAA","sourcesContent":["import { injectable } from 'inversify';\n\nexport interface IInteractorService {\n  listen(canvas: HTMLCanvasElement): void;\n  disconnect(): void;\n  connect(): void;\n  destroy(): void;\n  on(event: IInteractorEvent, args?: unknown): void;\n}\n\nexport enum IInteractorEvent {\n  PANSTART = 'PANSTART',\n  PANEND = 'PANEND',\n  PANMOVE = 'PANMOVE',\n  PINCH = 'PINCH',\n  KEYDOWN = 'KEYDOWN',\n  KEYUP = 'KEYUP',\n  HOVER = 'HOVER',\n}\n\n@injectable()\nexport class InteractorService implements IInteractorService {\n  public listen(canvas: HTMLCanvasElement): void {}\n  public on(event: IInteractorEvent, args?: unknown): void {}\n  public connect() {}\n  public disconnect() {}\n  public destroy() {}\n}\n"]},"metadata":{},"sourceType":"module"}