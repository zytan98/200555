{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { getDataWhetherPecentage } from '../../utils/transform/percent';\nimport { adaptor, meta } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constants';\nimport { transformBarData } from './utils';\n/**\n * 条形图\n */\n\nvar Bar =\n/** @class */\nfunction (_super) {\n  __extends(Bar, _super);\n\n  function Bar() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n\n\n    _this.type = 'bar';\n    return _this;\n  }\n  /**\n   * 获取 条形图 默认配置项\n   * 供外部使用\n   */\n\n\n  Bar.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  /**\n   * @override\n   */\n\n\n  Bar.prototype.changeData = function (data) {\n    this.updateOption({\n      data: data\n    });\n\n    var _a = this,\n        chart = _a.chart,\n        options = _a.options;\n\n    var xField = options.xField,\n        yField = options.yField,\n        isPercent = options.isPercent;\n\n    var switchedFieldOptions = __assign(__assign({}, options), {\n      xField: yField,\n      yField: xField\n    });\n\n    meta({\n      chart: chart,\n      options: switchedFieldOptions\n    });\n    chart.changeData(getDataWhetherPecentage(transformBarData(data), xField, yField, xField, isPercent));\n  };\n  /**\n   * 获取 条形图 默认配置\n   */\n\n\n  Bar.prototype.getDefaultOptions = function () {\n    return Bar.getDefaultOptions();\n  };\n  /**\n   * 获取 条形图 的适配器\n   */\n\n\n  Bar.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n\n  return Bar;\n}(Plot);\n\nexport { Bar };","map":{"version":3,"sources":["../../../src/plots/bar/index.ts"],"names":[],"mappings":";AAAA,SAAS,IAAT,QAAqB,iBAArB;AAEA,SAAS,uBAAT,QAAwC,+BAAxC;AAEA,SAAS,OAAT,EAAkB,IAAlB,QAA8B,WAA9B;AACA,SAAS,eAAT,QAAgC,aAAhC;AACA,SAAS,gBAAT,QAAiC,SAAjC;AAIA;;AAEG;;AACH,IAAA,GAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyB,EAAA,SAAA,CAAA,GAAA,EAAA,MAAA,CAAA;;AAAzB,WAAA,GAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AASE;;;AACgB,IAAA,KAAA,CAAA,IAAA,GAAe,KAAf;;AA2BjB;AApCC;;;AAGG;;;AACI,EAAA,GAAA,CAAA,iBAAA,GAAP,YAAA;AACE,WAAO,eAAP;AACD,GAFM;AAOP;;AAEG;;;AACI,EAAA,GAAA,CAAA,SAAA,CAAA,UAAA,GAAP,UAAkB,IAAlB,EAA0C;AACxC,SAAK,YAAL,CAAkB;AAAE,MAAA,IAAI,EAAA;AAAN,KAAlB;;AACM,QAAA,EAAA,GAAqB,IAArB;AAAA,QAAE,KAAK,GAAA,EAAA,CAAA,KAAP;AAAA,QAAS,OAAO,GAAA,EAAA,CAAA,OAAhB;;AACE,QAAA,MAAM,GAAwB,OAAO,CAA/B,MAAN;AAAA,QAAQ,MAAM,GAAgB,OAAO,CAAvB,MAAd;AAAA,QAAgB,SAAS,GAAK,OAAO,CAAZ,SAAzB;;AACR,QAAM,oBAAoB,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAQ,OAAR,CAAA,EAAe;AAAE,MAAA,MAAM,EAAE,MAAV;AAAkB,MAAA,MAAM,EAAE;AAA1B,KAAf,CAA1B;;AACA,IAAA,IAAI,CAAC;AAAE,MAAA,KAAK,EAAA,KAAP;AAAS,MAAA,OAAO,EAAE;AAAlB,KAAD,CAAJ;AACA,IAAA,KAAK,CAAC,UAAN,CAAiB,uBAAuB,CAAC,gBAAgB,CAAC,IAAD,CAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,EAAiD,SAAjD,CAAxC;AACD,GAPM;AASP;;AAEG;;;AACO,EAAA,GAAA,CAAA,SAAA,CAAA,iBAAA,GAAV,YAAA;AACE,WAAO,GAAG,CAAC,iBAAJ,EAAP;AACD,GAFS;AAIV;;AAEG;;;AACO,EAAA,GAAA,CAAA,SAAA,CAAA,gBAAA,GAAV,YAAA;AACE,WAAO,OAAP;AACD,GAFS;;AAGZ,SAAA,GAAA;AAAC,CArCD,CAAyB,IAAzB,CAAA","sourcesContent":["import { Plot } from '../../core/plot';\nimport { Adaptor } from '../../core/adaptor';\nimport { getDataWhetherPecentage } from '../../utils/transform/percent';\nimport { BarOptions } from './types';\nimport { adaptor, meta } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constants';\nimport { transformBarData } from './utils';\n\nexport type { BarOptions };\n\n/**\n * 条形图\n */\nexport class Bar extends Plot<BarOptions> {\n  /**\n   * 获取 条形图 默认配置项\n   * 供外部使用\n   */\n  static getDefaultOptions(): Partial<BarOptions> {\n    return DEFAULT_OPTIONS;\n  }\n\n  /** 图表类型 */\n  public readonly type: string = 'bar';\n\n  /**\n   * @override\n   */\n  public changeData(data: BarOptions['data']) {\n    this.updateOption({ data });\n    const { chart, options } = this;\n    const { xField, yField, isPercent } = options;\n    const switchedFieldOptions = { ...options, xField: yField, yField: xField };\n    meta({ chart, options: switchedFieldOptions });\n    chart.changeData(getDataWhetherPecentage(transformBarData(data), xField, yField, xField, isPercent));\n  }\n\n  /**\n   * 获取 条形图 默认配置\n   */\n  protected getDefaultOptions() {\n    return Bar.getDefaultOptions();\n  }\n\n  /**\n   * 获取 条形图 的适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<BarOptions> {\n    return adaptor;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}