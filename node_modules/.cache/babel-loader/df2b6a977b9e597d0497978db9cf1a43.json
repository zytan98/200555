{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { get, keys } from '@antv/util';\nimport { tooltip, interaction as commonInteraction, animation as commonAnimation, theme as commonTheme, limitInPlot as commonLimitInPlot, scale } from '../../adaptor/common';\nimport { interval } from '../../adaptor/geometries';\nimport { flow, findViewById, findGeometry, transformLabel, deepAssign } from '../../utils';\nimport { FIRST_AXES_VIEW, SECOND_AXES_VIEW, SERIES_FIELD_KEY } from './constant';\nimport { isHorizontal, transformData } from './utils';\n/**\n * geometry 处理\n * @param params\n */\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var data = options.data,\n      xField = options.xField,\n      yField = options.yField,\n      color = options.color,\n      barStyle = options.barStyle,\n      widthRatio = options.widthRatio,\n      legend = options.legend,\n      layout = options.layout; // 处理数据\n\n  var groupData = transformData(xField, yField, SERIES_FIELD_KEY, data, isHorizontal(layout)); // 在创建子 view 执行后不行，需要在前面处理 legend\n\n  if (legend) {\n    chart.legend(SERIES_FIELD_KEY, legend);\n  } else if (legend === false) {\n    chart.legend(false);\n  } // 创建 view\n\n\n  var firstView;\n  var secondView;\n  var firstViewData = groupData[0],\n      secondViewData = groupData[1]; // 横向\n\n  if (isHorizontal(layout)) {\n    firstView = chart.createView({\n      region: {\n        start: {\n          x: 0,\n          y: 0\n        },\n        end: {\n          x: 0.5,\n          y: 1\n        }\n      },\n      id: FIRST_AXES_VIEW\n    });\n    firstView.coordinate().transpose().reflect('x');\n    secondView = chart.createView({\n      region: {\n        start: {\n          x: 0.5,\n          y: 0\n        },\n        end: {\n          x: 1,\n          y: 1\n        }\n      },\n      id: SECOND_AXES_VIEW\n    });\n    secondView.coordinate().transpose(); // @说明: 测试发现，横向因为轴的反转，需要数据也反转，不然会图形渲染是反的(翻转操作进入到 transform 中处理)\n\n    firstView.data(firstViewData);\n    secondView.data(secondViewData);\n  } else {\n    // 纵向\n    firstView = chart.createView({\n      region: {\n        start: {\n          x: 0,\n          y: 0\n        },\n        end: {\n          x: 1,\n          y: 0.5\n        }\n      },\n      id: FIRST_AXES_VIEW\n    });\n    secondView = chart.createView({\n      region: {\n        start: {\n          x: 0,\n          y: 0.5\n        },\n        end: {\n          x: 1,\n          y: 1\n        }\n      },\n      id: SECOND_AXES_VIEW\n    });\n    secondView.coordinate().reflect('y');\n    firstView.data(firstViewData);\n    secondView.data(secondViewData);\n  }\n\n  var left = deepAssign({}, params, {\n    chart: firstView,\n    options: {\n      widthRatio: widthRatio,\n      xField: xField,\n      yField: yField[0],\n      seriesField: SERIES_FIELD_KEY,\n      interval: {\n        color: color,\n        style: barStyle\n      }\n    }\n  });\n  interval(left);\n  var right = deepAssign({}, params, {\n    chart: secondView,\n    options: {\n      xField: xField,\n      yField: yField[1],\n      seriesField: SERIES_FIELD_KEY,\n      widthRatio: widthRatio,\n      interval: {\n        color: color,\n        style: barStyle\n      }\n    }\n  });\n  interval(right);\n  return params;\n}\n/**\n * meta 配置\n * - 对称条形图对数据进行了处理，通过 SERIES_FIELD_KEY 来对两条 yField 数据进行分类\n * @param params\n */\n\n\nfunction meta(params) {\n  var _a, _b, _c;\n\n  var options = params.options,\n      chart = params.chart;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField;\n  var firstView = findViewById(chart, FIRST_AXES_VIEW);\n  var secondView = findViewById(chart, SECOND_AXES_VIEW);\n  var aliasMap = {};\n  keys((options === null || options === void 0 ? void 0 : options.meta) || {}).map(function (metaKey) {\n    if (get(options === null || options === void 0 ? void 0 : options.meta, [metaKey, 'alias'])) {\n      aliasMap[metaKey] = options.meta[metaKey].alias;\n    }\n  });\n  chart.scale((_a = {}, _a[SERIES_FIELD_KEY] = {\n    sync: true,\n    formatter: function (v) {\n      return get(aliasMap, v, v);\n    }\n  }, _a));\n  scale((_b = {}, _b[xField] = xAxis, _b[yField[0]] = yAxis[yField[0]], _b))(deepAssign({}, params, {\n    chart: firstView\n  }));\n  scale((_c = {}, _c[xField] = xAxis, _c[yField[1]] = yAxis[yField[1]], _c))(deepAssign({}, params, {\n    chart: secondView\n  }));\n  return params;\n}\n/**\n * axis 配置\n * @param params\n */\n\n\nfunction axis(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField,\n      layout = options.layout;\n  var firstView = findViewById(chart, FIRST_AXES_VIEW);\n  var secondView = findViewById(chart, SECOND_AXES_VIEW); // 第二个 view axis 始终隐藏; 注意 bottom 的时候，只隐藏 label，其他共用配置\n  // @ts-ignore\n\n  if ((xAxis === null || xAxis === void 0 ? void 0 : xAxis.position) === 'bottom') {\n    // fixme 直接设置 label: null 会导致 tickLine 无法显示\n    secondView.axis(xField, __assign(__assign({}, xAxis), {\n      label: {\n        formatter: function () {\n          return '';\n        }\n      }\n    }));\n  } else {\n    secondView.axis(xField, false);\n  } // 为 false 则是不显示 firstView 轴\n\n\n  if (xAxis === false) {\n    firstView.axis(xField, false);\n  } else {\n    firstView.axis(xField, __assign({\n      // 不同布局 firstView 的坐标轴显示位置\n      position: isHorizontal(layout) ? 'top' : 'bottom'\n    }, xAxis));\n  }\n\n  if (yAxis === false) {\n    firstView.axis(yField[0], false);\n    secondView.axis(yField[1], false);\n  } else {\n    firstView.axis(yField[0], yAxis[yField[0]]);\n    secondView.axis(yField[1], yAxis[yField[1]]);\n  }\n  /**\n   *  这个注入，主要是在syncViewPadding时候拿到相对应的配置：布局和轴的位置\n   *  TODO 之后希望 g2 View 对象可以开放 setter 可以设置一些需要的东西\n   */\n  //@ts-ignore\n\n\n  chart.__axisPosition = {\n    position: firstView.getOptions().axes[xField].position,\n    layout: layout\n  };\n  return params;\n}\n/**\n * interaction 配置\n * @param params\n */\n\n\nexport function interaction(params) {\n  var chart = params.chart;\n  commonInteraction(deepAssign({}, params, {\n    chart: findViewById(chart, FIRST_AXES_VIEW)\n  }));\n  commonInteraction(deepAssign({}, params, {\n    chart: findViewById(chart, SECOND_AXES_VIEW)\n  }));\n  return params;\n}\n/**\n * limitInPlot\n * @param params\n */\n\nexport function limitInPlot(params) {\n  var chart = params.chart,\n      options = params.options;\n  var yField = options.yField,\n      yAxis = options.yAxis;\n  commonLimitInPlot(deepAssign({}, params, {\n    chart: findViewById(chart, FIRST_AXES_VIEW),\n    options: {\n      yAxis: yAxis[yField[0]]\n    }\n  }));\n  commonLimitInPlot(deepAssign({}, params, {\n    chart: findViewById(chart, SECOND_AXES_VIEW),\n    options: {\n      yAxis: yAxis[yField[1]]\n    }\n  }));\n  return params;\n}\n/**\n * theme\n * @param params\n */\n\nexport function theme(params) {\n  var chart = params.chart;\n  commonTheme(deepAssign({}, params, {\n    chart: findViewById(chart, FIRST_AXES_VIEW)\n  }));\n  commonTheme(deepAssign({}, params, {\n    chart: findViewById(chart, SECOND_AXES_VIEW)\n  }));\n  return params;\n}\n/**\n * animation\n * @param params\n */\n\nexport function animation(params) {\n  var chart = params.chart;\n  commonAnimation(deepAssign({}, params, {\n    chart: findViewById(chart, FIRST_AXES_VIEW)\n  }));\n  commonAnimation(deepAssign({}, params, {\n    chart: findViewById(chart, SECOND_AXES_VIEW)\n  }));\n  return params;\n}\n/**\n * label 配置 (1. 设置 offset 偏移量默认值 2. leftView 偏移量需要 *= -1)\n * @param params\n */\n\nfunction label(params) {\n  var _this = this;\n\n  var _a, _b;\n\n  var chart = params.chart,\n      options = params.options;\n  var label = options.label,\n      yField = options.yField,\n      layout = options.layout;\n  var firstView = findViewById(chart, FIRST_AXES_VIEW);\n  var secondView = findViewById(chart, SECOND_AXES_VIEW);\n  var leftGeometry = findGeometry(firstView, 'interval');\n  var rightGeometry = findGeometry(secondView, 'interval');\n\n  if (!label) {\n    leftGeometry.label(false);\n    rightGeometry.label(false);\n  } else {\n    var callback = label.callback,\n        cfg_1 = __rest(label, [\"callback\"]);\n    /** ---- 设置默认配置 ---- */\n    // 默认居中\n\n\n    if (!cfg_1.position) {\n      cfg_1.position = 'middle';\n    }\n\n    if (cfg_1.offset === undefined) {\n      cfg_1.offset = 2;\n    }\n    /** ---- leftView label 设置 ---- */\n\n\n    var leftLabelCfg = __assign({}, cfg_1);\n\n    if (isHorizontal(layout)) {\n      // 设置 textAlign 默认值\n      var textAlign = ((_a = leftLabelCfg.style) === null || _a === void 0 ? void 0 : _a.textAlign) || (cfg_1.position === 'middle' ? 'center' : 'left');\n      cfg_1.style = deepAssign({}, cfg_1.style, {\n        textAlign: textAlign\n      });\n      var textAlignMap = {\n        left: 'right',\n        right: 'left',\n        center: 'center'\n      };\n      leftLabelCfg.style = deepAssign({}, leftLabelCfg.style, {\n        textAlign: textAlignMap[textAlign]\n      });\n    } else {\n      var positionMap_1 = {\n        top: 'bottom',\n        bottom: 'top',\n        middle: 'middle'\n      };\n\n      if (typeof cfg_1.position === 'string') {\n        cfg_1.position = positionMap_1[cfg_1.position];\n      } else if (typeof cfg_1.position === 'function') {\n        cfg_1.position = function () {\n          var args = [];\n\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n\n          return positionMap_1[cfg_1.position.apply(_this, args)];\n        };\n      } // 设置 textBaseline 默认值\n\n\n      var textBaseline = ((_b = leftLabelCfg.style) === null || _b === void 0 ? void 0 : _b.textBaseline) || 'bottom';\n      leftLabelCfg.style = deepAssign({}, leftLabelCfg.style, {\n        textBaseline: textBaseline\n      });\n      var textBaselineMap = {\n        top: 'bottom',\n        bottom: 'top',\n        middle: 'middle'\n      };\n      cfg_1.style = deepAssign({}, cfg_1.style, {\n        textBaseline: textBaselineMap[textBaseline]\n      });\n    }\n\n    leftGeometry.label({\n      fields: [yField[0]],\n      callback: callback,\n      cfg: transformLabel(leftLabelCfg)\n    });\n    rightGeometry.label({\n      fields: [yField[1]],\n      callback: callback,\n      cfg: transformLabel(cfg_1)\n    });\n  }\n\n  return params;\n}\n/**\n * 对称条形图适配器\n * @param chart\n * @param options\n */\n\n\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(geometry, meta, axis, limitInPlot, theme, label, tooltip, interaction, animation)(params);\n}","map":{"version":3,"sources":["../../../src/plots/bidirectional-bar/adaptor.ts"],"names":[],"mappings":";AACA,SAAS,GAAT,EAAc,IAAd,QAA0B,YAA1B;AAEA,SACE,OADF,EAEE,WAAW,IAAI,iBAFjB,EAGE,SAAS,IAAI,eAHf,EAIE,KAAK,IAAI,WAJX,EAKE,WAAW,IAAI,iBALjB,EAME,KANF,QAOO,sBAPP;AAQA,SAAS,QAAT,QAAyB,0BAAzB;AACA,SAAS,IAAT,EAAe,YAAf,EAA6B,YAA7B,EAA2C,cAA3C,EAA2D,UAA3D,QAA6E,aAA7E;AAEA,SAAS,eAAT,EAA0B,gBAA1B,EAA4C,gBAA5C,QAAoE,YAApE;AACA,SAAS,YAAT,EAAuB,aAAvB,QAA4C,SAA5C;AAEA;;;AAGG;;AACH,SAAS,QAAT,CAAkB,MAAlB,EAAyD;AAC/C,MAAA,KAAK,GAAc,MAAM,CAApB,KAAL;AAAA,MAAO,OAAO,GAAK,MAAM,CAAX,OAAd;AACA,MAAA,IAAI,GAAkE,OAAO,CAAzE,IAAJ;AAAA,MAAM,MAAM,GAA0D,OAAO,CAAjE,MAAZ;AAAA,MAAc,MAAM,GAAkD,OAAO,CAAzD,MAApB;AAAA,MAAsB,KAAK,GAA2C,OAAO,CAAlD,KAA3B;AAAA,MAA6B,QAAQ,GAAiC,OAAO,CAAxC,QAArC;AAAA,MAAuC,UAAU,GAAqB,OAAO,CAA5B,UAAjD;AAAA,MAAmD,MAAM,GAAa,OAAO,CAApB,MAAzD;AAAA,MAA2D,MAAM,GAAK,OAAO,CAAZ,MAAjE,CAF+C,CAIvD;;AACA,MAAM,SAAS,GAAU,aAAa,CAAC,MAAD,EAAS,MAAT,EAAiB,gBAAjB,EAAmC,IAAnC,EAAyC,YAAY,CAAC,MAAD,CAArD,CAAtC,CALuD,CAMvD;;AACA,MAAI,MAAJ,EAAY;AACV,IAAA,KAAK,CAAC,MAAN,CAAa,gBAAb,EAA+B,MAA/B;AACD,GAFD,MAEO,IAAI,MAAM,KAAK,KAAf,EAAsB;AAC3B,IAAA,KAAK,CAAC,MAAN,CAAa,KAAb;AACD,GAXsD,CAYvD;;;AACA,MAAI,SAAJ;AACA,MAAI,UAAJ;AACO,MAAA,aAAa,GAAoB,SAAS,CAA7B,CAA6B,CAA1C;AAAA,MAAe,cAAc,GAAI,SAAS,CAAb,CAAa,CAA1C,CAfgD,CAiBvD;;AACA,MAAI,YAAY,CAAC,MAAD,CAAhB,EAA0B;AACxB,IAAA,SAAS,GAAG,KAAK,CAAC,UAAN,CAAiB;AAC3B,MAAA,MAAM,EAAE;AACN,QAAA,KAAK,EAAE;AAAE,UAAA,CAAC,EAAE,CAAL;AAAQ,UAAA,CAAC,EAAE;AAAX,SADD;AAEN,QAAA,GAAG,EAAE;AAAE,UAAA,CAAC,EAAE,GAAL;AAAU,UAAA,CAAC,EAAE;AAAb;AAFC,OADmB;AAK3B,MAAA,EAAE,EAAE;AALuB,KAAjB,CAAZ;AAQA,IAAA,SAAS,CAAC,UAAV,GAAuB,SAAvB,GAAmC,OAAnC,CAA2C,GAA3C;AAEA,IAAA,UAAU,GAAG,KAAK,CAAC,UAAN,CAAiB;AAC5B,MAAA,MAAM,EAAE;AACN,QAAA,KAAK,EAAE;AAAE,UAAA,CAAC,EAAE,GAAL;AAAU,UAAA,CAAC,EAAE;AAAb,SADD;AAEN,QAAA,GAAG,EAAE;AAAE,UAAA,CAAC,EAAE,CAAL;AAAQ,UAAA,CAAC,EAAE;AAAX;AAFC,OADoB;AAK5B,MAAA,EAAE,EAAE;AALwB,KAAjB,CAAb;AAOA,IAAA,UAAU,CAAC,UAAX,GAAwB,SAAxB,GAlBwB,CAoBxB;;AACA,IAAA,SAAS,CAAC,IAAV,CAAe,aAAf;AACA,IAAA,UAAU,CAAC,IAAX,CAAgB,cAAhB;AACD,GAvBD,MAuBO;AACL;AACA,IAAA,SAAS,GAAG,KAAK,CAAC,UAAN,CAAiB;AAC3B,MAAA,MAAM,EAAE;AACN,QAAA,KAAK,EAAE;AAAE,UAAA,CAAC,EAAE,CAAL;AAAQ,UAAA,CAAC,EAAE;AAAX,SADD;AAEN,QAAA,GAAG,EAAE;AAAE,UAAA,CAAC,EAAE,CAAL;AAAQ,UAAA,CAAC,EAAE;AAAX;AAFC,OADmB;AAK3B,MAAA,EAAE,EAAE;AALuB,KAAjB,CAAZ;AAOA,IAAA,UAAU,GAAG,KAAK,CAAC,UAAN,CAAiB;AAC5B,MAAA,MAAM,EAAE;AACN,QAAA,KAAK,EAAE;AAAE,UAAA,CAAC,EAAE,CAAL;AAAQ,UAAA,CAAC,EAAE;AAAX,SADD;AAEN,QAAA,GAAG,EAAE;AAAE,UAAA,CAAC,EAAE,CAAL;AAAQ,UAAA,CAAC,EAAE;AAAX;AAFC,OADoB;AAK5B,MAAA,EAAE,EAAE;AALwB,KAAjB,CAAb;AAOA,IAAA,UAAU,CAAC,UAAX,GAAwB,OAAxB,CAAgC,GAAhC;AAEA,IAAA,SAAS,CAAC,IAAV,CAAe,aAAf;AACA,IAAA,UAAU,CAAC,IAAX,CAAgB,cAAhB;AACD;;AACD,MAAM,IAAI,GAAG,UAAU,CAAC,EAAD,EAAK,MAAL,EAAa;AAClC,IAAA,KAAK,EAAE,SAD2B;AAElC,IAAA,OAAO,EAAE;AACP,MAAA,UAAU,EAAA,UADH;AAEP,MAAA,MAAM,EAAA,MAFC;AAGP,MAAA,MAAM,EAAE,MAAM,CAAC,CAAD,CAHP;AAIP,MAAA,WAAW,EAAE,gBAJN;AAKP,MAAA,QAAQ,EAAE;AACR,QAAA,KAAK,EAAA,KADG;AAER,QAAA,KAAK,EAAE;AAFC;AALH;AAFyB,GAAb,CAAvB;AAaA,EAAA,QAAQ,CAAC,IAAD,CAAR;AAEA,MAAM,KAAK,GAAG,UAAU,CAAC,EAAD,EAAK,MAAL,EAAa;AACnC,IAAA,KAAK,EAAE,UAD4B;AAEnC,IAAA,OAAO,EAAE;AACP,MAAA,MAAM,EAAA,MADC;AAEP,MAAA,MAAM,EAAE,MAAM,CAAC,CAAD,CAFP;AAGP,MAAA,WAAW,EAAE,gBAHN;AAIP,MAAA,UAAU,EAAA,UAJH;AAKP,MAAA,QAAQ,EAAE;AACR,QAAA,KAAK,EAAA,KADG;AAER,QAAA,KAAK,EAAE;AAFC;AALH;AAF0B,GAAb,CAAxB;AAcA,EAAA,QAAQ,CAAC,KAAD,CAAR;AAEA,SAAO,MAAP;AACD;AAED;;;;AAIG;;;AACH,SAAS,IAAT,CAAc,MAAd,EAAqD;;;AAC3C,MAAA,OAAO,GAAY,MAAM,CAAlB,OAAP;AAAA,MAAS,KAAK,GAAK,MAAM,CAAX,KAAd;AACA,MAAA,KAAK,GAA4B,OAAO,CAAnC,KAAL;AAAA,MAAO,KAAK,GAAqB,OAAO,CAA5B,KAAZ;AAAA,MAAc,MAAM,GAAa,OAAO,CAApB,MAApB;AAAA,MAAsB,MAAM,GAAK,OAAO,CAAZ,MAA5B;AACR,MAAM,SAAS,GAAG,YAAY,CAAC,KAAD,EAAQ,eAAR,CAA9B;AACA,MAAM,UAAU,GAAG,YAAY,CAAC,KAAD,EAAQ,gBAAR,CAA/B;AAEA,MAAM,QAAQ,GAAG,EAAjB;AACA,EAAA,IAAI,CAAC,CAAA,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE,IAAT,KAAiB,EAAlB,CAAJ,CAA0B,GAA1B,CAA8B,UAAC,OAAD,EAAQ;AACpC,QAAI,GAAG,CAAC,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE,IAAV,EAAgB,CAAC,OAAD,EAAU,OAAV,CAAhB,CAAP,EAA4C;AAC1C,MAAA,QAAQ,CAAC,OAAD,CAAR,GAAoB,OAAO,CAAC,IAAR,CAAa,OAAb,EAAsB,KAA1C;AACD;AACF,GAJD;AAMA,EAAA,KAAK,CAAC,KAAN,EAAW,EAAA,GAAA,EAAA,EACT,EAAA,CAAC,gBAAD,CAAA,GAAoB;AAClB,IAAA,IAAI,EAAE,IADY;AAElB,IAAA,SAAS,EAAE,UAAC,CAAD,EAAE;AACX,aAAO,GAAG,CAAC,QAAD,EAAW,CAAX,EAAc,CAAd,CAAV;AACD;AAJiB,GADX,EAOT,EAPF;AASA,EAAA,KAAK,EAAA,EAAA,GAAA,EAAA,EACH,EAAA,CAAC,MAAD,CAAA,GAAU,KADP,EAEH,EAAA,CAAC,MAAM,CAAC,CAAD,CAAP,CAAA,GAAa,KAAK,CAAC,MAAM,CAAC,CAAD,CAAP,CAFf,EAGH,EAHG,EAAL,CAGG,UAAU,CAAC,EAAD,EAAK,MAAL,EAAa;AAAE,IAAA,KAAK,EAAE;AAAT,GAAb,CAHb;AAKA,EAAA,KAAK,EAAA,EAAA,GAAA,EAAA,EACH,EAAA,CAAC,MAAD,CAAA,GAAU,KADP,EAEH,EAAA,CAAC,MAAM,CAAC,CAAD,CAAP,CAAA,GAAa,KAAK,CAAC,MAAM,CAAC,CAAD,CAAP,CAFf,EAGH,EAHG,EAAL,CAGG,UAAU,CAAC,EAAD,EAAK,MAAL,EAAa;AAAE,IAAA,KAAK,EAAE;AAAT,GAAb,CAHb;AAKA,SAAO,MAAP;AACD;AAED;;;AAGG;;;AACH,SAAS,IAAT,CAAc,MAAd,EAAqD;AAC3C,MAAA,KAAK,GAAc,MAAM,CAApB,KAAL;AAAA,MAAO,OAAO,GAAK,MAAM,CAAX,OAAd;AACA,MAAA,KAAK,GAAoC,OAAO,CAA3C,KAAL;AAAA,MAAO,KAAK,GAA6B,OAAO,CAApC,KAAZ;AAAA,MAAc,MAAM,GAAqB,OAAO,CAA5B,MAApB;AAAA,MAAsB,MAAM,GAAa,OAAO,CAApB,MAA5B;AAAA,MAA8B,MAAM,GAAK,OAAO,CAAZ,MAApC;AAER,MAAM,SAAS,GAAG,YAAY,CAAC,KAAD,EAAQ,eAAR,CAA9B;AACA,MAAM,UAAU,GAAG,YAAY,CAAC,KAAD,EAAQ,gBAAR,CAA/B,CALmD,CAMnD;AACA;;AACA,MAAI,CAAA,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAK,KAAA,CAAL,GAAA,KAAK,CAAE,QAAP,MAAoB,QAAxB,EAAkC;AAChC;AACA,IAAA,UAAU,CAAC,IAAX,CAAgB,MAAhB,EAAsB,QAAA,CAAA,QAAA,CAAA,EAAA,EAAO,KAAP,CAAA,EAAY;AAAE,MAAA,KAAK,EAAE;AAAE,QAAA,SAAS,EAAE,YAAA;AAAM,iBAAA,EAAA;AAAE;AAArB;AAAT,KAAZ,CAAtB;AACD,GAHD,MAGO;AACL,IAAA,UAAU,CAAC,IAAX,CAAgB,MAAhB,EAAwB,KAAxB;AACD,GAbkD,CAenD;;;AACA,MAAI,KAAK,KAAK,KAAd,EAAqB;AACnB,IAAA,SAAS,CAAC,IAAV,CAAe,MAAf,EAAuB,KAAvB;AACD,GAFD,MAEO;AACL,IAAA,SAAS,CAAC,IAAV,CAAe,MAAf,EAAqB,QAAA,CAAA;AACnB;AACA,MAAA,QAAQ,EAAE,YAAY,CAAC,MAAD,CAAZ,GAAuB,KAAvB,GAA+B;AAFtB,KAAA,EAGhB,KAHgB,CAArB;AAKD;;AAED,MAAI,KAAK,KAAK,KAAd,EAAqB;AACnB,IAAA,SAAS,CAAC,IAAV,CAAe,MAAM,CAAC,CAAD,CAArB,EAA0B,KAA1B;AACA,IAAA,UAAU,CAAC,IAAX,CAAgB,MAAM,CAAC,CAAD,CAAtB,EAA2B,KAA3B;AACD,GAHD,MAGO;AACL,IAAA,SAAS,CAAC,IAAV,CAAe,MAAM,CAAC,CAAD,CAArB,EAA0B,KAAK,CAAC,MAAM,CAAC,CAAD,CAAP,CAA/B;AACA,IAAA,UAAU,CAAC,IAAX,CAAgB,MAAM,CAAC,CAAD,CAAtB,EAA2B,KAAK,CAAC,MAAM,CAAC,CAAD,CAAP,CAAhC;AACD;AACD;;;AAGG;AAEH;;;AACA,EAAA,KAAK,CAAC,cAAN,GAAuB;AACrB,IAAA,QAAQ,EAAE,SAAS,CAAC,UAAV,GAAuB,IAAvB,CAA4B,MAA5B,EAAoC,QADzB;AAErB,IAAA,MAAM,EAAA;AAFe,GAAvB;AAIA,SAAO,MAAP;AACD;AAED;;;AAGG;;;AACH,OAAM,SAAU,WAAV,CAAsB,MAAtB,EAA6D;AACzD,MAAA,KAAK,GAAK,MAAM,CAAX,KAAL;AAER,EAAA,iBAAiB,CAAC,UAAU,CAAC,EAAD,EAAK,MAAL,EAAa;AAAE,IAAA,KAAK,EAAE,YAAY,CAAC,KAAD,EAAQ,eAAR;AAArB,GAAb,CAAX,CAAjB;AACA,EAAA,iBAAiB,CAAC,UAAU,CAAC,EAAD,EAAK,MAAL,EAAa;AAAE,IAAA,KAAK,EAAE,YAAY,CAAC,KAAD,EAAQ,gBAAR;AAArB,GAAb,CAAX,CAAjB;AAEA,SAAO,MAAP;AACD;AAED;;;AAGG;;AACH,OAAM,SAAU,WAAV,CAAsB,MAAtB,EAA6D;AACzD,MAAA,KAAK,GAAc,MAAM,CAApB,KAAL;AAAA,MAAO,OAAO,GAAK,MAAM,CAAX,OAAd;AACA,MAAA,MAAM,GAAY,OAAO,CAAnB,MAAN;AAAA,MAAQ,KAAK,GAAK,OAAO,CAAZ,KAAb;AAER,EAAA,iBAAiB,CACf,UAAU,CAAC,EAAD,EAAK,MAAL,EAAa;AACrB,IAAA,KAAK,EAAE,YAAY,CAAC,KAAD,EAAQ,eAAR,CADE;AAErB,IAAA,OAAO,EAAE;AACP,MAAA,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAD,CAAP;AADL;AAFY,GAAb,CADK,CAAjB;AASA,EAAA,iBAAiB,CACf,UAAU,CAAC,EAAD,EAAK,MAAL,EAAa;AACrB,IAAA,KAAK,EAAE,YAAY,CAAC,KAAD,EAAQ,gBAAR,CADE;AAErB,IAAA,OAAO,EAAE;AACP,MAAA,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAD,CAAP;AADL;AAFY,GAAb,CADK,CAAjB;AASA,SAAO,MAAP;AACD;AAED;;;AAGG;;AACH,OAAM,SAAU,KAAV,CAAgB,MAAhB,EAAuD;AACnD,MAAA,KAAK,GAAK,MAAM,CAAX,KAAL;AAER,EAAA,WAAW,CAAC,UAAU,CAAC,EAAD,EAAK,MAAL,EAAa;AAAE,IAAA,KAAK,EAAE,YAAY,CAAC,KAAD,EAAQ,eAAR;AAArB,GAAb,CAAX,CAAX;AACA,EAAA,WAAW,CAAC,UAAU,CAAC,EAAD,EAAK,MAAL,EAAa;AAAE,IAAA,KAAK,EAAE,YAAY,CAAC,KAAD,EAAQ,gBAAR;AAArB,GAAb,CAAX,CAAX;AAEA,SAAO,MAAP;AACD;AAED;;;AAGG;;AACH,OAAM,SAAU,SAAV,CAAoB,MAApB,EAA2D;AACvD,MAAA,KAAK,GAAK,MAAM,CAAX,KAAL;AAER,EAAA,eAAe,CAAC,UAAU,CAAC,EAAD,EAAK,MAAL,EAAa;AAAE,IAAA,KAAK,EAAE,YAAY,CAAC,KAAD,EAAQ,eAAR;AAArB,GAAb,CAAX,CAAf;AACA,EAAA,eAAe,CAAC,UAAU,CAAC,EAAD,EAAK,MAAL,EAAa;AAAE,IAAA,KAAK,EAAE,YAAY,CAAC,KAAD,EAAQ,gBAAR;AAArB,GAAb,CAAX,CAAf;AAEA,SAAO,MAAP;AACD;AAED;;;AAGG;;AACH,SAAS,KAAT,CAAe,MAAf,EAAsD;AAAtD,MAAA,KAAA,GAAA,IAAA;;;;AACU,MAAA,KAAK,GAAc,MAAM,CAApB,KAAL;AAAA,MAAO,OAAO,GAAK,MAAM,CAAX,OAAd;AACA,MAAA,KAAK,GAAqB,OAAO,CAA5B,KAAL;AAAA,MAAO,MAAM,GAAa,OAAO,CAApB,MAAb;AAAA,MAAe,MAAM,GAAK,OAAO,CAAZ,MAArB;AAER,MAAM,SAAS,GAAG,YAAY,CAAC,KAAD,EAAQ,eAAR,CAA9B;AACA,MAAM,UAAU,GAAG,YAAY,CAAC,KAAD,EAAQ,gBAAR,CAA/B;AACA,MAAM,YAAY,GAAG,YAAY,CAAC,SAAD,EAAY,UAAZ,CAAjC;AACA,MAAM,aAAa,GAAG,YAAY,CAAC,UAAD,EAAa,UAAb,CAAlC;;AAEA,MAAI,CAAC,KAAL,EAAY;AACV,IAAA,YAAY,CAAC,KAAb,CAAmB,KAAnB;AACA,IAAA,aAAa,CAAC,KAAd,CAAoB,KAApB;AACD,GAHD,MAGO;AACG,QAAA,QAAQ,GAAa,KAAK,CAAlB,QAAR;AAAA,QAAa,KAAG,GAAA,MAAA,CAAK,KAAL,EAAlB,CAAA,UAAA,CAAkB,CAAhB;AACR;AACA;;;AACA,QAAI,CAAC,KAAG,CAAC,QAAT,EAAmB;AACjB,MAAA,KAAG,CAAC,QAAJ,GAAe,QAAf;AACD;;AACD,QAAI,KAAG,CAAC,MAAJ,KAAe,SAAnB,EAA8B;AAC5B,MAAA,KAAG,CAAC,MAAJ,GAAa,CAAb;AACD;AAED;;;AACA,QAAM,YAAY,GAAA,QAAA,CAAA,EAAA,EAAQ,KAAR,CAAlB;;AACA,QAAI,YAAY,CAAC,MAAD,CAAhB,EAA0B;AACxB;AACA,UAAM,SAAS,GAAG,CAAA,CAAA,EAAA,GAAA,YAAY,CAAC,KAAb,MAAkB,IAAlB,IAAkB,EAAA,KAAA,KAAA,CAAlB,GAAkB,KAAA,CAAlB,GAAkB,EAAA,CAAE,SAApB,MAAkC,KAAG,CAAC,QAAJ,KAAiB,QAAjB,GAA4B,QAA5B,GAAuC,MAAzE,CAAlB;AACA,MAAA,KAAG,CAAC,KAAJ,GAAY,UAAU,CAAC,EAAD,EAAK,KAAG,CAAC,KAAT,EAAgB;AAAE,QAAA,SAAS,EAAA;AAAX,OAAhB,CAAtB;AACA,UAAM,YAAY,GAAG;AAAE,QAAA,IAAI,EAAE,OAAR;AAAiB,QAAA,KAAK,EAAE,MAAxB;AAAgC,QAAA,MAAM,EAAE;AAAxC,OAArB;AACA,MAAA,YAAY,CAAC,KAAb,GAAqB,UAAU,CAAC,EAAD,EAAK,YAAY,CAAC,KAAlB,EAAyB;AAAE,QAAA,SAAS,EAAE,YAAY,CAAC,SAAD;AAAzB,OAAzB,CAA/B;AACD,KAND,MAMO;AACL,UAAM,aAAW,GAAG;AAAE,QAAA,GAAG,EAAE,QAAP;AAAiB,QAAA,MAAM,EAAE,KAAzB;AAAgC,QAAA,MAAM,EAAE;AAAxC,OAApB;;AACA,UAAI,OAAO,KAAG,CAAC,QAAX,KAAwB,QAA5B,EAAsC;AACpC,QAAA,KAAG,CAAC,QAAJ,GAAe,aAAW,CAAC,KAAG,CAAC,QAAL,CAA1B;AACD,OAFD,MAEO,IAAI,OAAO,KAAG,CAAC,QAAX,KAAwB,UAA5B,EAAwC;AAC7C,QAAA,KAAG,CAAC,QAAJ,GAAe,YAAA;AAAC,cAAA,IAAA,GAAA,EAAA;;eAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAO;AAAP,YAAA,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAAY,iBAAA,aAAW,CAAE,KAAG,CAAC,QAAJ,CAA0B,KAA1B,CAAgC,KAAhC,EAAsC,IAAtC,CAAF,CAAX;AAAyD,SAArF;AACD,OANI,CAOL;;;AACA,UAAM,YAAY,GAAG,CAAA,CAAA,EAAA,GAAA,YAAY,CAAC,KAAb,MAAkB,IAAlB,IAAkB,EAAA,KAAA,KAAA,CAAlB,GAAkB,KAAA,CAAlB,GAAkB,EAAA,CAAE,YAApB,KAAoC,QAAzD;AACA,MAAA,YAAY,CAAC,KAAb,GAAqB,UAAU,CAAC,EAAD,EAAK,YAAY,CAAC,KAAlB,EAAyB;AAAE,QAAA,YAAY,EAAA;AAAd,OAAzB,CAA/B;AACA,UAAM,eAAe,GAAG;AAAE,QAAA,GAAG,EAAE,QAAP;AAAiB,QAAA,MAAM,EAAE,KAAzB;AAAgC,QAAA,MAAM,EAAE;AAAxC,OAAxB;AACA,MAAA,KAAG,CAAC,KAAJ,GAAY,UAAU,CAAC,EAAD,EAAK,KAAG,CAAC,KAAT,EAAgB;AAAE,QAAA,YAAY,EAAE,eAAe,CAAC,YAAD;AAA/B,OAAhB,CAAtB;AACD;;AAED,IAAA,YAAY,CAAC,KAAb,CAAmB;AACjB,MAAA,MAAM,EAAE,CAAC,MAAM,CAAC,CAAD,CAAP,CADS;AAEjB,MAAA,QAAQ,EAAA,QAFS;AAGjB,MAAA,GAAG,EAAE,cAAc,CAAC,YAAD;AAHF,KAAnB;AAKA,IAAA,aAAa,CAAC,KAAd,CAAoB;AAClB,MAAA,MAAM,EAAE,CAAC,MAAM,CAAC,CAAD,CAAP,CADU;AAElB,MAAA,QAAQ,EAAA,QAFU;AAGlB,MAAA,GAAG,EAAE,cAAc,CAAC,KAAD;AAHD,KAApB;AAKD;;AAED,SAAO,MAAP;AACD;AAED;;;;AAIG;;;AACH,OAAM,SAAU,OAAV,CAAkB,MAAlB,EAAyD;AAC7D;AACA,SAAO,IAAI,CAAC,QAAD,EAAW,IAAX,EAAiB,IAAjB,EAAuB,WAAvB,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,OAAlD,EAA2D,WAA3D,EAAwE,SAAxE,CAAJ,CAAuF,MAAvF,CAAP;AACD","sourcesContent":["import { View } from '@antv/g2';\nimport { get, keys } from '@antv/util';\nimport { Params } from '../../core/adaptor';\nimport {\n  tooltip,\n  interaction as commonInteraction,\n  animation as commonAnimation,\n  theme as commonTheme,\n  limitInPlot as commonLimitInPlot,\n  scale,\n} from '../../adaptor/common';\nimport { interval } from '../../adaptor/geometries';\nimport { flow, findViewById, findGeometry, transformLabel, deepAssign } from '../../utils';\nimport { BidirectionalBarOptions } from './types';\nimport { FIRST_AXES_VIEW, SECOND_AXES_VIEW, SERIES_FIELD_KEY } from './constant';\nimport { isHorizontal, transformData } from './utils';\n\n/**\n * geometry 处理\n * @param params\n */\nfunction geometry(params: Params<BidirectionalBarOptions>): Params<BidirectionalBarOptions> {\n  const { chart, options } = params;\n  const { data, xField, yField, color, barStyle, widthRatio, legend, layout } = options;\n\n  // 处理数据\n  const groupData: any[] = transformData(xField, yField, SERIES_FIELD_KEY, data, isHorizontal(layout));\n  // 在创建子 view 执行后不行，需要在前面处理 legend\n  if (legend) {\n    chart.legend(SERIES_FIELD_KEY, legend);\n  } else if (legend === false) {\n    chart.legend(false);\n  }\n  // 创建 view\n  let firstView: View;\n  let secondView: View;\n  const [firstViewData, secondViewData] = groupData;\n\n  // 横向\n  if (isHorizontal(layout)) {\n    firstView = chart.createView({\n      region: {\n        start: { x: 0, y: 0 },\n        end: { x: 0.5, y: 1 },\n      },\n      id: FIRST_AXES_VIEW,\n    });\n\n    firstView.coordinate().transpose().reflect('x');\n\n    secondView = chart.createView({\n      region: {\n        start: { x: 0.5, y: 0 },\n        end: { x: 1, y: 1 },\n      },\n      id: SECOND_AXES_VIEW,\n    });\n    secondView.coordinate().transpose();\n\n    // @说明: 测试发现，横向因为轴的反转，需要数据也反转，不然会图形渲染是反的(翻转操作进入到 transform 中处理)\n    firstView.data(firstViewData);\n    secondView.data(secondViewData);\n  } else {\n    // 纵向\n    firstView = chart.createView({\n      region: {\n        start: { x: 0, y: 0 },\n        end: { x: 1, y: 0.5 },\n      },\n      id: FIRST_AXES_VIEW,\n    });\n    secondView = chart.createView({\n      region: {\n        start: { x: 0, y: 0.5 },\n        end: { x: 1, y: 1 },\n      },\n      id: SECOND_AXES_VIEW,\n    });\n    secondView.coordinate().reflect('y');\n\n    firstView.data(firstViewData);\n    secondView.data(secondViewData);\n  }\n  const left = deepAssign({}, params, {\n    chart: firstView,\n    options: {\n      widthRatio,\n      xField,\n      yField: yField[0],\n      seriesField: SERIES_FIELD_KEY,\n      interval: {\n        color,\n        style: barStyle,\n      },\n    },\n  });\n  interval(left);\n\n  const right = deepAssign({}, params, {\n    chart: secondView,\n    options: {\n      xField,\n      yField: yField[1],\n      seriesField: SERIES_FIELD_KEY,\n      widthRatio,\n      interval: {\n        color,\n        style: barStyle,\n      },\n    },\n  });\n\n  interval(right);\n\n  return params;\n}\n\n/**\n * meta 配置\n * - 对称条形图对数据进行了处理，通过 SERIES_FIELD_KEY 来对两条 yField 数据进行分类\n * @param params\n */\nfunction meta(params: Params<BidirectionalBarOptions>): Params<BidirectionalBarOptions> {\n  const { options, chart } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n  const firstView = findViewById(chart, FIRST_AXES_VIEW);\n  const secondView = findViewById(chart, SECOND_AXES_VIEW);\n\n  const aliasMap = {};\n  keys(options?.meta || {}).map((metaKey) => {\n    if (get(options?.meta, [metaKey, 'alias'])) {\n      aliasMap[metaKey] = options.meta[metaKey].alias;\n    }\n  });\n\n  chart.scale({\n    [SERIES_FIELD_KEY]: {\n      sync: true,\n      formatter: (v) => {\n        return get(aliasMap, v, v);\n      },\n    },\n  });\n\n  scale({\n    [xField]: xAxis,\n    [yField[0]]: yAxis[yField[0]],\n  })(deepAssign({}, params, { chart: firstView }));\n\n  scale({\n    [xField]: xAxis,\n    [yField[1]]: yAxis[yField[1]],\n  })(deepAssign({}, params, { chart: secondView }));\n\n  return params;\n}\n\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params: Params<BidirectionalBarOptions>): Params<BidirectionalBarOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField, yField, layout } = options;\n\n  const firstView = findViewById(chart, FIRST_AXES_VIEW);\n  const secondView = findViewById(chart, SECOND_AXES_VIEW);\n  // 第二个 view axis 始终隐藏; 注意 bottom 的时候，只隐藏 label，其他共用配置\n  // @ts-ignore\n  if (xAxis?.position === 'bottom') {\n    // fixme 直接设置 label: null 会导致 tickLine 无法显示\n    secondView.axis(xField, { ...xAxis, label: { formatter: () => '' } });\n  } else {\n    secondView.axis(xField, false);\n  }\n\n  // 为 false 则是不显示 firstView 轴\n  if (xAxis === false) {\n    firstView.axis(xField, false);\n  } else {\n    firstView.axis(xField, {\n      // 不同布局 firstView 的坐标轴显示位置\n      position: isHorizontal(layout) ? 'top' : 'bottom',\n      ...xAxis,\n    });\n  }\n\n  if (yAxis === false) {\n    firstView.axis(yField[0], false);\n    secondView.axis(yField[1], false);\n  } else {\n    firstView.axis(yField[0], yAxis[yField[0]]);\n    secondView.axis(yField[1], yAxis[yField[1]]);\n  }\n  /**\n   *  这个注入，主要是在syncViewPadding时候拿到相对应的配置：布局和轴的位置\n   *  TODO 之后希望 g2 View 对象可以开放 setter 可以设置一些需要的东西\n   */\n\n  //@ts-ignore\n  chart.__axisPosition = {\n    position: firstView.getOptions().axes[xField].position,\n    layout,\n  };\n  return params;\n}\n\n/**\n * interaction 配置\n * @param params\n */\nexport function interaction(params: Params<BidirectionalBarOptions>): Params<BidirectionalBarOptions> {\n  const { chart } = params;\n\n  commonInteraction(deepAssign({}, params, { chart: findViewById(chart, FIRST_AXES_VIEW) }));\n  commonInteraction(deepAssign({}, params, { chart: findViewById(chart, SECOND_AXES_VIEW) }));\n\n  return params;\n}\n\n/**\n * limitInPlot\n * @param params\n */\nexport function limitInPlot(params: Params<BidirectionalBarOptions>): Params<BidirectionalBarOptions> {\n  const { chart, options } = params;\n  const { yField, yAxis } = options;\n\n  commonLimitInPlot(\n    deepAssign({}, params, {\n      chart: findViewById(chart, FIRST_AXES_VIEW),\n      options: {\n        yAxis: yAxis[yField[0]],\n      },\n    })\n  );\n\n  commonLimitInPlot(\n    deepAssign({}, params, {\n      chart: findViewById(chart, SECOND_AXES_VIEW),\n      options: {\n        yAxis: yAxis[yField[1]],\n      },\n    })\n  );\n\n  return params;\n}\n\n/**\n * theme\n * @param params\n */\nexport function theme(params: Params<BidirectionalBarOptions>): Params<BidirectionalBarOptions> {\n  const { chart } = params;\n\n  commonTheme(deepAssign({}, params, { chart: findViewById(chart, FIRST_AXES_VIEW) }));\n  commonTheme(deepAssign({}, params, { chart: findViewById(chart, SECOND_AXES_VIEW) }));\n\n  return params;\n}\n\n/**\n * animation\n * @param params\n */\nexport function animation(params: Params<BidirectionalBarOptions>): Params<BidirectionalBarOptions> {\n  const { chart } = params;\n\n  commonAnimation(deepAssign({}, params, { chart: findViewById(chart, FIRST_AXES_VIEW) }));\n  commonAnimation(deepAssign({}, params, { chart: findViewById(chart, SECOND_AXES_VIEW) }));\n\n  return params;\n}\n\n/**\n * label 配置 (1. 设置 offset 偏移量默认值 2. leftView 偏移量需要 *= -1)\n * @param params\n */\nfunction label(params: Params<BidirectionalBarOptions>): Params<BidirectionalBarOptions> {\n  const { chart, options } = params;\n  const { label, yField, layout } = options;\n\n  const firstView = findViewById(chart, FIRST_AXES_VIEW);\n  const secondView = findViewById(chart, SECOND_AXES_VIEW);\n  const leftGeometry = findGeometry(firstView, 'interval');\n  const rightGeometry = findGeometry(secondView, 'interval');\n\n  if (!label) {\n    leftGeometry.label(false);\n    rightGeometry.label(false);\n  } else {\n    const { callback, ...cfg } = label;\n    /** ---- 设置默认配置 ---- */\n    // 默认居中\n    if (!cfg.position) {\n      cfg.position = 'middle';\n    }\n    if (cfg.offset === undefined) {\n      cfg.offset = 2;\n    }\n\n    /** ---- leftView label 设置 ---- */\n    const leftLabelCfg = { ...cfg };\n    if (isHorizontal(layout)) {\n      // 设置 textAlign 默认值\n      const textAlign = leftLabelCfg.style?.textAlign || (cfg.position === 'middle' ? 'center' : 'left');\n      cfg.style = deepAssign({}, cfg.style, { textAlign });\n      const textAlignMap = { left: 'right', right: 'left', center: 'center' };\n      leftLabelCfg.style = deepAssign({}, leftLabelCfg.style, { textAlign: textAlignMap[textAlign] });\n    } else {\n      const positionMap = { top: 'bottom', bottom: 'top', middle: 'middle' };\n      if (typeof cfg.position === 'string') {\n        cfg.position = positionMap[cfg.position];\n      } else if (typeof cfg.position === 'function') {\n        cfg.position = (...args) => positionMap[(cfg.position as Function).apply(this, args)];\n      }\n      // 设置 textBaseline 默认值\n      const textBaseline = leftLabelCfg.style?.textBaseline || 'bottom';\n      leftLabelCfg.style = deepAssign({}, leftLabelCfg.style, { textBaseline });\n      const textBaselineMap = { top: 'bottom', bottom: 'top', middle: 'middle' };\n      cfg.style = deepAssign({}, cfg.style, { textBaseline: textBaselineMap[textBaseline] });\n    }\n\n    leftGeometry.label({\n      fields: [yField[0]],\n      callback,\n      cfg: transformLabel(leftLabelCfg),\n    });\n    rightGeometry.label({\n      fields: [yField[1]],\n      callback,\n      cfg: transformLabel(cfg),\n    });\n  }\n\n  return params;\n}\n\n/**\n * 对称条形图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<BidirectionalBarOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(geometry, meta, axis, limitInPlot, theme, label, tooltip, interaction, animation)(params);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}