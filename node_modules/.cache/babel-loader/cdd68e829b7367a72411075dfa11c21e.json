{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { adaptor } from './adaptor';\nimport { transformData } from './utils';\nimport { DEFAULT_OPTIONS, OUTLIERS_VIEW_ID } from './constant';\n\nvar Box =\n/** @class */\nfunction (_super) {\n  __extends(Box, _super);\n\n  function Box() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n\n\n    _this.type = 'box';\n    return _this;\n  }\n  /**\n   * 获取 默认配置项\n   * 供外部使用\n   */\n\n\n  Box.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  /**\n   * @override\n   * @param data\n   */\n\n\n  Box.prototype.changeData = function (data) {\n    this.updateOption({\n      data: data\n    });\n    var yField = this.options.yField;\n    var outliersView = this.chart.views.find(function (v) {\n      return v.id === OUTLIERS_VIEW_ID;\n    });\n\n    if (outliersView) {\n      outliersView.data(data);\n    }\n\n    this.chart.changeData(transformData(data, yField));\n  };\n  /**\n   * 获取 箱型图 默认配置项\n   */\n\n\n  Box.prototype.getDefaultOptions = function () {\n    return Box.getDefaultOptions();\n  };\n  /**\n   * 获取 箱型图 的适配器\n   */\n\n\n  Box.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n\n  return Box;\n}(Plot);\n\nexport { Box };","map":{"version":3,"sources":["../../../src/plots/box/index.ts"],"names":[],"mappings":";AAAA,SAAS,IAAT,QAAqB,iBAArB;AAGA,SAAS,OAAT,QAAwB,WAAxB;AACA,SAAS,aAAT,QAA8B,SAA9B;AACA,SAAS,eAAT,EAA0B,gBAA1B,QAAkD,YAAlD;;AAGA,IAAA,GAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyB,EAAA,SAAA,CAAA,GAAA,EAAA,MAAA,CAAA;;AAAzB,WAAA,GAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AASE;;;AACO,IAAA,KAAA,CAAA,IAAA,GAAe,KAAf;;AA+BR;AAxCC;;;AAGG;;;AACI,EAAA,GAAA,CAAA,iBAAA,GAAP,YAAA;AACE,WAAO,eAAP;AACD,GAFM;AAOP;;;AAGG;;;AACI,EAAA,GAAA,CAAA,SAAA,CAAA,UAAA,GAAP,UAAkB,IAAlB,EAAsB;AACpB,SAAK,YAAL,CAAkB;AAAE,MAAA,IAAI,EAAA;AAAN,KAAlB;AACQ,QAAA,MAAM,GAAK,KAAK,OAAL,CAAL,MAAN;AAER,QAAM,YAAY,GAAG,KAAK,KAAL,CAAW,KAAX,CAAiB,IAAjB,CAAsB,UAAC,CAAD,EAAE;AAAK,aAAA,CAAC,CAAC,EAAF,KAAA,gBAAA;AAAyB,KAAtD,CAArB;;AACA,QAAI,YAAJ,EAAkB;AAChB,MAAA,YAAY,CAAC,IAAb,CAAkB,IAAlB;AACD;;AAED,SAAK,KAAL,CAAW,UAAX,CAAsB,aAAa,CAAC,IAAD,EAAO,MAAP,CAAnC;AACD,GAVM;AAYP;;AAEG;;;AACO,EAAA,GAAA,CAAA,SAAA,CAAA,iBAAA,GAAV,YAAA;AACE,WAAO,GAAG,CAAC,iBAAJ,EAAP;AACD,GAFS;AAIV;;AAEG;;;AACO,EAAA,GAAA,CAAA,SAAA,CAAA,gBAAA,GAAV,YAAA;AACE,WAAO,OAAP;AACD,GAFS;;AAGZ,SAAA,GAAA;AAAC,CAzCD,CAAyB,IAAzB,CAAA","sourcesContent":["import { Plot } from '../../core/plot';\nimport { Adaptor } from '../../core/adaptor';\nimport { BoxOptions } from './types';\nimport { adaptor } from './adaptor';\nimport { transformData } from './utils';\nimport { DEFAULT_OPTIONS, OUTLIERS_VIEW_ID } from './constant';\nexport type { BoxOptions };\n\nexport class Box extends Plot<BoxOptions> {\n  /**\n   * 获取 默认配置项\n   * 供外部使用\n   */\n  static getDefaultOptions(): Partial<BoxOptions> {\n    return DEFAULT_OPTIONS;\n  }\n\n  /** 图表类型 */\n  public type: string = 'box';\n\n  /**\n   * @override\n   * @param data\n   */\n  public changeData(data) {\n    this.updateOption({ data });\n    const { yField } = this.options;\n\n    const outliersView = this.chart.views.find((v) => v.id === OUTLIERS_VIEW_ID);\n    if (outliersView) {\n      outliersView.data(data);\n    }\n\n    this.chart.changeData(transformData(data, yField));\n  }\n\n  /**\n   * 获取 箱型图 默认配置项\n   */\n  protected getDefaultOptions(): Partial<BoxOptions> {\n    return Box.getDefaultOptions();\n  }\n\n  /**\n   * 获取 箱型图 的适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<BoxOptions> {\n    return adaptor;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}