{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { isFunction, groupBy } from '@antv/util';\nimport { isNaN, calculationItemsBBox } from '../../util/base';\n\nvar LayoutController =\n/** @class */\nfunction () {\n  function LayoutController(graph) {\n    this.graph = graph;\n    this.layoutCfg = graph.get('layout') || {};\n    this.layoutType = this.getLayoutType();\n    this.layoutMethods = [];\n    this.initLayout();\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  LayoutController.prototype.initLayout = function () {// no data before rendering\n  };\n\n  LayoutController.prototype.getLayoutType = function () {\n    return this.getLayoutCfgType(this.layoutCfg);\n  };\n\n  LayoutController.prototype.getLayoutCfgType = function (layoutCfg) {\n    var type = layoutCfg.type; // type should be top priority\n\n    if (type) {\n      return type;\n    }\n\n    var pipes = layoutCfg.pipes;\n\n    if (Array.isArray(pipes)) {\n      return pipes.map(function (pipe) {\n        return (pipe === null || pipe === void 0 ? void 0 : pipe.type) || \"\";\n      });\n    }\n\n    return null;\n  };\n\n  LayoutController.prototype.isLayoutTypeSame = function (cfg) {\n    var current = this.getLayoutCfgType(cfg); // already has pipes\n\n    if (Array.isArray(this.layoutType)) {\n      return this.layoutType.every(function (type, index) {\n        return type === current[index];\n      });\n    }\n\n    return (cfg === null || cfg === void 0 ? void 0 : cfg.type) === this.layoutType;\n  }; // 绘制\n\n\n  LayoutController.prototype.refreshLayout = function () {\n    var graph = this.graph;\n    if (!graph) return;\n\n    if (graph.get('animate')) {\n      graph.positionsAnimate();\n    } else {\n      graph.refreshPositions();\n    }\n  }; // 更换布局\n\n\n  LayoutController.prototype.changeLayout = function (cfg) {\n    this.layoutCfg = cfg;\n    this.destoryLayoutMethods();\n    this.layout();\n  }; // 更换数据\n\n\n  LayoutController.prototype.changeData = function () {\n    this.destoryLayoutMethods();\n    this.layout();\n  };\n\n  LayoutController.prototype.destoryLayoutMethods = function () {\n    var layoutMethods = this.layoutMethods;\n    layoutMethods === null || layoutMethods === void 0 ? void 0 : layoutMethods.forEach(function (layoutMethod) {\n      layoutMethod.destroy();\n    });\n    this.layoutMethods = [];\n  }; // 销毁布局，不能使用 this.destroy，因为 controller 还需要被使用，只是把布局算法销毁\n\n\n  LayoutController.prototype.destroyLayout = function () {\n    var graph = this.graph;\n    this.destoryLayoutMethods();\n    graph.set('layout', undefined);\n    this.layoutCfg = undefined;\n    this.layoutType = undefined;\n    this.layoutMethods = undefined;\n  }; // 从 this.graph 获取数据\n\n\n  LayoutController.prototype.setDataFromGraph = function () {\n    var nodes = [];\n    var hiddenNodes = [];\n    var edges = [];\n    var hiddenEdges = [];\n    var comboEdges = [];\n    var combos = [];\n    var hiddenCombos = [];\n    var nodeItems = this.graph.getNodes();\n    var edgeItems = this.graph.getEdges();\n    var comboItems = this.graph.getCombos();\n    var nodeLength = nodeItems.length;\n\n    for (var i = 0; i < nodeLength; i++) {\n      var nodeItem = nodeItems[i];\n      if (!nodeItem || nodeItem.destroyed) continue;\n      var model = nodeItem.getModel();\n\n      if (!nodeItem.isVisible()) {\n        hiddenNodes.push(model);\n        continue;\n      }\n\n      nodes.push(model);\n    }\n\n    var edgeLength = edgeItems.length;\n\n    for (var i = 0; i < edgeLength; i++) {\n      var edgeItem = edgeItems[i];\n      if (!edgeItem || edgeItem.destroyed) continue;\n      var model = edgeItem.getModel();\n\n      if (!edgeItem.isVisible()) {\n        hiddenEdges.push(model);\n        continue;\n      }\n\n      if (!model.isComboEdge) edges.push(model);else comboEdges.push(model);\n    }\n\n    var comboLength = comboItems.length;\n\n    for (var i = 0; i < comboLength; i++) {\n      var comboItem = comboItems[i];\n      if (comboItem.destroyed) continue;\n      var model = comboItem.getModel();\n\n      if (!comboItem.isVisible()) {\n        hiddenEdges.push(model);\n        continue;\n      }\n\n      combos.push(model);\n    }\n\n    return {\n      nodes: nodes,\n      hiddenNodes: hiddenNodes,\n      edges: edges,\n      hiddenEdges: hiddenEdges,\n      combos: combos,\n      hiddenCombos: hiddenCombos,\n      comboEdges: comboEdges\n    };\n  };\n\n  LayoutController.prototype.reLayoutMethod = function (layoutMethod, layoutCfg) {\n    var _this = this;\n\n    return new Promise(function (reslove, reject) {\n      var graph = _this.graph;\n      var layoutType = layoutCfg === null || layoutCfg === void 0 ? void 0 : layoutCfg.type; // 每个布局方法都需要注册\n\n      layoutCfg.onLayoutEnd = function () {\n        graph.emit('aftersublayout', {\n          type: layoutType\n        });\n        reslove();\n      };\n\n      layoutMethod.init(_this.data);\n\n      if (layoutType === 'force') {\n        layoutMethod.ticking = false;\n        layoutMethod.forceSimulation.stop();\n      }\n\n      graph.emit('beforesublayout', {\n        type: layoutType\n      });\n      layoutMethod.execute();\n      if (layoutMethod.isCustomLayout && layoutCfg.onLayoutEnd) layoutCfg.onLayoutEnd();\n    });\n  }; // 重新布局\n\n\n  LayoutController.prototype.relayout = function (reloadData) {\n    var _this = this;\n\n    var _a = this,\n        graph = _a.graph,\n        layoutMethods = _a.layoutMethods,\n        layoutCfg = _a.layoutCfg;\n\n    if (reloadData) {\n      this.data = this.setDataFromGraph();\n      var nodes = this.data.nodes;\n\n      if (!nodes) {\n        return false;\n      }\n\n      this.initPositions(layoutCfg.center, nodes);\n    }\n\n    graph.emit('beforelayout');\n    var start = Promise.resolve();\n    layoutMethods === null || layoutMethods === void 0 ? void 0 : layoutMethods.forEach(function (layoutMethod, index) {\n      var currentCfg = layoutCfg[index];\n      start = start.then(function () {\n        return _this.reLayoutMethod(layoutMethod, currentCfg);\n      });\n    });\n    start.then(function () {\n      if (layoutCfg.onAllLayoutEnd) layoutCfg.onAllLayoutEnd();\n    }).catch(function (error) {\n      console.warn('relayout failed', error);\n    });\n  }; // 筛选参与布局的nodes和edges\n\n\n  LayoutController.prototype.filterLayoutData = function (data, cfg) {\n    var nodes = data.nodes,\n        edges = data.edges,\n        rest = __rest(data, [\"nodes\", \"edges\"]);\n\n    if (!nodes) {\n      return data;\n    }\n\n    var nodesFilter;\n    var edegsFilter;\n\n    if (isFunction(cfg === null || cfg === void 0 ? void 0 : cfg.nodesFilter)) {\n      nodesFilter = cfg.nodesFilter;\n    } else {\n      nodesFilter = function nodesFilter() {\n        return true;\n      };\n    }\n\n    if (isFunction(cfg === null || cfg === void 0 ? void 0 : cfg.edgesFilter)) {\n      edegsFilter = cfg.edgesFilter;\n    } else {\n      var nodesMap_1 = nodes.reduce(function (acc, cur) {\n        acc[cur.id] = true;\n        return acc;\n      }, {});\n\n      edegsFilter = function edegsFilter(edge) {\n        return nodesMap_1[edge.source] && nodesMap_1[edge.target];\n      };\n    }\n\n    return __assign({\n      nodes: nodes.filter(nodesFilter),\n      edges: edges.filter(edegsFilter)\n    }, rest);\n  };\n\n  LayoutController.prototype.getLayoutBBox = function (nodes) {\n    var graph = this.graph;\n    var graphGroupNodes = groupBy(graph.getNodes(), function (n) {\n      return n.getModel().layoutOrder;\n    });\n    var layoutNodes = Object.values(graphGroupNodes).map(function (value) {\n      var bbox = calculationItemsBBox(value);\n      bbox.size = [bbox.width, bbox.height];\n      return bbox;\n    });\n    var groupNodes = Object.values(groupBy(nodes, 'layoutOrder'));\n    return {\n      groupNodes: groupNodes,\n      layoutNodes: layoutNodes\n    };\n  }; // 控制布局动画\n  // eslint-disable-next-line class-methods-use-this\n\n\n  LayoutController.prototype.layoutAnimate = function () {}; // 将当前节点的平均中心移动到原点\n\n\n  LayoutController.prototype.moveToZero = function () {\n    var graph = this.graph;\n    var data = graph.get('data');\n    var nodes = data.nodes;\n\n    if (nodes[0].x === undefined || nodes[0].x === null || isNaN(nodes[0].x)) {\n      return;\n    }\n\n    var meanCenter = [0, 0];\n    var nodeLength = nodes.length;\n\n    for (var i = 0; i < nodeLength; i++) {\n      var node = nodes[i];\n      meanCenter[0] += node.x;\n      meanCenter[1] += node.y;\n    }\n\n    meanCenter[0] /= nodes.length;\n    meanCenter[1] /= nodes.length;\n\n    for (var i = 0; i < nodeLength; i++) {\n      var node = nodes[i];\n      node.x -= meanCenter[0];\n      node.y -= meanCenter[1];\n    }\n  }; // 初始化节点到 center 附近\n\n\n  LayoutController.prototype.initPositions = function (center, nodes) {\n    var graph = this.graph;\n\n    if (!nodes) {\n      return false;\n    }\n\n    var nodeLength = nodes ? nodes.length : 0;\n    if (!nodeLength) return;\n    var width = graph.get('width') * 0.85;\n    var height = graph.get('height') * 0.85;\n    var horiNum = Math.ceil(Math.sqrt(nodeLength) * (width / height));\n    var vertiNum = Math.ceil(nodeLength / horiNum);\n    var horiGap = width / (horiNum - 1);\n    var vertiGap = height / (vertiNum - 1);\n    if (!isFinite(horiGap) || !horiGap) horiGap = 0;\n    if (!isFinite(vertiGap) || !horiGap) vertiGap = 0;\n    var beginX = center[0] - width / 2;\n    var beginY = center[1] - height / 2;\n    var allHavePos = true;\n\n    for (var i = 0; i < nodeLength; i++) {\n      var node = nodes[i];\n\n      if (isNaN(node.x)) {\n        allHavePos = false;\n        node.x = i % horiNum * horiGap + beginX;\n      }\n\n      if (isNaN(node.y)) {\n        allHavePos = false;\n        node.y = Math.floor(i / horiNum) * vertiGap + beginY;\n      }\n    }\n\n    return allHavePos;\n  };\n\n  LayoutController.prototype.destroy = function () {\n    this.graph = null;\n    this.destoryLayoutMethods();\n    this.destroyed = true;\n  };\n\n  return LayoutController;\n}();\n\nexport default LayoutController;","map":{"version":3,"sources":["C:/Users/Home/Desktop/cs-2005/node_modules/@antv/g6-core/es/graph/controller/layout.js"],"names":["__assign","__rest","isFunction","groupBy","isNaN","calculationItemsBBox","LayoutController","graph","layoutCfg","get","layoutType","getLayoutType","layoutMethods","initLayout","prototype","getLayoutCfgType","type","pipes","Array","isArray","map","pipe","isLayoutTypeSame","cfg","current","every","index","refreshLayout","positionsAnimate","refreshPositions","changeLayout","destoryLayoutMethods","layout","changeData","forEach","layoutMethod","destroy","destroyLayout","set","undefined","setDataFromGraph","nodes","hiddenNodes","edges","hiddenEdges","comboEdges","combos","hiddenCombos","nodeItems","getNodes","edgeItems","getEdges","comboItems","getCombos","nodeLength","length","i","nodeItem","destroyed","model","getModel","isVisible","push","edgeLength","edgeItem","isComboEdge","comboLength","comboItem","reLayoutMethod","_this","Promise","reslove","reject","onLayoutEnd","emit","init","data","ticking","forceSimulation","stop","execute","isCustomLayout","relayout","reloadData","_a","initPositions","center","start","resolve","currentCfg","then","onAllLayoutEnd","catch","error","console","warn","filterLayoutData","rest","nodesFilter","edegsFilter","edgesFilter","nodesMap_1","reduce","acc","cur","id","edge","source","target","filter","getLayoutBBox","graphGroupNodes","n","layoutOrder","layoutNodes","Object","values","value","bbox","size","width","height","groupNodes","layoutAnimate","moveToZero","x","meanCenter","node","y","horiNum","Math","ceil","sqrt","vertiNum","horiGap","vertiGap","isFinite","beginX","beginY","allHavePos","floor"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport { isFunction, groupBy } from '@antv/util';\nimport { isNaN, calculationItemsBBox } from '../../util/base';\n\nvar LayoutController =\n/** @class */\nfunction () {\n  function LayoutController(graph) {\n    this.graph = graph;\n    this.layoutCfg = graph.get('layout') || {};\n    this.layoutType = this.getLayoutType();\n    this.layoutMethods = [];\n    this.initLayout();\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  LayoutController.prototype.initLayout = function () {// no data before rendering\n  };\n\n  LayoutController.prototype.getLayoutType = function () {\n    return this.getLayoutCfgType(this.layoutCfg);\n  };\n\n  LayoutController.prototype.getLayoutCfgType = function (layoutCfg) {\n    var type = layoutCfg.type; // type should be top priority\n\n    if (type) {\n      return type;\n    }\n\n    var pipes = layoutCfg.pipes;\n\n    if (Array.isArray(pipes)) {\n      return pipes.map(function (pipe) {\n        return (pipe === null || pipe === void 0 ? void 0 : pipe.type) || \"\";\n      });\n    }\n\n    return null;\n  };\n\n  LayoutController.prototype.isLayoutTypeSame = function (cfg) {\n    var current = this.getLayoutCfgType(cfg); // already has pipes\n\n    if (Array.isArray(this.layoutType)) {\n      return this.layoutType.every(function (type, index) {\n        return type === current[index];\n      });\n    }\n\n    return (cfg === null || cfg === void 0 ? void 0 : cfg.type) === this.layoutType;\n  }; // 绘制\n\n\n  LayoutController.prototype.refreshLayout = function () {\n    var graph = this.graph;\n    if (!graph) return;\n\n    if (graph.get('animate')) {\n      graph.positionsAnimate();\n    } else {\n      graph.refreshPositions();\n    }\n  }; // 更换布局\n\n\n  LayoutController.prototype.changeLayout = function (cfg) {\n    this.layoutCfg = cfg;\n    this.destoryLayoutMethods();\n    this.layout();\n  }; // 更换数据\n\n\n  LayoutController.prototype.changeData = function () {\n    this.destoryLayoutMethods();\n    this.layout();\n  };\n\n  LayoutController.prototype.destoryLayoutMethods = function () {\n    var layoutMethods = this.layoutMethods;\n    layoutMethods === null || layoutMethods === void 0 ? void 0 : layoutMethods.forEach(function (layoutMethod) {\n      layoutMethod.destroy();\n    });\n    this.layoutMethods = [];\n  }; // 销毁布局，不能使用 this.destroy，因为 controller 还需要被使用，只是把布局算法销毁\n\n\n  LayoutController.prototype.destroyLayout = function () {\n    var graph = this.graph;\n    this.destoryLayoutMethods();\n    graph.set('layout', undefined);\n    this.layoutCfg = undefined;\n    this.layoutType = undefined;\n    this.layoutMethods = undefined;\n  }; // 从 this.graph 获取数据\n\n\n  LayoutController.prototype.setDataFromGraph = function () {\n    var nodes = [];\n    var hiddenNodes = [];\n    var edges = [];\n    var hiddenEdges = [];\n    var comboEdges = [];\n    var combos = [];\n    var hiddenCombos = [];\n    var nodeItems = this.graph.getNodes();\n    var edgeItems = this.graph.getEdges();\n    var comboItems = this.graph.getCombos();\n    var nodeLength = nodeItems.length;\n\n    for (var i = 0; i < nodeLength; i++) {\n      var nodeItem = nodeItems[i];\n      if (!nodeItem || nodeItem.destroyed) continue;\n      var model = nodeItem.getModel();\n\n      if (!nodeItem.isVisible()) {\n        hiddenNodes.push(model);\n        continue;\n      }\n\n      nodes.push(model);\n    }\n\n    var edgeLength = edgeItems.length;\n\n    for (var i = 0; i < edgeLength; i++) {\n      var edgeItem = edgeItems[i];\n      if (!edgeItem || edgeItem.destroyed) continue;\n      var model = edgeItem.getModel();\n\n      if (!edgeItem.isVisible()) {\n        hiddenEdges.push(model);\n        continue;\n      }\n\n      if (!model.isComboEdge) edges.push(model);else comboEdges.push(model);\n    }\n\n    var comboLength = comboItems.length;\n\n    for (var i = 0; i < comboLength; i++) {\n      var comboItem = comboItems[i];\n      if (comboItem.destroyed) continue;\n      var model = comboItem.getModel();\n\n      if (!comboItem.isVisible()) {\n        hiddenEdges.push(model);\n        continue;\n      }\n\n      combos.push(model);\n    }\n\n    return {\n      nodes: nodes,\n      hiddenNodes: hiddenNodes,\n      edges: edges,\n      hiddenEdges: hiddenEdges,\n      combos: combos,\n      hiddenCombos: hiddenCombos,\n      comboEdges: comboEdges\n    };\n  };\n\n  LayoutController.prototype.reLayoutMethod = function (layoutMethod, layoutCfg) {\n    var _this = this;\n\n    return new Promise(function (reslove, reject) {\n      var graph = _this.graph;\n      var layoutType = layoutCfg === null || layoutCfg === void 0 ? void 0 : layoutCfg.type; // 每个布局方法都需要注册\n\n      layoutCfg.onLayoutEnd = function () {\n        graph.emit('aftersublayout', {\n          type: layoutType\n        });\n        reslove();\n      };\n\n      layoutMethod.init(_this.data);\n\n      if (layoutType === 'force') {\n        layoutMethod.ticking = false;\n        layoutMethod.forceSimulation.stop();\n      }\n\n      graph.emit('beforesublayout', {\n        type: layoutType\n      });\n      layoutMethod.execute();\n      if (layoutMethod.isCustomLayout && layoutCfg.onLayoutEnd) layoutCfg.onLayoutEnd();\n    });\n  }; // 重新布局\n\n\n  LayoutController.prototype.relayout = function (reloadData) {\n    var _this = this;\n\n    var _a = this,\n        graph = _a.graph,\n        layoutMethods = _a.layoutMethods,\n        layoutCfg = _a.layoutCfg;\n\n    if (reloadData) {\n      this.data = this.setDataFromGraph();\n      var nodes = this.data.nodes;\n\n      if (!nodes) {\n        return false;\n      }\n\n      this.initPositions(layoutCfg.center, nodes);\n    }\n\n    graph.emit('beforelayout');\n    var start = Promise.resolve();\n    layoutMethods === null || layoutMethods === void 0 ? void 0 : layoutMethods.forEach(function (layoutMethod, index) {\n      var currentCfg = layoutCfg[index];\n      start = start.then(function () {\n        return _this.reLayoutMethod(layoutMethod, currentCfg);\n      });\n    });\n    start.then(function () {\n      if (layoutCfg.onAllLayoutEnd) layoutCfg.onAllLayoutEnd();\n    }).catch(function (error) {\n      console.warn('relayout failed', error);\n    });\n  }; // 筛选参与布局的nodes和edges\n\n\n  LayoutController.prototype.filterLayoutData = function (data, cfg) {\n    var nodes = data.nodes,\n        edges = data.edges,\n        rest = __rest(data, [\"nodes\", \"edges\"]);\n\n    if (!nodes) {\n      return data;\n    }\n\n    var nodesFilter;\n    var edegsFilter;\n\n    if (isFunction(cfg === null || cfg === void 0 ? void 0 : cfg.nodesFilter)) {\n      nodesFilter = cfg.nodesFilter;\n    } else {\n      nodesFilter = function nodesFilter() {\n        return true;\n      };\n    }\n\n    if (isFunction(cfg === null || cfg === void 0 ? void 0 : cfg.edgesFilter)) {\n      edegsFilter = cfg.edgesFilter;\n    } else {\n      var nodesMap_1 = nodes.reduce(function (acc, cur) {\n        acc[cur.id] = true;\n        return acc;\n      }, {});\n\n      edegsFilter = function edegsFilter(edge) {\n        return nodesMap_1[edge.source] && nodesMap_1[edge.target];\n      };\n    }\n\n    return __assign({\n      nodes: nodes.filter(nodesFilter),\n      edges: edges.filter(edegsFilter)\n    }, rest);\n  };\n\n  LayoutController.prototype.getLayoutBBox = function (nodes) {\n    var graph = this.graph;\n    var graphGroupNodes = groupBy(graph.getNodes(), function (n) {\n      return n.getModel().layoutOrder;\n    });\n    var layoutNodes = Object.values(graphGroupNodes).map(function (value) {\n      var bbox = calculationItemsBBox(value);\n      bbox.size = [bbox.width, bbox.height];\n      return bbox;\n    });\n    var groupNodes = Object.values(groupBy(nodes, 'layoutOrder'));\n    return {\n      groupNodes: groupNodes,\n      layoutNodes: layoutNodes\n    };\n  }; // 控制布局动画\n  // eslint-disable-next-line class-methods-use-this\n\n\n  LayoutController.prototype.layoutAnimate = function () {}; // 将当前节点的平均中心移动到原点\n\n\n  LayoutController.prototype.moveToZero = function () {\n    var graph = this.graph;\n    var data = graph.get('data');\n    var nodes = data.nodes;\n\n    if (nodes[0].x === undefined || nodes[0].x === null || isNaN(nodes[0].x)) {\n      return;\n    }\n\n    var meanCenter = [0, 0];\n    var nodeLength = nodes.length;\n\n    for (var i = 0; i < nodeLength; i++) {\n      var node = nodes[i];\n      meanCenter[0] += node.x;\n      meanCenter[1] += node.y;\n    }\n\n    meanCenter[0] /= nodes.length;\n    meanCenter[1] /= nodes.length;\n\n    for (var i = 0; i < nodeLength; i++) {\n      var node = nodes[i];\n      node.x -= meanCenter[0];\n      node.y -= meanCenter[1];\n    }\n  }; // 初始化节点到 center 附近\n\n\n  LayoutController.prototype.initPositions = function (center, nodes) {\n    var graph = this.graph;\n\n    if (!nodes) {\n      return false;\n    }\n\n    var nodeLength = nodes ? nodes.length : 0;\n    if (!nodeLength) return;\n    var width = graph.get('width') * 0.85;\n    var height = graph.get('height') * 0.85;\n    var horiNum = Math.ceil(Math.sqrt(nodeLength) * (width / height));\n    var vertiNum = Math.ceil(nodeLength / horiNum);\n    var horiGap = width / (horiNum - 1);\n    var vertiGap = height / (vertiNum - 1);\n    if (!isFinite(horiGap) || !horiGap) horiGap = 0;\n    if (!isFinite(vertiGap) || !horiGap) vertiGap = 0;\n    var beginX = center[0] - width / 2;\n    var beginY = center[1] - height / 2;\n    var allHavePos = true;\n\n    for (var i = 0; i < nodeLength; i++) {\n      var node = nodes[i];\n\n      if (isNaN(node.x)) {\n        allHavePos = false;\n        node.x = i % horiNum * horiGap + beginX;\n      }\n\n      if (isNaN(node.y)) {\n        allHavePos = false;\n        node.y = Math.floor(i / horiNum) * vertiGap + beginY;\n      }\n    }\n\n    return allHavePos;\n  };\n\n  LayoutController.prototype.destroy = function () {\n    this.graph = null;\n    this.destoryLayoutMethods();\n    this.destroyed = true;\n  };\n\n  return LayoutController;\n}();\n\nexport default LayoutController;"]},"metadata":{},"sourceType":"module"}