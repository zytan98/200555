{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { Action, Util } from '@antv/g2';\nimport { get, last, isNil, size } from '@antv/util';\nimport { deepAssign } from '../../utils/deep-assign'; // 面包屑文字和分割符'/'之间的距离\n\nvar PADDING = 4; // 面包屑位置距离树图的距离\n\nvar PADDING_LEFT = 0; // 面包屑位置距离树图的顶部距离\n\nexport var PADDING_TOP = 5;\n/** Group name of breadCrumb: 面包屑 */\n\nexport var BREAD_CRUMB_NAME = 'drilldown-bread-crumb'; // 面包屑默认配置\n\nexport var DEFAULT_BREAD_CRUMB_CONFIG = {\n  /** 位置，默认：左上角 */\n  position: 'top-left',\n  dividerText: '/',\n  textStyle: {\n    fontSize: 12,\n    fill: 'rgba(0, 0, 0, 0.65)',\n    cursor: 'pointer'\n  },\n  activeTextStyle: {\n    fill: '#87B5FF'\n  }\n};\n/**\n * hierarchy 数据转换的参数\n */\n\nexport var HIERARCHY_DATA_TRANSFORM_PARAMS = 'hierarchy-data-transform-params';\n/**\n * @description 下钻交互的 action\n * @author liuzhenying\n *\n * 适用于：hierarchy plot\n */\n\nvar DrillDownAction =\n/** @class */\nfunction (_super) {\n  __extends(DrillDownAction, _super);\n\n  function DrillDownAction() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** Action name */\n\n\n    _this.name = 'drill-down'; // 存储历史下钻数据\n\n    _this.historyCache = []; // 面包屑 group\n\n    _this.breadCrumbGroup = null; // 面包屑基础配置\n\n    _this.breadCrumbCfg = DEFAULT_BREAD_CRUMB_CONFIG;\n    return _this;\n  }\n  /**\n   * 点击事件, 下钻数据，并绘制面包屑\n   */\n\n\n  DrillDownAction.prototype.click = function () {\n    var data = get(this.context, ['event', 'data', 'data']);\n    if (!data) return false;\n    this.drill(data);\n    this.drawBreadCrumb();\n  };\n  /**\n   * 重置位置，初始化及触发 chart  afterchangesize 回调时使用\n   */\n\n\n  DrillDownAction.prototype.resetPosition = function () {\n    // 当在第一层级未绘制面包屑，此时 changedata 触发 resetPosition 函数，需判断 this.breadCrumbGroup 是否存在\n    if (!this.breadCrumbGroup) return;\n    var coordinate = this.context.view.getCoordinate();\n    var breadCrumbGroup = this.breadCrumbGroup;\n    var bbox = breadCrumbGroup.getBBox();\n    var position = this.getButtonCfg().position; // @todo 后续抽取一个函数来处理，以及增加 margin 或者 padding 的设置\n    // 非 polar 的，需要使用 coordinate，除却图表组件\n\n    var point = {\n      x: coordinate.start.x,\n      y: coordinate.end.y - (bbox.height + PADDING_TOP * 2)\n    };\n\n    if (coordinate.isPolar) {\n      // 默认，左上角直接出发\n      point = {\n        x: 0,\n        y: 0\n      };\n    }\n\n    if (position === 'bottom-left') {\n      // 涉及到坐标反转的问题\n      point = {\n        x: coordinate.start.x,\n        y: coordinate.start.y\n      };\n    }\n    /** PADDING_LEFT, PADDING_TOP 与画布边缘的距离 */\n\n\n    var matrix = Util.transform(null, [['t', point.x + PADDING_LEFT, point.y + bbox.height + PADDING_TOP]]);\n    breadCrumbGroup.setMatrix(matrix);\n  };\n  /**\n   * 返回上一层\n   */\n\n\n  DrillDownAction.prototype.back = function () {\n    if (size(this.historyCache)) {\n      this.backTo(this.historyCache.slice(0, -1));\n    }\n  };\n  /**\n   * 重置\n   */\n\n\n  DrillDownAction.prototype.reset = function () {\n    if (this.historyCache[0]) {\n      this.backTo(this.historyCache.slice(0, 1));\n    } // 清空\n\n\n    this.historyCache = [];\n    this.hideCrumbGroup();\n  };\n  /**\n   * 下钻数据并更新 view 显示层\n   * @param nodeInfo 下钻数据\n   */\n\n\n  DrillDownAction.prototype.drill = function (nodeInfo) {\n    var view = this.context.view;\n    var transformData = get(view, ['interactions', 'drill-down', 'cfg', 'transformData'], function (v) {\n      return v;\n    }); // 重新 update 数据\n\n    var drillData = transformData(__assign({\n      data: nodeInfo.data\n    }, nodeInfo[HIERARCHY_DATA_TRANSFORM_PARAMS]));\n    view.changeData(drillData); // 存储历史记录\n\n    var historyCache = [];\n    var node = nodeInfo;\n\n    while (node) {\n      var nodeData = node.data;\n      historyCache.unshift({\n        id: nodeData.name + \"_\" + node.height + \"_\" + node.depth,\n        name: nodeData.name,\n        // children 是实际数据\n        children: transformData(__assign({\n          data: nodeData\n        }, nodeInfo[HIERARCHY_DATA_TRANSFORM_PARAMS]))\n      });\n      node = node.parent;\n    }\n\n    this.historyCache = (this.historyCache || []).slice(0, -1).concat(historyCache);\n  };\n  /**\n   * 回退事件，点击面包屑时触发\n   * @param historyCache 当前要回退到的历史\n   */\n\n\n  DrillDownAction.prototype.backTo = function (historyCache) {\n    if (!historyCache || historyCache.length <= 0) {\n      return;\n    }\n\n    var view = this.context.view;\n    var data = last(historyCache).children; // 处理后的数组\n\n    view.changeData(data);\n\n    if (historyCache.length > 1) {\n      this.historyCache = historyCache;\n      this.drawBreadCrumb();\n    } else {\n      // 清空\n      this.historyCache = [];\n      this.hideCrumbGroup();\n    }\n  };\n  /**\n   * 获取 mix 默认的配置和用户配置\n   */\n\n\n  DrillDownAction.prototype.getButtonCfg = function () {\n    var view = this.context.view;\n    var drillDownConfig = get(view, ['interactions', 'drill-down', 'cfg', 'drillDownConfig']);\n    return deepAssign(this.breadCrumbCfg, drillDownConfig === null || drillDownConfig === void 0 ? void 0 : drillDownConfig.breadCrumb, this.cfg);\n  };\n  /**\n   * 显示面包屑\n   */\n\n\n  DrillDownAction.prototype.drawBreadCrumb = function () {\n    this.drawBreadCrumbGroup();\n    this.resetPosition();\n    this.breadCrumbGroup.show();\n  };\n  /**\n   * 绘制 Button 和 文本\n   */\n\n\n  DrillDownAction.prototype.drawBreadCrumbGroup = function () {\n    var _this = this;\n\n    var config = this.getButtonCfg();\n    var cache = this.historyCache; // 初始化面包屑 group\n\n    if (!this.breadCrumbGroup) {\n      this.breadCrumbGroup = this.context.view.foregroundGroup.addGroup({\n        name: BREAD_CRUMB_NAME\n      });\n    } else {\n      this.breadCrumbGroup.clear();\n    } // 绘制面包屑\n\n\n    var left = 0;\n    cache.forEach(function (record, index) {\n      // 添加文本\n      var textShape = _this.breadCrumbGroup.addShape({\n        type: 'text',\n        id: record.id,\n        name: BREAD_CRUMB_NAME + \"_\" + record.name + \"_text\",\n        attrs: __assign(__assign({\n          text: index === 0 && !isNil(config.rootText) ? config.rootText : record.name\n        }, config.textStyle), {\n          x: left,\n          y: 0\n        })\n      });\n\n      var textShapeBox = textShape.getBBox();\n      left += textShapeBox.width + PADDING; // 增加文本事件\n\n      textShape.on('click', function (event) {\n        var _a;\n\n        var targetId = event.target.get('id');\n\n        if (targetId !== ((_a = last(cache)) === null || _a === void 0 ? void 0 : _a.id)) {\n          var newHistoryCache = cache.slice(0, cache.findIndex(function (d) {\n            return d.id === targetId;\n          }) + 1);\n\n          _this.backTo(newHistoryCache);\n        }\n      }); // active 效果内置\n\n      textShape.on('mouseenter', function (event) {\n        var _a;\n\n        var targetId = event.target.get('id');\n\n        if (targetId !== ((_a = last(cache)) === null || _a === void 0 ? void 0 : _a.id)) {\n          textShape.attr(config.activeTextStyle);\n        } else {\n          textShape.attr({\n            cursor: 'default'\n          });\n        }\n      });\n      textShape.on('mouseleave', function () {\n        textShape.attr(config.textStyle);\n      });\n\n      if (index < cache.length - 1) {\n        // 添加反斜杠\n        var dividerShape = _this.breadCrumbGroup.addShape({\n          type: 'text',\n          name: config.name + \"_\" + record.name + \"_divider\",\n          attrs: __assign(__assign({\n            text: config.dividerText\n          }, config.textStyle), {\n            x: left,\n            y: 0\n          })\n        });\n\n        var dividerBox = dividerShape.getBBox();\n        left += dividerBox.width + PADDING;\n      }\n    });\n  };\n  /**\n   * 隐藏面包屑\n   */\n\n\n  DrillDownAction.prototype.hideCrumbGroup = function () {\n    if (this.breadCrumbGroup) {\n      this.breadCrumbGroup.hide();\n    }\n  };\n  /**\n   * @override\n   * destroy: 销毁资源\n   */\n\n\n  DrillDownAction.prototype.destroy = function () {\n    if (this.breadCrumbGroup) {\n      this.breadCrumbGroup.remove();\n    }\n\n    _super.prototype.destroy.call(this);\n  };\n\n  return DrillDownAction;\n}(Action);\n\nexport { DrillDownAction };","map":{"version":3,"sources":["../../../src/interactions/actions/drill-down.ts"],"names":[],"mappings":"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","sourcesContent":["import { Action, IGroup, Util } from '@antv/g2';\nimport { get, last, isNil, size } from '@antv/util';\nimport { Data } from '../../types';\nimport { DrillDownCfg } from '../../types/drill-down';\nimport { deepAssign } from '../../utils/deep-assign';\n\n// 面包屑文字和分割符'/'之间的距离\nconst PADDING = 4;\n// 面包屑位置距离树图的距离\nconst PADDING_LEFT = 0;\n// 面包屑位置距离树图的顶部距离\nexport const PADDING_TOP = 5;\n\n/** Group name of breadCrumb: 面包屑 */\nexport const BREAD_CRUMB_NAME = 'drilldown-bread-crumb';\n\n// 面包屑默认配置\nexport const DEFAULT_BREAD_CRUMB_CONFIG: DrillDownCfg['breadCrumb'] = {\n  /** 位置，默认：左上角 */\n  position: 'top-left',\n  dividerText: '/',\n  textStyle: {\n    fontSize: 12,\n    fill: 'rgba(0, 0, 0, 0.65)',\n    cursor: 'pointer',\n  },\n  activeTextStyle: {\n    fill: '#87B5FF',\n  },\n};\n\n/**\n * hierarchy 数据转换的参数\n */\nexport const HIERARCHY_DATA_TRANSFORM_PARAMS = 'hierarchy-data-transform-params';\n\n/**\n * Hierarchy plot 节点的数据\n */\nexport type HierarchyNode<N = any /** 节点 */> = {\n  /** 节点的原始数据，树型结构（todo 是否更正 key 为 origin） */\n  data: { name: string; value?: any; children: { name: string; value?: any }[] };\n  /** 在构建节点数据时候，增加的扩展配置, 用于存储 transformData 的入参配置 */\n  [HIERARCHY_DATA_TRANSFORM_PARAMS]: object;\n  /** 当前的层级结构，每一次下钻都会更新. 不是 unique */\n  depth: number;\n  /** 当前所处高度，depth + height = 总的层级 */\n  height: number;\n  parent: N;\n  children: N[];\n};\n\ntype HistoryCache = {\n  name: string;\n  id: string;\n  children: Data;\n}[];\n\n/**\n * @description 下钻交互的 action\n * @author liuzhenying\n *\n * 适用于：hierarchy plot\n */\nexport class DrillDownAction extends Action {\n  /** Action name */\n  public name = 'drill-down';\n\n  // 存储历史下钻数据\n  protected historyCache: HistoryCache = [];\n  // 面包屑 group\n  private breadCrumbGroup: IGroup = null;\n  // 面包屑基础配置\n  private breadCrumbCfg: DrillDownCfg['breadCrumb'] = DEFAULT_BREAD_CRUMB_CONFIG;\n\n  /**\n   * 点击事件, 下钻数据，并绘制面包屑\n   */\n  public click() {\n    const data = get(this.context, ['event', 'data', 'data']);\n    if (!data) return false;\n\n    this.drill(data);\n    this.drawBreadCrumb();\n  }\n\n  /**\n   * 重置位置，初始化及触发 chart  afterchangesize 回调时使用\n   */\n  public resetPosition() {\n    // 当在第一层级未绘制面包屑，此时 changedata 触发 resetPosition 函数，需判断 this.breadCrumbGroup 是否存在\n    if (!this.breadCrumbGroup) return;\n    const coordinate = this.context.view.getCoordinate();\n    const breadCrumbGroup = this.breadCrumbGroup;\n    const bbox = breadCrumbGroup.getBBox();\n\n    const { position } = this.getButtonCfg();\n\n    // @todo 后续抽取一个函数来处理，以及增加 margin 或者 padding 的设置\n    // 非 polar 的，需要使用 coordinate，除却图表组件\n    let point = { x: coordinate.start.x, y: coordinate.end.y - (bbox.height + PADDING_TOP * 2) };\n    if (coordinate.isPolar) {\n      // 默认，左上角直接出发\n      point = { x: 0, y: 0 };\n    }\n    if (position === 'bottom-left') {\n      // 涉及到坐标反转的问题\n      point = { x: coordinate.start.x, y: coordinate.start.y };\n    }\n    /** PADDING_LEFT, PADDING_TOP 与画布边缘的距离 */\n    const matrix = Util.transform(null, [['t', point.x + PADDING_LEFT, point.y + bbox.height + PADDING_TOP]]);\n    breadCrumbGroup.setMatrix(matrix);\n  }\n\n  /**\n   * 返回上一层\n   */\n  public back(): void {\n    if (size(this.historyCache)) {\n      this.backTo(this.historyCache.slice(0, -1));\n    }\n  }\n\n  /**\n   * 重置\n   */\n  public reset(): void {\n    if (this.historyCache[0]) {\n      this.backTo(this.historyCache.slice(0, 1));\n    }\n    // 清空\n    this.historyCache = [];\n    this.hideCrumbGroup();\n  }\n\n  /**\n   * 下钻数据并更新 view 显示层\n   * @param nodeInfo 下钻数据\n   */\n  protected drill(nodeInfo: HierarchyNode) {\n    const { view } = this.context;\n    const transformData = get(view, ['interactions', 'drill-down', 'cfg', 'transformData'], (v) => v);\n\n    // 重新 update 数据\n    const drillData = transformData({ data: nodeInfo.data, ...nodeInfo[HIERARCHY_DATA_TRANSFORM_PARAMS] });\n    view.changeData(drillData);\n\n    // 存储历史记录\n    const historyCache: HistoryCache = [];\n\n    let node = nodeInfo;\n    while (node) {\n      const nodeData = node.data;\n      historyCache.unshift({\n        id: `${nodeData.name}_${node.height}_${node.depth}`,\n        name: nodeData.name,\n        // children 是实际数据\n        children: transformData({ data: nodeData, ...nodeInfo[HIERARCHY_DATA_TRANSFORM_PARAMS] }),\n      });\n      node = node.parent;\n    }\n\n    this.historyCache = (this.historyCache || []).slice(0, -1).concat(historyCache);\n  }\n\n  /**\n   * 回退事件，点击面包屑时触发\n   * @param historyCache 当前要回退到的历史\n   */\n  protected backTo(historyCache: HistoryCache) {\n    if (!historyCache || historyCache.length <= 0) {\n      return;\n    }\n\n    const { view } = this.context;\n    const data = last(historyCache).children; // 处理后的数组\n    view.changeData(data);\n\n    if (historyCache.length > 1) {\n      this.historyCache = historyCache;\n      this.drawBreadCrumb();\n    } else {\n      // 清空\n      this.historyCache = [];\n      this.hideCrumbGroup();\n    }\n  }\n\n  /**\n   * 获取 mix 默认的配置和用户配置\n   */\n  private getButtonCfg() {\n    const { view } = this.context;\n    const drillDownConfig: DrillDownCfg = get(view, ['interactions', 'drill-down', 'cfg', 'drillDownConfig']);\n\n    return deepAssign(this.breadCrumbCfg, drillDownConfig?.breadCrumb, this.cfg);\n  }\n\n  /**\n   * 显示面包屑\n   */\n  private drawBreadCrumb() {\n    this.drawBreadCrumbGroup();\n    this.resetPosition();\n    this.breadCrumbGroup.show();\n  }\n\n  /**\n   * 绘制 Button 和 文本\n   */\n  private drawBreadCrumbGroup() {\n    const config = this.getButtonCfg();\n    const cache = this.historyCache;\n\n    // 初始化面包屑 group\n    if (!this.breadCrumbGroup) {\n      this.breadCrumbGroup = this.context.view.foregroundGroup.addGroup({\n        name: BREAD_CRUMB_NAME,\n      });\n    } else {\n      this.breadCrumbGroup.clear();\n    }\n\n    // 绘制面包屑\n    let left = 0;\n    cache.forEach((record, index) => {\n      // 添加文本\n      const textShape = this.breadCrumbGroup.addShape({\n        type: 'text',\n        id: record.id,\n        name: `${BREAD_CRUMB_NAME}_${record.name}_text`,\n        attrs: {\n          text: index === 0 && !isNil(config.rootText) ? config.rootText : record.name,\n          ...config.textStyle,\n          x: left,\n          y: 0,\n        },\n      });\n\n      const textShapeBox = textShape.getBBox();\n      left += textShapeBox.width + PADDING;\n\n      // 增加文本事件\n      textShape.on('click', (event) => {\n        const targetId = event.target.get('id');\n        if (targetId !== last(cache)?.id) {\n          const newHistoryCache = cache.slice(0, cache.findIndex((d) => d.id === targetId) + 1);\n          this.backTo(newHistoryCache);\n        }\n      });\n      // active 效果内置\n      textShape.on('mouseenter', (event) => {\n        const targetId = event.target.get('id');\n        if (targetId !== last(cache)?.id) {\n          textShape.attr(config.activeTextStyle);\n        } else {\n          textShape.attr({ cursor: 'default' });\n        }\n      });\n      textShape.on('mouseleave', () => {\n        textShape.attr(config.textStyle);\n      });\n\n      if (index < cache.length - 1) {\n        // 添加反斜杠\n        const dividerShape = this.breadCrumbGroup.addShape({\n          type: 'text',\n          name: `${config.name}_${record.name}_divider`,\n          attrs: {\n            text: config.dividerText,\n            ...config.textStyle,\n            x: left,\n            y: 0,\n          },\n        });\n\n        const dividerBox = dividerShape.getBBox();\n        left += dividerBox.width + PADDING;\n      }\n    });\n  }\n\n  /**\n   * 隐藏面包屑\n   */\n  private hideCrumbGroup() {\n    if (this.breadCrumbGroup) {\n      this.breadCrumbGroup.hide();\n    }\n  }\n\n  /**\n   * @override\n   * destroy: 销毁资源\n   */\n  public destroy() {\n    if (this.breadCrumbGroup) {\n      this.breadCrumbGroup.remove();\n    }\n    super.destroy();\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}