{"ast":null,"code":"/**\n * 在 Chart 中查找特定 id 的子 View\n * @param chart\n * @param id\n */\nexport function findViewById(chart, id) {\n  return chart.views.find(function (view) {\n    return view.id === id;\n  });\n}\n/**\n * 获取同 view 同一级的所有 views\n * @param view 当前 view\n * @returns 同一级的 views\n * @ignore\n */\n\nexport function getViews(view) {\n  var parent = view.parent;\n  return parent ? parent.views : [];\n}\n/**\n * 获取同 view 同一级的 views，不包括自身\n * @param view 当前 view\n * @returns 同一级的 views\n * @ignore\n */\n\nexport function getSiblingViews(view) {\n  return getViews(view).filter(function (sub) {\n    return sub !== view;\n  });\n}","map":{"version":3,"sources":["../../src/utils/view.ts"],"names":[],"mappings":"AAEA;;;;AAIG;AACH,OAAM,SAAU,YAAV,CAAuB,KAAvB,EAAoC,EAApC,EAA8C;AAClD,SAAO,KAAK,CAAC,KAAN,CAAY,IAAZ,CAAiB,UAAC,IAAD,EAAW;AAAK,WAAA,IAAI,CAAC,EAAL,KAAA,EAAA;AAAc,GAA/C,CAAP;AACD;AAED;;;;;AAKG;;AACH,OAAM,SAAU,QAAV,CAAmB,IAAnB,EAA6B;AACjC,MAAM,MAAM,GAAG,IAAI,CAAC,MAApB;AACA,SAAO,MAAM,GAAG,MAAM,CAAC,KAAV,GAAkB,EAA/B;AACD;AAED;;;;;AAKG;;AACH,OAAM,SAAU,eAAV,CAA0B,IAA1B,EAAoC;AACxC,SAAO,QAAQ,CAAC,IAAD,CAAR,CAAe,MAAf,CAAsB,UAAC,GAAD,EAAI;AAAK,WAAA,GAAG,KAAH,IAAA;AAAY,GAA3C,CAAP;AACD","sourcesContent":["import { View } from '@antv/g2';\n\n/**\n * 在 Chart 中查找特定 id 的子 View\n * @param chart\n * @param id\n */\nexport function findViewById(chart: View, id: string): View {\n  return chart.views.find((view: View) => view.id === id);\n}\n\n/**\n * 获取同 view 同一级的所有 views\n * @param view 当前 view\n * @returns 同一级的 views\n * @ignore\n */\nexport function getViews(view: View): View[] {\n  const parent = view.parent;\n  return parent ? parent.views : [];\n}\n\n/**\n * 获取同 view 同一级的 views，不包括自身\n * @param view 当前 view\n * @returns 同一级的 views\n * @ignore\n */\nexport function getSiblingViews(view: View): View[] {\n  return getViews(view).filter((sub) => sub !== view);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}