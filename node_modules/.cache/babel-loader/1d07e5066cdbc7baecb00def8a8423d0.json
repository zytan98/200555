{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { get, isFunction } from '@antv/util';\nimport { interaction, animation, theme, tooltip, scale } from '../../adaptor/common';\nimport { flow, transformLabel, deepAssign } from '../../utils';\nimport { interval, point } from '../../adaptor/geometries';\nimport { transformData } from './utils';\n/**\n * geometry 处理\n * @param params\n */\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var bulletStyle = options.bulletStyle,\n      targetField = options.targetField,\n      rangeField = options.rangeField,\n      measureField = options.measureField,\n      xField = options.xField,\n      color = options.color,\n      layout = options.layout,\n      size = options.size,\n      label = options.label; // 处理数据\n\n  var _a = transformData(options),\n      min = _a.min,\n      max = _a.max,\n      ds = _a.ds;\n\n  chart.data(ds); // rangeGeometry\n\n  var r = deepAssign({}, params, {\n    options: {\n      xField: xField,\n      yField: rangeField,\n      seriesField: 'rKey',\n      isStack: true,\n      label: get(label, 'range'),\n      interval: {\n        color: get(color, 'range'),\n        style: get(bulletStyle, 'range'),\n        size: get(size, 'range')\n      }\n    }\n  });\n  interval(r); // 范围值的 tooltip 隐藏掉\n\n  chart.geometries[0].tooltip(false); // measureGeometry\n\n  var m = deepAssign({}, params, {\n    options: {\n      xField: xField,\n      yField: measureField,\n      seriesField: 'mKey',\n      isStack: true,\n      label: get(label, 'measure'),\n      interval: {\n        color: get(color, 'measure'),\n        style: get(bulletStyle, 'measure'),\n        size: get(size, 'measure')\n      }\n    }\n  });\n  interval(m); // targetGeometry\n\n  var t = deepAssign({}, params, {\n    options: {\n      xField: xField,\n      yField: targetField,\n      seriesField: 'tKey',\n      label: get(label, 'target'),\n      point: {\n        color: get(color, 'target'),\n        style: get(bulletStyle, 'target'),\n        size: isFunction(get(size, 'target')) ? function (data) {\n          return get(size, 'target')(data) / 2;\n        } : get(size, 'target') / 2,\n        shape: layout === 'horizontal' ? 'line' : 'hyphen'\n      }\n    }\n  });\n  point(t); // 水平的时候，要转换坐标轴\n\n  if (layout === 'horizontal') {\n    chart.coordinate().transpose();\n  }\n\n  return __assign(__assign({}, params), {\n    ext: {\n      data: {\n        min: min,\n        max: max\n      }\n    }\n  });\n}\n/**\n * meta 配置\n * @param params\n */\n\n\nexport function meta(params) {\n  var _a, _b;\n\n  var options = params.options,\n      ext = params.ext;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      targetField = options.targetField,\n      rangeField = options.rangeField,\n      measureField = options.measureField,\n      xField = options.xField;\n  var extData = ext.data;\n  return flow(scale((_a = {}, _a[xField] = xAxis, _a[measureField] = yAxis, _a), (_b = {}, _b[measureField] = {\n    min: extData === null || extData === void 0 ? void 0 : extData.min,\n    max: extData === null || extData === void 0 ? void 0 : extData.max,\n    sync: true\n  }, _b[targetField] = {\n    sync: \"\" + measureField\n  }, _b[rangeField] = {\n    sync: \"\" + measureField\n  }, _b)))(params);\n}\n/**\n * axis 配置\n * @param params\n */\n\nfunction axis(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      measureField = options.measureField,\n      rangeField = options.rangeField,\n      targetField = options.targetField;\n  chart.axis(\"\" + rangeField, false);\n  chart.axis(\"\" + targetField, false); // 为 false 则是不显示轴\n\n  if (xAxis === false) {\n    chart.axis(\"\" + xField, false);\n  } else {\n    chart.axis(\"\" + xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(\"\" + measureField, false);\n  } else {\n    chart.axis(\"\" + measureField, yAxis);\n  }\n\n  return params;\n}\n/**\n * legend 配置\n * @param params\n */\n\n\nfunction legend(params) {\n  var chart = params.chart,\n      options = params.options;\n  var legend = options.legend;\n  chart.removeInteraction('legend-filter'); // @TODO 后续看是否内部自定义一个 legend\n\n  chart.legend(legend); // 默认关闭掉所在 color 字段的 legend, 从而不影响自定义的legend\n\n  chart.legend('rKey', false);\n  chart.legend('mKey', false);\n  chart.legend('tKey', false);\n  return params;\n}\n/**\n * label 配置\n * @param params\n */\n\n\nfunction label(params) {\n  var chart = params.chart,\n      options = params.options;\n  var label = options.label,\n      measureField = options.measureField,\n      targetField = options.targetField,\n      rangeField = options.rangeField;\n  var _a = chart.geometries,\n      rangeGeometry = _a[0],\n      measureGeometry = _a[1],\n      targetGeometry = _a[2];\n\n  if (get(label, 'range')) {\n    rangeGeometry.label(\"\" + rangeField, __assign({\n      layout: [{\n        type: 'limit-in-plot'\n      }]\n    }, transformLabel(label.range)));\n  } else {\n    rangeGeometry.label(false);\n  }\n\n  if (get(label, 'measure')) {\n    measureGeometry.label(\"\" + measureField, __assign({\n      layout: [{\n        type: 'limit-in-plot'\n      }]\n    }, transformLabel(label.measure)));\n  } else {\n    measureGeometry.label(false);\n  }\n\n  if (get(label, 'target')) {\n    targetGeometry.label(\"\" + targetField, __assign({\n      layout: [{\n        type: 'limit-in-plot'\n      }]\n    }, transformLabel(label.target)));\n  } else {\n    targetGeometry.label(false);\n  }\n\n  return params;\n}\n/**\n * 子弹图适配器\n * @param chart\n * @param options\n */\n\n\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  flow(geometry, meta, axis, legend, theme, label, tooltip, interaction, animation)(params);\n}","map":{"version":3,"sources":["../../../src/plots/bullet/adaptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { get, isFunction } from '@antv/util';\nimport { Params } from '../../core/adaptor';\nimport { interaction, animation, theme, tooltip, scale } from '../../adaptor/common';\nimport { flow, transformLabel, deepAssign } from '../../utils';\nimport { Datum } from '../../types';\nimport { interval, point } from '../../adaptor/geometries';\nimport { BulletOptions } from './types';\nimport { transformData } from './utils';\n\n/**\n * geometry 处理\n * @param params\n */\nfunction geometry(params: Params<BulletOptions>): Params<BulletOptions> {\n  const { chart, options } = params;\n  const { bulletStyle, targetField, rangeField, measureField, xField, color, layout, size, label } = options;\n  // 处理数据\n  const { min, max, ds } = transformData(options);\n  chart.data(ds);\n\n  // rangeGeometry\n  const r = deepAssign({}, params, {\n    options: {\n      xField: xField,\n      yField: rangeField,\n      seriesField: 'rKey',\n      isStack: true,\n      label: get(label, 'range'),\n      interval: {\n        color: get(color, 'range'),\n        style: get(bulletStyle, 'range'),\n        size: get(size, 'range'),\n      },\n    },\n  });\n  interval(r);\n  // 范围值的 tooltip 隐藏掉\n  chart.geometries[0].tooltip(false);\n\n  // measureGeometry\n  const m = deepAssign({}, params, {\n    options: {\n      xField: xField,\n      yField: measureField,\n      seriesField: 'mKey',\n      isStack: true,\n      label: get(label, 'measure'),\n      interval: {\n        color: get(color, 'measure'),\n        style: get(bulletStyle, 'measure'),\n        size: get(size, 'measure'),\n      },\n    },\n  });\n  interval(m);\n\n  // targetGeometry\n  const t = deepAssign({}, params, {\n    options: {\n      xField: xField,\n      yField: targetField,\n      seriesField: 'tKey',\n      label: get(label, 'target'),\n      point: {\n        color: get(color, 'target'),\n        style: get(bulletStyle, 'target'),\n        size: isFunction(get(size, 'target'))\n          ? (data: Datum) => get(size, 'target')(data) / 2\n          : get(size, 'target') / 2,\n        shape: layout === 'horizontal' ? 'line' : 'hyphen',\n      },\n    },\n  });\n  point(t);\n\n  // 水平的时候，要转换坐标轴\n  if (layout === 'horizontal') {\n    chart.coordinate().transpose();\n  }\n\n  return { ...params, ext: { data: { min, max } } };\n}\n\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params: Params<BulletOptions>): Params<BulletOptions> {\n  const { options, ext } = params;\n  const { xAxis, yAxis, targetField, rangeField, measureField, xField } = options;\n\n  const extData = ext.data;\n  return flow(\n    scale(\n      {\n        [xField]: xAxis,\n        [measureField]: yAxis,\n      },\n      // 额外的 meta\n      {\n        [measureField]: { min: extData?.min, max: extData?.max, sync: true },\n        [targetField]: {\n          sync: `${measureField}`,\n        },\n        [rangeField]: {\n          sync: `${measureField}`,\n        },\n      }\n    )\n  )(params);\n}\n\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params: Params<BulletOptions>): Params<BulletOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField, measureField, rangeField, targetField } = options;\n\n  chart.axis(`${rangeField}`, false);\n  chart.axis(`${targetField}`, false);\n\n  // 为 false 则是不显示轴\n  if (xAxis === false) {\n    chart.axis(`${xField}`, false);\n  } else {\n    chart.axis(`${xField}`, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(`${measureField}`, false);\n  } else {\n    chart.axis(`${measureField}`, yAxis);\n  }\n\n  return params;\n}\n\n/**\n * legend 配置\n * @param params\n */\nfunction legend(params: Params<BulletOptions>): Params<BulletOptions> {\n  const { chart, options } = params;\n  const { legend } = options;\n  chart.removeInteraction('legend-filter');\n  // @TODO 后续看是否内部自定义一个 legend\n  chart.legend(legend);\n\n  // 默认关闭掉所在 color 字段的 legend, 从而不影响自定义的legend\n  chart.legend('rKey', false);\n  chart.legend('mKey', false);\n  chart.legend('tKey', false);\n\n  return params;\n}\n\n/**\n * label 配置\n * @param params\n */\nfunction label(params: Params<BulletOptions>): Params<BulletOptions> {\n  const { chart, options } = params;\n  const { label, measureField, targetField, rangeField } = options;\n  const [rangeGeometry, measureGeometry, targetGeometry] = chart.geometries;\n\n  if (get(label, 'range')) {\n    rangeGeometry.label(`${rangeField}`, {\n      layout: [{ type: 'limit-in-plot' }],\n      ...transformLabel(label.range),\n    });\n  } else {\n    rangeGeometry.label(false);\n  }\n  if (get(label, 'measure')) {\n    measureGeometry.label(`${measureField}`, {\n      layout: [{ type: 'limit-in-plot' }],\n      ...transformLabel(label.measure),\n    });\n  } else {\n    measureGeometry.label(false);\n  }\n  if (get(label, 'target')) {\n    targetGeometry.label(`${targetField}`, {\n      layout: [{ type: 'limit-in-plot' }],\n      ...transformLabel(label.target),\n    });\n  } else {\n    targetGeometry.label(false);\n  }\n\n  return params;\n}\n\n/**\n * 子弹图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<BulletOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  flow(geometry, meta, axis, legend, theme, label, tooltip, interaction, animation)(params);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}