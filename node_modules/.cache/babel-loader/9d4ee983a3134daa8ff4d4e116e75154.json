{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport { VirtualResource } from './VirtualResource';\nexport var ResourceEntry = /*#__PURE__*/function (_VirtualResource) {\n  _inherits(ResourceEntry, _VirtualResource);\n\n  var _super = _createSuper(ResourceEntry);\n\n  function ResourceEntry() {\n    var _this;\n\n    _classCallCheck(this, ResourceEntry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.version = 0;\n    _this.refs = 0;\n    _this.name = void 0;\n    _this.imported = void 0;\n    _this.priority = void 0;\n    _this.discardStart = true;\n    _this.discardEnd = false;\n    _this.descriptor = void 0;\n    _this.resource = void 0;\n    return _this;\n  }\n\n  _createClass(ResourceEntry, [{\n    key: \"preExecuteDestroy\",\n\n    /**\n     * Lifecycles in FG's execute\n     */\n    value: function preExecuteDestroy() {\n      this.discardEnd = true;\n    }\n  }, {\n    key: \"postExecuteDestroy\",\n    value: function postExecuteDestroy() {\n      if (!this.imported) {// TODO: 不需要每一帧结束后都销毁资源，可以增加临时资源标志\n        // this.resource.destroy();\n      }\n    }\n  }, {\n    key: \"postExecuteDevirtualize\",\n    value: function postExecuteDevirtualize() {\n      this.discardStart = false;\n    }\n  }, {\n    key: \"preExecuteDevirtualize\",\n    value: function preExecuteDevirtualize() {\n      if (!this.imported) {//\n      }\n    }\n  }]);\n\n  return ResourceEntry;\n}(VirtualResource);","map":{"version":3,"sources":["../../../src/components/framegraph/ResourceEntry.ts"],"names":["ResourceEntry"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAAA,eAAA,QAAA,mBAAA;AAEA,OAAA,IAAaA,aAAb,GAAA,aAAA,UAAA,gBAAA,EAAA;AAAA,EAAA,SAAA,CAAA,aAAA,EAAA,gBAAA,CAAA;;AAAA,MAAA,MAAA,GAAA,YAAA,CAAA,aAAA,CAAA;;AAAA,WAAA,aAAA,GAAA;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,aAAA,CAAA;;AAAA,SAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAA,IAAA,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAAA,MAAA,IAAA,CAAA,IAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA;AAAA;;AAAA,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,EAAA,CAAA,IAAA,EAAA,MAAA,CAAA,IAAA,CAAA,CAAA;AAAA,IAAA,KAAA,CAAA,OAAA,GAAA,CAAA;AAAA,IAAA,KAAA,CAAA,IAAA,GAAA,CAAA;AAAA,IAAA,KAAA,CAAA,IAAA,GAAA,KAAA,CAAA;AAAA,IAAA,KAAA,CAAA,QAAA,GAAA,KAAA,CAAA;AAAA,IAAA,KAAA,CAAA,QAAA,GAAA,KAAA,CAAA;AAAA,IAAA,KAAA,CAAA,YAAA,GAAA,IAAA;AAAA,IAAA,KAAA,CAAA,UAAA,GAAA,KAAA;AAAA,IAAA,KAAA,CAAA,UAAA,GAAA,KAAA,CAAA;AAAA,IAAA,KAAA,CAAA,QAAA,GAAA,KAAA,CAAA;AAAA,WAAA,KAAA;AAAA;;AAAA,EAAA,YAAA,CAAA,aAAA,EAAA,CAAA;AAAA,IAAA,GAAA,EAAA,mBAAA;;AAmBE;AACF;AACA;AArBA,IAAA,KAAA,EAAA,SAAA,iBAAA,GAsBmC;AAC/B,WAAA,UAAA,GAAA,IAAA;AACD;AAxBH,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,oBAAA;AAAA,IAAA,KAAA,EAAA,SAAA,kBAAA,GA0BoC;AAChC,UAAI,CAAC,KAAL,QAAA,EAAoB,CAClB;AACA;AACD;AACF;AA/BH,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,yBAAA;AAAA,IAAA,KAAA,EAAA,SAAA,uBAAA,GAiCyC;AACrC,WAAA,YAAA,GAAA,KAAA;AACD;AAnCH,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,wBAAA;AAAA,IAAA,KAAA,EAAA,SAAA,sBAAA,GAqCkC;AAC9B,UAAI,CAAC,KAAL,QAAA,EAAoB,CAClB;AACD;AACF;AAzCH,GAAA,CAAA,CAAA;;AAAA,SAAA,aAAA;AAAA,CAAA,CAAA,eAAA,CAAA","sourcesContent":["import { IFramebuffer, ITexture2D } from '../..';\nimport { TextureDescriptor } from './FrameGraphHandle';\nimport { VirtualResource } from './VirtualResource';\n\nexport class ResourceEntry extends VirtualResource {\n  public version: number = 0;\n\n  public refs: number = 0;\n\n  public name: string;\n\n  public imported: boolean;\n\n  public priority: number;\n\n  public discardStart = true;\n\n  public discardEnd = false;\n\n  public descriptor: TextureDescriptor;\n\n  public resource: IFramebuffer;\n\n  /**\n   * Lifecycles in FG's execute\n   */\n  public preExecuteDestroy(): void {\n    this.discardEnd = true;\n  }\n\n  public postExecuteDestroy(): void {\n    if (!this.imported) {\n      // TODO: 不需要每一帧结束后都销毁资源，可以增加临时资源标志\n      // this.resource.destroy();\n    }\n  }\n\n  public postExecuteDevirtualize(): void {\n    this.discardStart = false;\n  }\n\n  public preExecuteDevirtualize() {\n    if (!this.imported) {\n      //\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}