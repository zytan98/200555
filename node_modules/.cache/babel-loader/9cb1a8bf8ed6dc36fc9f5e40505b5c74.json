{"ast":null,"code":"export default class Quad {\n  constructor(params) {\n    /**\n     * the center position of this quad\n     * @type  {number}\n     */\n    this.xmid = params.xmid;\n    /**\n     * the center position of this quad\n     * @type  {number}\n     */\n\n    this.ymid = params.ymid;\n    /**\n     * the length of this quad\n     * @type  {number}\n     */\n\n    this.length = params.length;\n    /**\n     * the mass center of this quad\n     * @type  {number}\n     */\n\n    this.massCenter = params.massCenter || [0, 0];\n    /**\n     * the mass of this quad\n     * @type  {number}\n     */\n\n    this.mass = params.mass || 1;\n  }\n\n  getLength() {\n    return this.length;\n  }\n\n  contains(x, y) {\n    const halfLen = this.length / 2;\n    return x <= this.xmid + halfLen && x >= this.xmid - halfLen && y <= this.ymid + halfLen && y >= this.ymid - halfLen;\n  } // northwest quadrant\n  // tslint:disable-next-line\n\n\n  NW() {\n    const x = this.xmid - this.length / 4;\n    const y = this.ymid + this.length / 4;\n    const len = this.length / 2;\n    const params = {\n      xmid: x,\n      ymid: y,\n      length: len\n    };\n    const NW = new Quad(params);\n    return NW;\n  } // northeast\n  // tslint:disable-next-line\n\n\n  NE() {\n    const x = this.xmid + this.length / 4;\n    const y = this.ymid + this.length / 4;\n    const len = this.length / 2;\n    const params = {\n      xmid: x,\n      ymid: y,\n      length: len\n    };\n    const NE = new Quad(params);\n    return NE;\n  } // southwest\n  // tslint:disable-next-line\n\n\n  SW() {\n    const x = this.xmid - this.length / 4;\n    const y = this.ymid - this.length / 4;\n    const len = this.length / 2;\n    const params = {\n      xmid: x,\n      ymid: y,\n      length: len\n    };\n    const SW = new Quad(params);\n    return SW;\n  } // southeast\n  // tslint:disable-next-line\n\n\n  SE() {\n    const x = this.xmid + this.length / 4;\n    const y = this.ymid - this.length / 4;\n    const len = this.length / 2;\n    const params = {\n      xmid: x,\n      ymid: y,\n      length: len\n    };\n    const SE = new Quad(params);\n    return SE;\n  }\n\n}","map":{"version":3,"sources":["../../../src/layout/forceAtlas2/quad.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["export default class Quad {\n    constructor(params) {\n        /**\n         * the center position of this quad\n         * @type  {number}\n         */\n        this.xmid = params.xmid;\n        /**\n         * the center position of this quad\n         * @type  {number}\n         */\n        this.ymid = params.ymid;\n        /**\n         * the length of this quad\n         * @type  {number}\n         */\n        this.length = params.length;\n        /**\n         * the mass center of this quad\n         * @type  {number}\n         */\n        this.massCenter = params.massCenter || [0, 0];\n        /**\n         * the mass of this quad\n         * @type  {number}\n         */\n        this.mass = params.mass || 1;\n    }\n    getLength() {\n        return this.length;\n    }\n    contains(x, y) {\n        const halfLen = this.length / 2;\n        return (x <= this.xmid + halfLen &&\n            x >= this.xmid - halfLen &&\n            y <= this.ymid + halfLen &&\n            y >= this.ymid - halfLen);\n    }\n    // northwest quadrant\n    // tslint:disable-next-line\n    NW() {\n        const x = this.xmid - this.length / 4;\n        const y = this.ymid + this.length / 4;\n        const len = this.length / 2;\n        const params = {\n            xmid: x,\n            ymid: y,\n            length: len\n        };\n        const NW = new Quad(params);\n        return NW;\n    }\n    // northeast\n    // tslint:disable-next-line\n    NE() {\n        const x = this.xmid + this.length / 4;\n        const y = this.ymid + this.length / 4;\n        const len = this.length / 2;\n        const params = {\n            xmid: x,\n            ymid: y,\n            length: len\n        };\n        const NE = new Quad(params);\n        return NE;\n    }\n    // southwest\n    // tslint:disable-next-line\n    SW() {\n        const x = this.xmid - this.length / 4;\n        const y = this.ymid - this.length / 4;\n        const len = this.length / 2;\n        const params = {\n            xmid: x,\n            ymid: y,\n            length: len\n        };\n        const SW = new Quad(params);\n        return SW;\n    }\n    // southeast\n    // tslint:disable-next-line\n    SE() {\n        const x = this.xmid + this.length / 4;\n        const y = this.ymid - this.length / 4;\n        const len = this.length / 2;\n        const params = {\n            xmid: x,\n            ymid: y,\n            length: len\n        };\n        const SE = new Quad(params);\n        return SE;\n    }\n}\n//# sourceMappingURL=quad.js.map"]},"metadata":{},"sourceType":"module"}