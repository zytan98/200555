{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.typeConstraint = exports.namedConstraint = exports.taggedConstraint = exports.traverseAncerstors = void 0;\n\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\n\nvar metadata_1 = require(\"../planning/metadata\");\n\nvar traverseAncerstors = function (request, constraint) {\n  var parent = request.parentRequest;\n\n  if (parent !== null) {\n    return constraint(parent) ? true : traverseAncerstors(parent, constraint);\n  } else {\n    return false;\n  }\n};\n\nexports.traverseAncerstors = traverseAncerstors;\n\nvar taggedConstraint = function (key) {\n  return function (value) {\n    var constraint = function (request) {\n      return request !== null && request.target !== null && request.target.matchesTag(key)(value);\n    };\n\n    constraint.metaData = new metadata_1.Metadata(key, value);\n    return constraint;\n  };\n};\n\nexports.taggedConstraint = taggedConstraint;\nvar namedConstraint = taggedConstraint(METADATA_KEY.NAMED_TAG);\nexports.namedConstraint = namedConstraint;\n\nvar typeConstraint = function (type) {\n  return function (request) {\n    var binding = null;\n\n    if (request !== null) {\n      binding = request.bindings[0];\n\n      if (typeof type === \"string\") {\n        var serviceIdentifier = binding.serviceIdentifier;\n        return serviceIdentifier === type;\n      } else {\n        var constructor = request.bindings[0].implementationType;\n        return type === constructor;\n      }\n    }\n\n    return false;\n  };\n};\n\nexports.typeConstraint = typeConstraint;","map":{"version":3,"sources":["../../src/syntax/constraint_helpers.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAA,YAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;;AAEA,IAAA,UAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AAEA,IAAM,kBAAkB,GAAG,UACvB,OADuB,EAEvB,UAFuB,EAEkB;AAGzC,MAAM,MAAM,GAAG,OAAO,CAAC,aAAvB;;AACA,MAAI,MAAM,KAAK,IAAf,EAAqB;AACjB,WAAO,UAAU,CAAC,MAAD,CAAV,GAAqB,IAArB,GAA4B,kBAAkB,CAAC,MAAD,EAAS,UAAT,CAArD;AACH,GAFD,MAEO;AACH,WAAO,KAAP;AACH;AACJ,CAXD;;AA+CS,OAAA,CAAA,kBAAA,GAAA,kBAAA;;AAhCT,IAAM,gBAAgB,GAAG,UAAC,GAAD,EAA8B;AAAK,SAAA,UAAC,KAAD,EAAW;AAEnE,QAAM,UAAU,GAAmC,UAAC,OAAD,EAAmC;AAClF,aAAA,OAAO,KAAK,IAAZ,IAAoB,OAAO,CAAC,MAAR,KAAmB,IAAvC,IAA+C,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,GAA1B,EAA+B,KAA/B,CAA/C;AAAoF,KADxF;;AAGA,IAAA,UAAU,CAAC,QAAX,GAAsB,IAAI,UAAA,CAAA,QAAJ,CAAa,GAAb,EAAkB,KAAlB,CAAtB;AAEA,WAAO,UAAP;AAPwD,GAAA;AAQ3D,CARD;;AAgC6B,OAAA,CAAA,gBAAA,GAAA,gBAAA;AAtB7B,IAAM,eAAe,GAAG,gBAAgB,CAAC,YAAY,CAAC,SAAd,CAAxC;AAsB+C,OAAA,CAAA,eAAA,GAAA,eAAA;;AApB/C,IAAM,cAAc,GAAG,UAAC,IAAD,EAA0B;AAAK,SAAA,UAAC,OAAD,EAAmC;AAIrF,QAAI,OAAO,GAAmC,IAA9C;;AAEA,QAAI,OAAO,KAAK,IAAhB,EAAsB;AAClB,MAAA,OAAO,GAAG,OAAO,CAAC,QAAR,CAAiB,CAAjB,CAAV;;AACA,UAAI,OAAO,IAAP,KAAgB,QAApB,EAA8B;AAC1B,YAAM,iBAAiB,GAAG,OAAO,CAAC,iBAAlC;AACA,eAAO,iBAAiB,KAAK,IAA7B;AACH,OAHD,MAGO;AACH,YAAM,WAAW,GAAG,OAAO,CAAC,QAAR,CAAiB,CAAjB,EAAoB,kBAAxC;AACA,eAAO,IAAI,KAAK,WAAhB;AACH;AACJ;;AAED,WAAO,KAAP;AAjBkD,GAAA;AAkBrD,CAlBD;;AAoBgE,OAAA,CAAA,cAAA,GAAA,cAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.typeConstraint = exports.namedConstraint = exports.taggedConstraint = exports.traverseAncerstors = void 0;\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nvar metadata_1 = require(\"../planning/metadata\");\nvar traverseAncerstors = function (request, constraint) {\n    var parent = request.parentRequest;\n    if (parent !== null) {\n        return constraint(parent) ? true : traverseAncerstors(parent, constraint);\n    }\n    else {\n        return false;\n    }\n};\nexports.traverseAncerstors = traverseAncerstors;\nvar taggedConstraint = function (key) { return function (value) {\n    var constraint = function (request) {\n        return request !== null && request.target !== null && request.target.matchesTag(key)(value);\n    };\n    constraint.metaData = new metadata_1.Metadata(key, value);\n    return constraint;\n}; };\nexports.taggedConstraint = taggedConstraint;\nvar namedConstraint = taggedConstraint(METADATA_KEY.NAMED_TAG);\nexports.namedConstraint = namedConstraint;\nvar typeConstraint = function (type) { return function (request) {\n    var binding = null;\n    if (request !== null) {\n        binding = request.bindings[0];\n        if (typeof type === \"string\") {\n            var serviceIdentifier = binding.serviceIdentifier;\n            return serviceIdentifier === type;\n        }\n        else {\n            var constructor = request.bindings[0].implementationType;\n            return type === constructor;\n        }\n    }\n    return false;\n}; };\nexports.typeConstraint = typeConstraint;\n//# sourceMappingURL=constraint_helpers.js.map"]},"metadata":{},"sourceType":"script"}