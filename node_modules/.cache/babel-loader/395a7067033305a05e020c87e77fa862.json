{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { get } from '@antv/util';\nimport { Plot } from '../../core/plot';\nimport { findViewById } from '../../utils';\nimport { adaptor } from './adaptor';\nimport { transformToViewsData } from './helper';\nimport { EDGES_VIEW_ID, NODES_VIEW_ID } from './constant'; // 桑基图内置交互\n\nimport './interactions';\n/**\n *  桑基图 Sankey\n */\n\nvar Sankey =\n/** @class */\nfunction (_super) {\n  __extends(Sankey, _super);\n\n  function Sankey() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n\n\n    _this.type = 'sankey';\n    return _this;\n  }\n\n  Sankey.getDefaultOptions = function () {\n    return {\n      appendPadding: 8,\n      syncViewPadding: true,\n      nodeStyle: {\n        opacity: 1,\n        fillOpacity: 1,\n        lineWidth: 1\n      },\n      edgeStyle: {\n        opacity: 0.3,\n        lineWidth: 0\n      },\n      edgeState: {\n        active: {\n          style: {\n            opacity: 0.8,\n            lineWidth: 0\n          }\n        }\n      },\n      label: {\n        formatter: function (_a) {\n          var name = _a.name;\n          return name;\n        },\n        callback: function (x) {\n          var isLast = x[1] === 1; // 最后一列靠边的节点\n\n          return {\n            style: {\n              fill: '#545454',\n              textAlign: isLast ? 'end' : 'start'\n            },\n            offsetX: isLast ? -8 : 8\n          };\n        },\n        layout: [{\n          type: 'hide-overlap'\n        }]\n      },\n      tooltip: {\n        showTitle: false,\n        showMarkers: false,\n        shared: false,\n        // 内置：node 不显示 tooltip，edge 显示 tooltip\n        showContent: function (items) {\n          return !get(items, [0, 'data', 'isNode']);\n        },\n        formatter: function (datum) {\n          var source = datum.source,\n              target = datum.target,\n              value = datum.value;\n          return {\n            name: source + ' -> ' + target,\n            value: value\n          };\n        }\n      },\n      nodeWidthRatio: 0.008,\n      nodePaddingRatio: 0.01,\n      animation: {\n        appear: {\n          animation: 'wave-in'\n        },\n        enter: {\n          animation: 'wave-in'\n        }\n      }\n    };\n  };\n  /**\n   * @override\n   * @param data\n   */\n\n\n  Sankey.prototype.changeData = function (data) {\n    this.updateOption({\n      data: data\n    });\n\n    var _a = transformToViewsData(this.options, this.chart.width, this.chart.height),\n        nodes = _a.nodes,\n        edges = _a.edges;\n\n    var nodesView = findViewById(this.chart, NODES_VIEW_ID);\n    var edgesView = findViewById(this.chart, EDGES_VIEW_ID);\n    nodesView.changeData(nodes);\n    edgesView.changeData(edges);\n  };\n  /**\n   * 获取适配器\n   */\n\n\n  Sankey.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n  /**\n   * 获取 条形图 默认配置\n   */\n\n\n  Sankey.prototype.getDefaultOptions = function () {\n    return Sankey.getDefaultOptions();\n  };\n\n  return Sankey;\n}(Plot);\n\nexport { Sankey };","map":{"version":3,"sources":["../../../src/plots/sankey/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { get } from '@antv/util';\nimport { Plot } from '../../core/plot';\nimport { Adaptor } from '../../core/adaptor';\nimport { Data, Datum } from '../../types';\nimport { findViewById } from '../../utils';\nimport { SankeyOptions } from './types';\nimport { adaptor } from './adaptor';\nimport { transformToViewsData } from './helper';\nimport { EDGES_VIEW_ID, NODES_VIEW_ID } from './constant';\n// 桑基图内置交互\nimport './interactions';\n\nexport type { SankeyOptions };\n\n/**\n *  桑基图 Sankey\n */\nexport class Sankey extends Plot<SankeyOptions> {\n  /** 图表类型 */\n  public type: string = 'sankey';\n\n  static getDefaultOptions(): Partial<SankeyOptions> {\n    return {\n      appendPadding: 8,\n      syncViewPadding: true,\n      nodeStyle: {\n        opacity: 1,\n        fillOpacity: 1,\n        lineWidth: 1,\n      },\n      edgeStyle: {\n        opacity: 0.3,\n        lineWidth: 0,\n      },\n      edgeState: {\n        active: {\n          style: {\n            opacity: 0.8,\n            lineWidth: 0,\n          },\n        },\n      },\n      label: {\n        formatter: ({ name }) => name,\n        callback: (x: number[]) => {\n          const isLast = x[1] === 1; // 最后一列靠边的节点\n          return {\n            style: {\n              fill: '#545454',\n              textAlign: isLast ? 'end' : 'start',\n            },\n            offsetX: isLast ? -8 : 8,\n          };\n        },\n        layout: [\n          {\n            type: 'hide-overlap',\n          },\n        ],\n      },\n      tooltip: {\n        showTitle: false,\n        showMarkers: false,\n        shared: false,\n        // 内置：node 不显示 tooltip，edge 显示 tooltip\n        showContent: (items) => {\n          return !get(items, [0, 'data', 'isNode']);\n        },\n        formatter: (datum: Datum) => {\n          const { source, target, value } = datum;\n          return {\n            name: source + ' -> ' + target,\n            value,\n          };\n        },\n      },\n      nodeWidthRatio: 0.008,\n      nodePaddingRatio: 0.01,\n      animation: {\n        appear: {\n          animation: 'wave-in',\n        },\n        enter: {\n          animation: 'wave-in',\n        },\n      },\n    };\n  }\n\n  /**\n   * @override\n   * @param data\n   */\n  public changeData(data: Data) {\n    this.updateOption({ data });\n\n    const { nodes, edges } = transformToViewsData(this.options, this.chart.width, this.chart.height);\n\n    const nodesView = findViewById(this.chart, NODES_VIEW_ID);\n    const edgesView = findViewById(this.chart, EDGES_VIEW_ID);\n\n    nodesView.changeData(nodes);\n    edgesView.changeData(edges);\n  }\n\n  /**\n   * 获取适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<SankeyOptions> {\n    return adaptor;\n  }\n\n  /**\n   * 获取 条形图 默认配置\n   */\n  protected getDefaultOptions() {\n    return Sankey.getDefaultOptions();\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}