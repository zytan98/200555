{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { each, omit } from '@antv/util';\nimport { theme } from '../../adaptor/common';\nimport { AXIS_META_CONFIG_KEYS } from '../../constant';\nimport { pick, flow, deepAssign } from '../../utils';\nimport { execPlotAdaptor } from '../mix/utils';\nimport { execViewAdaptor } from './utils';\n\nfunction facetAdaptor(params) {\n  var chart = params.chart,\n      options = params.options;\n  var facetType = options.type,\n      data = options.data,\n      fields = options.fields,\n      eachView = options.eachView;\n  var restFacetCfg = omit(options, ['type', 'data', 'fields', 'eachView', 'axes', 'meta', 'tooltip', 'coordinate', 'theme', 'legend', 'interactions', 'annotations']); // 1. data\n\n  chart.data(data); // 2. facet\n\n  chart.facet(facetType, __assign(__assign({}, restFacetCfg), {\n    fields: fields,\n    eachView: function (viewOfG2, facet) {\n      var viewOptions = eachView(viewOfG2, facet);\n\n      if (viewOptions.geometries) {\n        execViewAdaptor(viewOfG2, viewOptions);\n      } else {\n        var plot = viewOptions;\n        var plotOptions = plot.options; // @ts-ignore 仪表盘没 tooltip\n\n        if (plotOptions.tooltip) {\n          // 配置 tooltip 交互\n          viewOfG2.interaction('tooltip');\n        }\n\n        execPlotAdaptor(plot.type, viewOfG2, plotOptions);\n      }\n    }\n  }));\n  return params;\n}\n\nfunction component(params) {\n  var chart = params.chart,\n      options = params.options;\n  var axes = options.axes,\n      meta = options.meta,\n      tooltip = options.tooltip,\n      coordinate = options.coordinate,\n      theme = options.theme,\n      legend = options.legend,\n      interactions = options.interactions,\n      annotations = options.annotations; // 3. meta 配置\n\n  var scales = {};\n\n  if (axes) {\n    each(axes, function (axis, field) {\n      scales[field] = pick(axis, AXIS_META_CONFIG_KEYS);\n    });\n  }\n\n  scales = deepAssign({}, meta, scales);\n  chart.scale(scales); // 4. coordinate 配置\n\n  chart.coordinate(coordinate); // 5. axis 轴配置 (默认不展示)\n\n  if (!axes) {\n    chart.axis(false);\n  } else {\n    each(axes, function (axis, field) {\n      chart.axis(field, axis);\n    });\n  } // 6. tooltip 配置\n\n\n  if (tooltip) {\n    chart.interaction('tooltip');\n    chart.tooltip(tooltip);\n  } else if (tooltip === false) {\n    chart.removeInteraction('tooltip');\n  } // 7. legend 配置（默认展示）\n\n\n  chart.legend(legend); // theme 配置\n\n  if (theme) {\n    chart.theme(theme);\n  } // 8. interactions\n\n\n  each(interactions, function (interaction) {\n    if (interaction.enable === false) {\n      chart.removeInteraction(interaction.type);\n    } else {\n      chart.interaction(interaction.type, interaction.cfg);\n    }\n  }); // 9. annotations\n\n  each(annotations, function (annotation) {\n    chart.annotation()[annotation.type](__assign({}, annotation));\n  });\n  return params;\n}\n/**\n * 分面图适配器\n * @param chart\n * @param options\n */\n\n\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(theme, facetAdaptor, component)(params);\n}","map":{"version":3,"sources":["../../../src/plots/facet/adaptor.ts"],"names":[],"mappings":";AAAA,SAAS,IAAT,EAAe,IAAf,QAA2B,YAA3B;AACA,SAAS,KAAT,QAAsB,sBAAtB;AAEA,SAAS,qBAAT,QAAsC,gBAAtC;AACA,SAAS,IAAT,EAAe,IAAf,EAAqB,UAArB,QAAuC,aAAvC;AAEA,SAAS,eAAT,QAAgC,cAAhC;AAEA,SAAS,eAAT,QAAgC,SAAhC;;AAEA,SAAS,YAAT,CAAsB,MAAtB,EAAkD;AACxC,MAAA,KAAK,GAAc,MAAM,CAApB,KAAL;AAAA,MAAO,OAAO,GAAK,MAAM,CAAX,OAAd;AACA,MAAM,SAAS,GAA6B,OAAO,CAApC,IAAf;AAAA,MAAiB,IAAI,GAAuB,OAAO,CAA9B,IAArB;AAAA,MAAuB,MAAM,GAAe,OAAO,CAAtB,MAA7B;AAAA,MAA+B,QAAQ,GAAK,OAAO,CAAZ,QAAvC;AAER,MAAM,YAAY,GAAG,IAAI,CAAC,OAAD,EAAiB,CACxC,MADwC,EAExC,MAFwC,EAGxC,QAHwC,EAIxC,UAJwC,EAKxC,MALwC,EAMxC,MANwC,EAOxC,SAPwC,EAQxC,YARwC,EASxC,OATwC,EAUxC,QAVwC,EAWxC,cAXwC,EAYxC,aAZwC,CAAjB,CAAzB,CAJgD,CAmBhD;;AACA,EAAA,KAAK,CAAC,IAAN,CAAW,IAAX,EApBgD,CAsBhD;;AACA,EAAA,KAAK,CAAC,KAAN,CAAY,SAAZ,EAAqB,QAAA,CAAA,QAAA,CAAA,EAAA,EAChB,YADgB,CAAA,EACJ;AACf,IAAA,MAAM,EAAA,MADS;AAEf,IAAA,QAAQ,EAAE,UAAC,QAAD,EAAW,KAAX,EAAgB;AACxB,UAAM,WAAW,GAAG,QAAQ,CAAC,QAAD,EAAW,KAAX,CAA5B;;AACA,UAAK,WAAqB,CAAC,UAA3B,EAAuC;AACrC,QAAA,eAAe,CAAC,QAAD,EAAW,WAAX,CAAf;AACD,OAFD,MAEO;AACL,YAAM,IAAI,GAAG,WAAb;AACA,YAAM,WAAW,GAAG,IAAI,CAAC,OAAzB,CAFK,CAGL;;AACA,YAAI,WAAW,CAAC,OAAhB,EAAyB;AACvB;AACA,UAAA,QAAQ,CAAC,WAAT,CAAqB,SAArB;AACD;;AACD,QAAA,eAAe,CAAC,IAAI,CAAC,IAAN,EAAY,QAAZ,EAAsB,WAAtB,CAAf;AACD;AACF;AAhBc,GADI,CAArB;AAoBA,SAAO,MAAP;AACD;;AAED,SAAS,SAAT,CAAmB,MAAnB,EAA+C;AACrC,MAAA,KAAK,GAAc,MAAM,CAApB,KAAL;AAAA,MAAO,OAAO,GAAK,MAAM,CAAX,OAAd;AACA,MAAA,IAAI,GAA0E,OAAO,CAAjF,IAAJ;AAAA,MAAM,IAAI,GAAoE,OAAO,CAA3E,IAAV;AAAA,MAAY,OAAO,GAA2D,OAAO,CAAlE,OAAnB;AAAA,MAAqB,UAAU,GAA+C,OAAO,CAAtD,UAA/B;AAAA,MAAiC,KAAK,GAAwC,OAAO,CAA/C,KAAtC;AAAA,MAAwC,MAAM,GAAgC,OAAO,CAAvC,MAA9C;AAAA,MAAgD,YAAY,GAAkB,OAAO,CAAzB,YAA5D;AAAA,MAA8D,WAAW,GAAK,OAAO,CAAZ,WAAzE,CAFqC,CAI7C;;AACA,MAAI,MAAM,GAAwB,EAAlC;;AACA,MAAI,IAAJ,EAAU;AACR,IAAA,IAAI,CAAC,IAAD,EAAO,UAAC,IAAD,EAAa,KAAb,EAA0B;AACnC,MAAA,MAAM,CAAC,KAAD,CAAN,GAAgB,IAAI,CAAC,IAAD,EAAO,qBAAP,CAApB;AACD,KAFG,CAAJ;AAGD;;AAED,EAAA,MAAM,GAAG,UAAU,CAAC,EAAD,EAAK,IAAL,EAAW,MAAX,CAAnB;AACA,EAAA,KAAK,CAAC,KAAN,CAAY,MAAZ,EAb6C,CAe7C;;AACA,EAAA,KAAK,CAAC,UAAN,CAAiB,UAAjB,EAhB6C,CAkB7C;;AACA,MAAI,CAAC,IAAL,EAAW;AACT,IAAA,KAAK,CAAC,IAAN,CAAW,KAAX;AACD,GAFD,MAEO;AACL,IAAA,IAAI,CAAC,IAAD,EAAO,UAAC,IAAD,EAAa,KAAb,EAA0B;AACnC,MAAA,KAAK,CAAC,IAAN,CAAW,KAAX,EAAkB,IAAlB;AACD,KAFG,CAAJ;AAGD,GAzB4C,CA2B7C;;;AACA,MAAI,OAAJ,EAAa;AACX,IAAA,KAAK,CAAC,WAAN,CAAkB,SAAlB;AACA,IAAA,KAAK,CAAC,OAAN,CAAc,OAAd;AACD,GAHD,MAGO,IAAI,OAAO,KAAK,KAAhB,EAAuB;AAC5B,IAAA,KAAK,CAAC,iBAAN,CAAwB,SAAxB;AACD,GAjC4C,CAmC7C;;;AACA,EAAA,KAAK,CAAC,MAAN,CAAa,MAAb,EApC6C,CAsC7C;;AACA,MAAI,KAAJ,EAAW;AACT,IAAA,KAAK,CAAC,KAAN,CAAY,KAAZ;AACD,GAzC4C,CA2C7C;;;AACA,EAAA,IAAI,CAAC,YAAD,EAAe,UAAC,WAAD,EAAyB;AAC1C,QAAI,WAAW,CAAC,MAAZ,KAAuB,KAA3B,EAAkC;AAChC,MAAA,KAAK,CAAC,iBAAN,CAAwB,WAAW,CAAC,IAApC;AACD,KAFD,MAEO;AACL,MAAA,KAAK,CAAC,WAAN,CAAkB,WAAW,CAAC,IAA9B,EAAoC,WAAW,CAAC,GAAhD;AACD;AACF,GANG,CAAJ,CA5C6C,CAoD7C;;AACA,EAAA,IAAI,CAAC,WAAD,EAAc,UAAC,UAAD,EAAW;AAC3B,IAAA,KAAK,CAAC,UAAN,GAAmB,UAAU,CAAC,IAA9B,EAAmC,QAAA,CAAA,EAAA,EAC9B,UAD8B,CAAnC;AAGD,GAJG,CAAJ;AAMA,SAAO,MAAP;AACD;AAED;;;;AAIG;;;AACH,OAAM,SAAU,OAAV,CAAkB,MAAlB,EAA8C;AAClD;AACA,SAAO,IAAI,CAAC,KAAD,EAAQ,YAAR,EAAsB,SAAtB,CAAJ,CAAqC,MAArC,CAAP;AACD","sourcesContent":["import { each, omit } from '@antv/util';\nimport { theme } from '../../adaptor/common';\nimport { Params } from '../../core/adaptor';\nimport { AXIS_META_CONFIG_KEYS } from '../../constant';\nimport { pick, flow, deepAssign } from '../../utils';\nimport { Axis, Interaction } from '../../types';\nimport { execPlotAdaptor } from '../mix/utils';\nimport { FacetOptions, IPlot, IView } from './types';\nimport { execViewAdaptor } from './utils';\n\nfunction facetAdaptor(params: Params<FacetOptions>): Params<FacetOptions> {\n  const { chart, options } = params;\n  const { type: facetType, data, fields, eachView } = options;\n\n  const restFacetCfg = omit(options as any, [\n    'type',\n    'data',\n    'fields',\n    'eachView',\n    'axes',\n    'meta',\n    'tooltip',\n    'coordinate',\n    'theme',\n    'legend',\n    'interactions',\n    'annotations',\n  ]);\n\n  // 1. data\n  chart.data(data);\n\n  // 2. facet\n  chart.facet(facetType, {\n    ...restFacetCfg,\n    fields,\n    eachView: (viewOfG2, facet) => {\n      const viewOptions = eachView(viewOfG2, facet);\n      if ((viewOptions as IView).geometries) {\n        execViewAdaptor(viewOfG2, viewOptions as IView);\n      } else {\n        const plot = viewOptions as IPlot;\n        const plotOptions = plot.options;\n        // @ts-ignore 仪表盘没 tooltip\n        if (plotOptions.tooltip) {\n          // 配置 tooltip 交互\n          viewOfG2.interaction('tooltip');\n        }\n        execPlotAdaptor(plot.type, viewOfG2, plotOptions);\n      }\n    },\n  });\n\n  return params;\n}\n\nfunction component(params: Params<FacetOptions>): Params<FacetOptions> {\n  const { chart, options } = params;\n  const { axes, meta, tooltip, coordinate, theme, legend, interactions, annotations } = options;\n\n  // 3. meta 配置\n  let scales: Record<string, any> = {};\n  if (axes) {\n    each(axes, (axis: Axis, field: string) => {\n      scales[field] = pick(axis, AXIS_META_CONFIG_KEYS);\n    });\n  }\n\n  scales = deepAssign({}, meta, scales);\n  chart.scale(scales);\n\n  // 4. coordinate 配置\n  chart.coordinate(coordinate);\n\n  // 5. axis 轴配置 (默认不展示)\n  if (!axes) {\n    chart.axis(false);\n  } else {\n    each(axes, (axis: Axis, field: string) => {\n      chart.axis(field, axis);\n    });\n  }\n\n  // 6. tooltip 配置\n  if (tooltip) {\n    chart.interaction('tooltip');\n    chart.tooltip(tooltip);\n  } else if (tooltip === false) {\n    chart.removeInteraction('tooltip');\n  }\n\n  // 7. legend 配置（默认展示）\n  chart.legend(legend);\n\n  // theme 配置\n  if (theme) {\n    chart.theme(theme);\n  }\n\n  // 8. interactions\n  each(interactions, (interaction: Interaction) => {\n    if (interaction.enable === false) {\n      chart.removeInteraction(interaction.type);\n    } else {\n      chart.interaction(interaction.type, interaction.cfg);\n    }\n  });\n\n  // 9. annotations\n  each(annotations, (annotation) => {\n    chart.annotation()[annotation.type]({\n      ...annotation,\n    });\n  });\n\n  return params;\n}\n\n/**\n * 分面图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<FacetOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(theme, facetAdaptor, component)(params);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}