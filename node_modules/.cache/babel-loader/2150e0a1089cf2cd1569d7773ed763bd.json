{"ast":null,"code":"import { __rest } from \"tslib\";\nimport { get } from '@antv/util';\nimport { deepAssign, findGeometry } from '../../utils';\nimport { flow, transformLabel } from '../../utils';\nimport { tooltip, interaction, animation, theme, scale, annotation, state, pattern } from '../../adaptor/common';\nimport { geometry as geometryAdaptor } from '../../adaptor/geometries/base';\nimport { getTooltipMapping } from '../../utils/tooltip';\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var data = options.data,\n      type = options.type,\n      xField = options.xField,\n      yField = options.yField,\n      colorField = options.colorField,\n      sizeField = options.sizeField,\n      sizeRatio = options.sizeRatio,\n      shape = options.shape,\n      color = options.color,\n      tooltip = options.tooltip,\n      heatmapStyle = options.heatmapStyle;\n  chart.data(data);\n  var geometryType = 'polygon';\n\n  if (type === 'density') {\n    geometryType = 'heatmap';\n  }\n\n  var _a = getTooltipMapping(tooltip, [xField, yField, colorField]),\n      fields = _a.fields,\n      formatter = _a.formatter;\n  /**\n   * The ratio between the actual size and the max available size, must be in range `[0,1]`.\n   *\n   * If the `sizeRatio` attribute is undefined or it exceeds the range,\n   * `checkedSizeRatio` would be set to 1 as default.\n   */\n\n\n  var checkedSizeRatio = 1;\n\n  if (sizeRatio || sizeRatio === 0) {\n    if (!shape && !sizeField) {\n      console.warn('sizeRatio is not in effect: Must define shape or sizeField first');\n    } else if (sizeRatio < 0 || sizeRatio > 1) {\n      console.warn('sizeRatio is not in effect: It must be a number in [0,1]');\n    } else {\n      checkedSizeRatio = sizeRatio;\n    }\n  }\n\n  geometryAdaptor(deepAssign({}, params, {\n    options: {\n      type: geometryType,\n      colorField: colorField,\n      tooltipFields: fields,\n      shapeField: sizeField || '',\n      label: undefined,\n      mapping: {\n        tooltip: formatter,\n        shape: shape && (sizeField ? function (dautm) {\n          var field = data.map(function (row) {\n            return row[sizeField];\n          });\n          var min = Math.min.apply(Math, field);\n          var max = Math.max.apply(Math, field);\n          return [shape, (get(dautm, sizeField) - min) / (max - min), checkedSizeRatio];\n        } : function () {\n          return [shape, 1, checkedSizeRatio];\n        }),\n        color: color || colorField && chart.getTheme().sequenceColors.join('-'),\n        style: heatmapStyle\n      }\n    }\n  }));\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\n\n\nfunction meta(params) {\n  var _a;\n\n  var options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField;\n  return flow(scale((_a = {}, _a[xField] = xAxis, _a[yField] = yAxis, _a)))(params);\n}\n/**\n * axis 配置\n * @param params\n */\n\n\nfunction axis(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField; // 为 false 则是不显示轴\n\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(yField, false);\n  } else {\n    chart.axis(yField, yAxis);\n  }\n\n  return params;\n}\n/**\n * legend 配置\n * @param params\n */\n\n\nfunction legend(params) {\n  var chart = params.chart,\n      options = params.options;\n  var legend = options.legend,\n      colorField = options.colorField,\n      sizeField = options.sizeField,\n      sizeLegend = options.sizeLegend;\n  /** legend 不为 false, 则展示图例, 优先展示 color 分类图例 */\n\n  var showLegend = legend !== false;\n\n  if (colorField) {\n    chart.legend(colorField, showLegend ? legend : false);\n  } // 旧版本: 有 sizeField 就有 sizeLegend. 这里默认继承下 legend 配置\n\n\n  if (sizeField) {\n    chart.legend(sizeField, sizeLegend === undefined ? legend : sizeLegend);\n  }\n  /** 默认没有 sizeField，则隐藏连续图例 */\n\n\n  if (!showLegend && !sizeLegend) {\n    chart.legend(false);\n  }\n\n  return params;\n}\n/**\n * fixme 后续确认下，数据标签的逻辑为啥和通用的不一致\n * 数据标签\n * @param params\n */\n\n\nfunction label(params) {\n  var chart = params.chart,\n      options = params.options;\n  var label = options.label,\n      colorField = options.colorField,\n      type = options.type;\n  var geometry = findGeometry(chart, type === 'density' ? 'heatmap' : 'polygon');\n\n  if (!label) {\n    geometry.label(false);\n  } else if (colorField) {\n    var callback = label.callback,\n        cfg = __rest(label, [\"callback\"]);\n\n    geometry.label({\n      fields: [colorField],\n      callback: callback,\n      cfg: transformLabel(cfg)\n    });\n  }\n\n  return params;\n}\n/**\n * 极坐标\n * @param params\n */\n\n\nfunction coordinate(params) {\n  var chart = params.chart,\n      options = params.options;\n  var coordinate = options.coordinate,\n      reflect = options.reflect;\n\n  if (coordinate) {\n    chart.coordinate({\n      type: coordinate.type || 'rect',\n      cfg: coordinate.cfg\n    });\n  }\n\n  if (reflect) {\n    chart.coordinate().reflect(reflect);\n  }\n\n  return params;\n}\n/**\n * 热力图适配器\n * @param chart\n * @param options\n */\n\n\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(theme, pattern('heatmapStyle'), meta, coordinate, geometry, axis, legend, tooltip, label, annotation(), interaction, animation, state)(params);\n}","map":{"version":3,"sources":["../../../src/plots/heatmap/adaptor.ts"],"names":[],"mappings":";AAAA,SAAS,GAAT,QAAoB,YAApB;AAEA,SAAS,UAAT,EAAqB,YAArB,QAAyC,aAAzC;AACA,SAAS,IAAT,EAAe,cAAf,QAAqC,aAArC;AACA,SAAS,OAAT,EAAkB,WAAlB,EAA+B,SAA/B,EAA0C,KAA1C,EAAiD,KAAjD,EAAwD,UAAxD,EAAoE,KAApE,EAA2E,OAA3E,QAA0F,sBAA1F;AACA,SAAS,QAAQ,IAAI,eAArB,QAA4C,+BAA5C;AACA,SAAS,iBAAT,QAAkC,qBAAlC;;AAGA,SAAS,QAAT,CAAkB,MAAlB,EAAgD;AACtC,MAAA,KAAK,GAAc,MAAM,CAApB,KAAL;AAAA,MAAO,OAAO,GAAK,MAAM,CAAX,OAAd;AACA,MAAA,IAAI,GAAkG,OAAO,CAAzG,IAAJ;AAAA,MAAM,IAAI,GAA4F,OAAO,CAAnG,IAAV;AAAA,MAAY,MAAM,GAAoF,OAAO,CAA3F,MAAlB;AAAA,MAAoB,MAAM,GAA4E,OAAO,CAAnF,MAA1B;AAAA,MAA4B,UAAU,GAAgE,OAAO,CAAvE,UAAtC;AAAA,MAAwC,SAAS,GAAqD,OAAO,CAA5D,SAAjD;AAAA,MAAmD,SAAS,GAA0C,OAAO,CAAjD,SAA5D;AAAA,MAA8D,KAAK,GAAmC,OAAO,CAA1C,KAAnE;AAAA,MAAqE,KAAK,GAA4B,OAAO,CAAnC,KAA1E;AAAA,MAA4E,OAAO,GAAmB,OAAO,CAA1B,OAAnF;AAAA,MAAqF,YAAY,GAAK,OAAO,CAAZ,YAAjG;AAER,EAAA,KAAK,CAAC,IAAN,CAAW,IAAX;AACA,MAAI,YAAY,GAAG,SAAnB;;AACA,MAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,IAAA,YAAY,GAAG,SAAf;AACD;;AAEK,MAAA,EAAA,GAAwB,iBAAiB,CAAC,OAAD,EAAU,CAAC,MAAD,EAAS,MAAT,EAAiB,UAAjB,CAAV,CAAzC;AAAA,MAAE,MAAM,GAAA,EAAA,CAAA,MAAR;AAAA,MAAU,SAAS,GAAA,EAAA,CAAA,SAAnB;AAEN;;;;;AAKG;;;AACH,MAAI,gBAAgB,GAAG,CAAvB;;AACA,MAAI,SAAS,IAAI,SAAS,KAAK,CAA/B,EAAkC;AAChC,QAAI,CAAC,KAAD,IAAU,CAAC,SAAf,EAA0B;AACxB,MAAA,OAAO,CAAC,IAAR,CAAa,kEAAb;AACD,KAFD,MAEO,IAAI,SAAS,GAAG,CAAZ,IAAiB,SAAS,GAAG,CAAjC,EAAoC;AACzC,MAAA,OAAO,CAAC,IAAR,CAAa,0DAAb;AACD,KAFM,MAEA;AACL,MAAA,gBAAgB,GAAG,SAAnB;AACD;AACF;;AAED,EAAA,eAAe,CACb,UAAU,CAAC,EAAD,EAAK,MAAL,EAAa;AACrB,IAAA,OAAO,EAAE;AACP,MAAA,IAAI,EAAE,YADC;AAEP,MAAA,UAAU,EAAA,UAFH;AAGP,MAAA,aAAa,EAAE,MAHR;AAIP,MAAA,UAAU,EAAE,SAAS,IAAI,EAJlB;AAKP,MAAA,KAAK,EAAE,SALA;AAMP,MAAA,OAAO,EAAE;AACP,QAAA,OAAO,EAAE,SADF;AAEP,QAAA,KAAK,EACH,KAAK,KACJ,SAAS,GACN,UAAC,KAAD,EAAM;AACJ,cAAM,KAAK,GAAG,IAAI,CAAC,GAAL,CAAS,UAAC,GAAD,EAAI;AAAK,mBAAA,GAAG,CAAH,SAAG,CAAH;AAAc,WAAhC,CAAd;AACA,cAAM,GAAG,GAAG,IAAI,CAAC,GAAL,CAAQ,KAAR,CAAA,IAAA,EAAY,KAAZ,CAAZ;AACA,cAAM,GAAG,GAAG,IAAI,CAAC,GAAL,CAAQ,KAAR,CAAA,IAAA,EAAY,KAAZ,CAAZ;AACA,iBAAO,CAAC,KAAD,EAAQ,CAAC,GAAG,CAAC,KAAD,EAAQ,SAAR,CAAH,GAAwB,GAAzB,KAAiC,GAAG,GAAG,GAAvC,CAAR,EAAqD,gBAArD,CAAP;AACD,SANK,GAON,YAAA;AAAM,iBAAA,CAAC,KAAD,EAAQ,CAAR,EAAA,gBAAA,CAAA;AAA4B,SARjC,CAHA;AAYP,QAAA,KAAK,EAAE,KAAK,IAAK,UAAU,IAAI,KAAK,CAAC,QAAN,GAAiB,cAAjB,CAAgC,IAAhC,CAAqC,GAArC,CAZxB;AAaP,QAAA,KAAK,EAAE;AAbA;AANF;AADY,GAAb,CADG,CAAf;AA2BA,SAAO,MAAP;AACD;AAED;;;AAGG;;;AACH,SAAS,IAAT,CAAc,MAAd,EAA4C;;;AAClC,MAAA,OAAO,GAAK,MAAM,CAAX,OAAP;AACA,MAAA,KAAK,GAA4B,OAAO,CAAnC,KAAL;AAAA,MAAO,KAAK,GAAqB,OAAO,CAA5B,KAAZ;AAAA,MAAc,MAAM,GAAa,OAAO,CAApB,MAApB;AAAA,MAAsB,MAAM,GAAK,OAAO,CAAZ,MAA5B;AAER,SAAO,IAAI,CACT,KAAK,EAAA,EAAA,GAAA,EAAA,EACH,EAAA,CAAC,MAAD,CAAA,GAAU,KADP,EAEH,EAAA,CAAC,MAAD,CAAA,GAAU,KAFP,EAGH,EAHG,EADI,CAAJ,CAKL,MALK,CAAP;AAMD;AAED;;;AAGG;;;AACH,SAAS,IAAT,CAAc,MAAd,EAA4C;AAClC,MAAA,KAAK,GAAc,MAAM,CAApB,KAAL;AAAA,MAAO,OAAO,GAAK,MAAM,CAAX,OAAd;AACA,MAAA,KAAK,GAA4B,OAAO,CAAnC,KAAL;AAAA,MAAO,KAAK,GAAqB,OAAO,CAA5B,KAAZ;AAAA,MAAc,MAAM,GAAa,OAAO,CAApB,MAApB;AAAA,MAAsB,MAAM,GAAK,OAAO,CAAZ,MAA5B,CAFkC,CAI1C;;AACA,MAAI,KAAK,KAAK,KAAd,EAAqB;AACnB,IAAA,KAAK,CAAC,IAAN,CAAW,MAAX,EAAmB,KAAnB;AACD,GAFD,MAEO;AACL,IAAA,KAAK,CAAC,IAAN,CAAW,MAAX,EAAmB,KAAnB;AACD;;AAED,MAAI,KAAK,KAAK,KAAd,EAAqB;AACnB,IAAA,KAAK,CAAC,IAAN,CAAW,MAAX,EAAmB,KAAnB;AACD,GAFD,MAEO;AACL,IAAA,KAAK,CAAC,IAAN,CAAW,MAAX,EAAmB,KAAnB;AACD;;AAED,SAAO,MAAP;AACD;AAED;;;AAGG;;;AACH,SAAS,MAAT,CAAgB,MAAhB,EAA8C;AACpC,MAAA,KAAK,GAAc,MAAM,CAApB,KAAL;AAAA,MAAO,OAAO,GAAK,MAAM,CAAX,OAAd;AACA,MAAA,MAAM,GAAwC,OAAO,CAA/C,MAAN;AAAA,MAAQ,UAAU,GAA4B,OAAO,CAAnC,UAAlB;AAAA,MAAoB,SAAS,GAAiB,OAAO,CAAxB,SAA7B;AAAA,MAA+B,UAAU,GAAK,OAAO,CAAZ,UAAzC;AAER;;AACA,MAAM,UAAU,GAAG,MAAM,KAAK,KAA9B;;AAEA,MAAI,UAAJ,EAAgB;AACd,IAAA,KAAK,CAAC,MAAN,CAAa,UAAb,EAAyB,UAAU,GAAG,MAAH,GAAY,KAA/C;AACD,GAT2C,CAW5C;;;AACA,MAAI,SAAJ,EAAe;AACb,IAAA,KAAK,CAAC,MAAN,CAAa,SAAb,EAAwB,UAAU,KAAK,SAAf,GAA2B,MAA3B,GAAoC,UAA5D;AACD;AAED;;;AACA,MAAI,CAAC,UAAD,IAAe,CAAC,UAApB,EAAgC;AAC9B,IAAA,KAAK,CAAC,MAAN,CAAa,KAAb;AACD;;AAED,SAAO,MAAP;AACD;AAED;;;;AAIG;;;AACH,SAAS,KAAT,CAAe,MAAf,EAA6C;AACnC,MAAA,KAAK,GAAc,MAAM,CAApB,KAAL;AAAA,MAAO,OAAO,GAAK,MAAM,CAAX,OAAd;AACA,MAAA,KAAK,GAAuB,OAAO,CAA9B,KAAL;AAAA,MAAO,UAAU,GAAW,OAAO,CAAlB,UAAjB;AAAA,MAAmB,IAAI,GAAK,OAAO,CAAZ,IAAvB;AAER,MAAM,QAAQ,GAAG,YAAY,CAAC,KAAD,EAAQ,IAAI,KAAK,SAAT,GAAqB,SAArB,GAAiC,SAAzC,CAA7B;;AAEA,MAAI,CAAC,KAAL,EAAY;AACV,IAAA,QAAQ,CAAC,KAAT,CAAe,KAAf;AACD,GAFD,MAEO,IAAI,UAAJ,EAAgB;AACb,QAAA,QAAQ,GAAa,KAAK,CAAlB,QAAR;AAAA,QAAa,GAAG,GAAA,MAAA,CAAK,KAAL,EAAlB,CAAA,UAAA,CAAkB,CAAhB;;AACR,IAAA,QAAQ,CAAC,KAAT,CAAe;AACb,MAAA,MAAM,EAAE,CAAC,UAAD,CADK;AAEb,MAAA,QAAQ,EAAA,QAFK;AAGb,MAAA,GAAG,EAAE,cAAc,CAAC,GAAD;AAHN,KAAf;AAKD;;AAED,SAAO,MAAP;AACD;AAED;;;AAGG;;;AACH,SAAS,UAAT,CAAoB,MAApB,EAAkD;AACxC,MAAA,KAAK,GAAc,MAAM,CAApB,KAAL;AAAA,MAAO,OAAO,GAAK,MAAM,CAAX,OAAd;AACA,MAAA,UAAU,GAAc,OAAO,CAArB,UAAV;AAAA,MAAY,OAAO,GAAK,OAAO,CAAZ,OAAnB;;AAER,MAAI,UAAJ,EAAgB;AACd,IAAA,KAAK,CAAC,UAAN,CAAiB;AACf,MAAA,IAAI,EAAE,UAAU,CAAC,IAAX,IAAmB,MADV;AAEf,MAAA,GAAG,EAAE,UAAU,CAAC;AAFD,KAAjB;AAID;;AAED,MAAI,OAAJ,EAAa;AACX,IAAA,KAAK,CAAC,UAAN,GAAmB,OAAnB,CAA2B,OAA3B;AACD;;AAED,SAAO,MAAP;AACD;AAED;;;;AAIG;;;AACH,OAAM,SAAU,OAAV,CAAkB,MAAlB,EAAgD;AACpD;AACA,SAAO,IAAI,CACT,KADS,EAET,OAAO,CAAC,cAAD,CAFE,EAGT,IAHS,EAIT,UAJS,EAKT,QALS,EAMT,IANS,EAOT,MAPS,EAQT,OARS,EAST,KATS,EAUT,UAAU,EAVD,EAWT,WAXS,EAYT,SAZS,EAaT,KAbS,CAAJ,CAcL,MAdK,CAAP;AAeD","sourcesContent":["import { get } from '@antv/util';\nimport { Params } from '../../core/adaptor';\nimport { deepAssign, findGeometry } from '../../utils';\nimport { flow, transformLabel } from '../../utils';\nimport { tooltip, interaction, animation, theme, scale, annotation, state, pattern } from '../../adaptor/common';\nimport { geometry as geometryAdaptor } from '../../adaptor/geometries/base';\nimport { getTooltipMapping } from '../../utils/tooltip';\nimport { HeatmapOptions } from './types';\n\nfunction geometry(params: Params<HeatmapOptions>): Params<HeatmapOptions> {\n  const { chart, options } = params;\n  const { data, type, xField, yField, colorField, sizeField, sizeRatio, shape, color, tooltip, heatmapStyle } = options;\n\n  chart.data(data);\n  let geometryType = 'polygon';\n  if (type === 'density') {\n    geometryType = 'heatmap';\n  }\n\n  const { fields, formatter } = getTooltipMapping(tooltip, [xField, yField, colorField]);\n\n  /**\n   * The ratio between the actual size and the max available size, must be in range `[0,1]`.\n   *\n   * If the `sizeRatio` attribute is undefined or it exceeds the range,\n   * `checkedSizeRatio` would be set to 1 as default.\n   */\n  let checkedSizeRatio = 1;\n  if (sizeRatio || sizeRatio === 0) {\n    if (!shape && !sizeField) {\n      console.warn('sizeRatio is not in effect: Must define shape or sizeField first');\n    } else if (sizeRatio < 0 || sizeRatio > 1) {\n      console.warn('sizeRatio is not in effect: It must be a number in [0,1]');\n    } else {\n      checkedSizeRatio = sizeRatio;\n    }\n  }\n\n  geometryAdaptor(\n    deepAssign({}, params, {\n      options: {\n        type: geometryType,\n        colorField,\n        tooltipFields: fields,\n        shapeField: sizeField || '',\n        label: undefined,\n        mapping: {\n          tooltip: formatter,\n          shape:\n            shape &&\n            (sizeField\n              ? (dautm) => {\n                  const field = data.map((row) => row[sizeField]);\n                  const min = Math.min(...field);\n                  const max = Math.max(...field);\n                  return [shape, (get(dautm, sizeField) - min) / (max - min), checkedSizeRatio];\n                }\n              : () => [shape, 1, checkedSizeRatio]),\n          color: color || (colorField && chart.getTheme().sequenceColors.join('-')),\n          style: heatmapStyle,\n        },\n      },\n    })\n  );\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params: Params<HeatmapOptions>): Params<HeatmapOptions> {\n  const { options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  return flow(\n    scale({\n      [xField]: xAxis,\n      [yField]: yAxis,\n    })\n  )(params);\n}\n\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params: Params<HeatmapOptions>): Params<HeatmapOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  // 为 false 则是不显示轴\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(yField, false);\n  } else {\n    chart.axis(yField, yAxis);\n  }\n\n  return params;\n}\n\n/**\n * legend 配置\n * @param params\n */\nfunction legend(params: Params<HeatmapOptions>): Params<HeatmapOptions> {\n  const { chart, options } = params;\n  const { legend, colorField, sizeField, sizeLegend } = options;\n\n  /** legend 不为 false, 则展示图例, 优先展示 color 分类图例 */\n  const showLegend = legend !== false;\n\n  if (colorField) {\n    chart.legend(colorField, showLegend ? legend : false);\n  }\n\n  // 旧版本: 有 sizeField 就有 sizeLegend. 这里默认继承下 legend 配置\n  if (sizeField) {\n    chart.legend(sizeField, sizeLegend === undefined ? legend : sizeLegend);\n  }\n\n  /** 默认没有 sizeField，则隐藏连续图例 */\n  if (!showLegend && !sizeLegend) {\n    chart.legend(false);\n  }\n\n  return params;\n}\n\n/**\n * fixme 后续确认下，数据标签的逻辑为啥和通用的不一致\n * 数据标签\n * @param params\n */\nfunction label(params: Params<HeatmapOptions>): Params<HeatmapOptions> {\n  const { chart, options } = params;\n  const { label, colorField, type } = options;\n\n  const geometry = findGeometry(chart, type === 'density' ? 'heatmap' : 'polygon');\n\n  if (!label) {\n    geometry.label(false);\n  } else if (colorField) {\n    const { callback, ...cfg } = label;\n    geometry.label({\n      fields: [colorField],\n      callback,\n      cfg: transformLabel(cfg),\n    });\n  }\n\n  return params;\n}\n\n/**\n * 极坐标\n * @param params\n */\nfunction coordinate(params: Params<HeatmapOptions>): Params<HeatmapOptions> {\n  const { chart, options } = params;\n  const { coordinate, reflect } = options;\n\n  if (coordinate) {\n    chart.coordinate({\n      type: coordinate.type || 'rect',\n      cfg: coordinate.cfg,\n    });\n  }\n\n  if (reflect) {\n    chart.coordinate().reflect(reflect);\n  }\n\n  return params;\n}\n\n/**\n * 热力图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<HeatmapOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(\n    theme,\n    pattern('heatmapStyle'),\n    meta,\n    coordinate,\n    geometry,\n    axis,\n    legend,\n    tooltip,\n    label,\n    annotation(),\n    interaction,\n    animation,\n    state\n  )(params);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}