{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { useRef, useEffect } from 'react';\nimport { isObject, isString, isEqual } from '@antv/util';\nimport { getGraphSize, processMinimap, getCommonConfig, getArrowCfg, getMarkerPosition, setTag, getLevelData } from '../../graphs/utils';\nimport { deepClone } from '../../util';\nexport default function useGraph(graphInstance, config, container) {\n  var graphHook = useRef();\n  var data = config.data,\n      width = config.width,\n      height = config.height,\n      layout = config.layout,\n      minimapCfg = config.minimapCfg,\n      behaviors = config.behaviors,\n      fitCenter = config.fitCenter,\n      nodeCfg = config.nodeCfg,\n      edgeCfg = config.edgeCfg,\n      markerCfg = config.markerCfg,\n      level = config.level;\n  var graphOptions = useRef(); // data 单独处理，会被 G6 修改\n\n  var graphData = useRef();\n  /** 隐藏孤立边 */\n\n  var setEdgesState = function (edges) {\n    edges.forEach(function (edge) {\n      var _a, _b;\n\n      var _c = edge.getModel(),\n          source = _c.source,\n          target = _c.target;\n\n      var sourceVisible = (_a = graphInstance === null || graphInstance === void 0 ? void 0 : graphInstance.findById(source)) === null || _a === void 0 ? void 0 : _a.get('visible');\n      var targetVisible = (_b = graphInstance === null || graphInstance === void 0 ? void 0 : graphInstance.findById(target)) === null || _b === void 0 ? void 0 : _b.get('visible');\n\n      if (sourceVisible === false || targetVisible === false) {\n        edge.changeVisibility(false);\n      }\n    });\n  };\n\n  var changeData = function () {\n    var _a;\n\n    if (!graphInstance) {\n      return;\n    }\n\n    var currentData = data;\n\n    if (level) {\n      currentData = setTag(data);\n    }\n\n    graphInstance.changeData(level ? getLevelData(currentData, level) : data);\n    (_a = graphInstance.get('eventData')) === null || _a === void 0 ? void 0 : _a.setData(currentData);\n    setEdgesState(graphInstance.getEdges());\n\n    if (fitCenter) {\n      graphInstance.fitCenter();\n    }\n  };\n\n  var updateLayout = function () {\n    graphInstance === null || graphInstance === void 0 ? void 0 : graphInstance.updateLayout(layout);\n\n    if (fitCenter) {\n      graphInstance === null || graphInstance === void 0 ? void 0 : graphInstance.fitCenter();\n    }\n  };\n\n  var updateNodes = function () {\n    if (!graphInstance) {\n      return;\n    }\n\n    var _a = nodeCfg !== null && nodeCfg !== void 0 ? nodeCfg : {},\n        nodeType = _a.type,\n        nodeAnchorPoints = _a.anchorPoints,\n        nodeStyle = _a.style,\n        nodeLabelCfg = _a.title;\n\n    graphInstance.getNodes().forEach(function (node) {\n      graphInstance.updateItem(node, {\n        nodeCfg: nodeCfg,\n        markerCfg: markerCfg,\n        type: nodeType,\n        style: nodeStyle,\n        anchorPoints: nodeAnchorPoints,\n        labelCfg: nodeLabelCfg\n      });\n    });\n  };\n\n  var updateEdges = function () {\n    if (!graphInstance) {\n      return;\n    }\n\n    var _a = edgeCfg !== null && edgeCfg !== void 0 ? edgeCfg : {},\n        edgeType = _a.type,\n        edgeStyle = _a.style,\n        startArrowCfg = _a.startArrow,\n        endArrowCfg = _a.endArrow,\n        labelCfg = _a.label;\n\n    graphInstance.getEdges().forEach(function (edge) {\n      // 资金流向图\n      if (edgeType === 'fund-line') {\n        graphInstance.updateItem(edge, {\n          edgeCfg: edgeCfg\n        });\n      } else {\n        var edgeCfgModel = edge.getModel();\n        var startArrow = getArrowCfg(startArrowCfg, edgeCfgModel);\n        var endArrow = getArrowCfg(endArrowCfg, edgeCfgModel);\n\n        var _a = labelCfg !== null && labelCfg !== void 0 ? labelCfg : {},\n            style = _a.style,\n            content = _a.content;\n\n        graphInstance.updateItem(edge, {\n          type: edgeType,\n          label: getCommonConfig(content, edgeCfgModel, graphInstance),\n          labelCfg: {\n            style: getCommonConfig(style, edgeCfgModel, graphInstance)\n          },\n          style: __assign({\n            stroke: '#ccc',\n            startArrow: startArrow,\n            endArrow: endArrow\n          }, typeof edgeStyle === 'function' ? edgeStyle(edgeCfgModel, graphInstance) : edgeStyle)\n        });\n      }\n    });\n  }; // 目前仅支持更新位置\n\n\n  var updateMarker = function () {\n    if (!graphInstance) {\n      return;\n    }\n\n    graphInstance.getNodes().forEach(function (node) {\n      var _a = (typeof markerCfg === 'function' ? markerCfg(node.getModel(), node.get('group')) : markerCfg).position,\n          position = _a === void 0 ? 'right' : _a;\n\n      var _b = node.getBBox(),\n          width = _b.width,\n          height = _b.height;\n\n      var markerShape = node.get('group').get('children').find(function (item) {\n        return item.get('name') === 'collapse-icon';\n      });\n\n      if (markerShape) {\n        markerShape === null || markerShape === void 0 ? void 0 : markerShape.attr(__assign({}, getMarkerPosition(position, [width, height])));\n      }\n    });\n  };\n\n  useEffect(function () {\n    if (graphInstance && !graphInstance.destroyed) {\n      if (isEqual(data, graphData.current)) {\n        return;\n      }\n\n      graphData.current = deepClone(data);\n      changeData();\n    }\n  }, [data]);\n  useEffect(function () {\n    var _a, _b, _c, _d, _e;\n\n    if (graphInstance && !graphInstance.destroyed) {\n      if (isEqual(config, graphOptions.current)) {\n        return;\n      }\n\n      if (!isEqual(layout, (_a = graphOptions.current) === null || _a === void 0 ? void 0 : _a.layout)) {\n        updateLayout();\n      }\n\n      if (!isEqual(minimapCfg, (_b = graphOptions.current) === null || _b === void 0 ? void 0 : _b.minimapCfg)) {\n        processMinimap(minimapCfg, graphInstance);\n      }\n\n      if (!isEqual(nodeCfg, (_c = graphOptions.current) === null || _c === void 0 ? void 0 : _c.nodeCfg)) {\n        updateNodes();\n      }\n\n      if (!isEqual(edgeCfg, (_d = graphOptions.current) === null || _d === void 0 ? void 0 : _d.edgeCfg)) {\n        updateEdges();\n      }\n\n      if (!isEqual(markerCfg, (_e = graphOptions.current) === null || _e === void 0 ? void 0 : _e.markerCfg)) {\n        updateMarker();\n      }\n\n      graphOptions.current = config;\n    }\n  }, [config]);\n  useEffect(function () {\n    if (graphInstance && !graphInstance.destroyed) {\n      var graphSize = getGraphSize(width, height, container);\n      graphInstance.changeSize(graphSize[0], graphSize[1]);\n    }\n  }, [container, width, height]);\n  useEffect(function () {\n    if (graphInstance && !graphInstance.destroyed) {\n      var defaultMode = graphInstance.get('modes').default;\n      var removingBehaviors_1 = [];\n      defaultMode.forEach(function (be) {\n        if (isObject(be)) {\n          removingBehaviors_1.push(be.type);\n        } else if (isString(be)) {\n          removingBehaviors_1.push(be);\n        }\n      });\n      graphInstance.removeBehaviors(removingBehaviors_1, 'default');\n      graphInstance.addBehaviors(behaviors, 'default');\n    }\n  }, [behaviors]);\n  useEffect(function () {\n    graphHook.current = graphInstance;\n    return function () {\n      if (graphInstance && !graphInstance.destroyed) {\n        graphInstance.destroy();\n        graphInstance = undefined;\n      }\n    };\n  }, []);\n  return {\n    graphHook: graphHook\n  };\n}","map":{"version":3,"sources":["C:/Users/Home/Desktop/cs-2005/node_modules/@ant-design/charts/es/obsolescent/hooks/useGraph.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","useRef","useEffect","isObject","isString","isEqual","getGraphSize","processMinimap","getCommonConfig","getArrowCfg","getMarkerPosition","setTag","getLevelData","deepClone","useGraph","graphInstance","config","container","graphHook","data","width","height","layout","minimapCfg","behaviors","fitCenter","nodeCfg","edgeCfg","markerCfg","level","graphOptions","graphData","setEdgesState","edges","forEach","edge","_a","_b","_c","getModel","source","target","sourceVisible","findById","get","targetVisible","changeVisibility","changeData","currentData","setData","getEdges","updateLayout","updateNodes","nodeType","type","nodeAnchorPoints","anchorPoints","nodeStyle","style","nodeLabelCfg","title","getNodes","node","updateItem","labelCfg","updateEdges","edgeType","edgeStyle","startArrowCfg","startArrow","endArrowCfg","endArrow","label","edgeCfgModel","content","stroke","updateMarker","position","getBBox","markerShape","find","item","attr","destroyed","current","_d","_e","graphSize","changeSize","defaultMode","default","removingBehaviors_1","be","push","removeBehaviors","addBehaviors","destroy","undefined"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,SAASO,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,OAA7B,QAA4C,YAA5C;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,eAAvC,EAAwDC,WAAxD,EAAqEC,iBAArE,EAAwFC,MAAxF,EAAgGC,YAAhG,QAAqH,oBAArH;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,eAAe,SAASC,QAAT,CAAkBC,aAAlB,EAAiCC,MAAjC,EAAyCC,SAAzC,EAAoD;AAC/D,MAAIC,SAAS,GAAGjB,MAAM,EAAtB;AACA,MAAIkB,IAAI,GAAGH,MAAM,CAACG,IAAlB;AAAA,MAAwBC,KAAK,GAAGJ,MAAM,CAACI,KAAvC;AAAA,MAA8CC,MAAM,GAAGL,MAAM,CAACK,MAA9D;AAAA,MAAsEC,MAAM,GAAGN,MAAM,CAACM,MAAtF;AAAA,MAA8FC,UAAU,GAAGP,MAAM,CAACO,UAAlH;AAAA,MAA8HC,SAAS,GAAGR,MAAM,CAACQ,SAAjJ;AAAA,MAA4JC,SAAS,GAAGT,MAAM,CAACS,SAA/K;AAAA,MAA0LC,OAAO,GAAGV,MAAM,CAACU,OAA3M;AAAA,MAAoNC,OAAO,GAAGX,MAAM,CAACW,OAArO;AAAA,MAA8OC,SAAS,GAAGZ,MAAM,CAACY,SAAjQ;AAAA,MAA4QC,KAAK,GAAGb,MAAM,CAACa,KAA3R;AACA,MAAIC,YAAY,GAAG7B,MAAM,EAAzB,CAH+D,CAI/D;;AACA,MAAI8B,SAAS,GAAG9B,MAAM,EAAtB;AACA;;AACA,MAAI+B,aAAa,GAAG,UAAUC,KAAV,EAAiB;AACjCA,IAAAA,KAAK,CAACC,OAAN,CAAc,UAAUC,IAAV,EAAgB;AAC1B,UAAIC,EAAJ,EAAQC,EAAR;;AACA,UAAIC,EAAE,GAAGH,IAAI,CAACI,QAAL,EAAT;AAAA,UAA0BC,MAAM,GAAGF,EAAE,CAACE,MAAtC;AAAA,UAA8CC,MAAM,GAAGH,EAAE,CAACG,MAA1D;;AACA,UAAIC,aAAa,GAAG,CAACN,EAAE,GAAGrB,aAAa,KAAK,IAAlB,IAA0BA,aAAa,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,aAAa,CAAC4B,QAAd,CAAuBH,MAAvB,CAApE,MAAwG,IAAxG,IAAgHJ,EAAE,KAAK,KAAK,CAA5H,GAAgI,KAAK,CAArI,GAAyIA,EAAE,CAACQ,GAAH,CAAO,SAAP,CAA7J;AACA,UAAIC,aAAa,GAAG,CAACR,EAAE,GAAGtB,aAAa,KAAK,IAAlB,IAA0BA,aAAa,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,aAAa,CAAC4B,QAAd,CAAuBF,MAAvB,CAApE,MAAwG,IAAxG,IAAgHJ,EAAE,KAAK,KAAK,CAA5H,GAAgI,KAAK,CAArI,GAAyIA,EAAE,CAACO,GAAH,CAAO,SAAP,CAA7J;;AACA,UAAIF,aAAa,KAAK,KAAlB,IAA2BG,aAAa,KAAK,KAAjD,EAAwD;AACpDV,QAAAA,IAAI,CAACW,gBAAL,CAAsB,KAAtB;AACH;AACJ,KARD;AASH,GAVD;;AAWA,MAAIC,UAAU,GAAG,YAAY;AACzB,QAAIX,EAAJ;;AACA,QAAI,CAACrB,aAAL,EAAoB;AAChB;AACH;;AACD,QAAIiC,WAAW,GAAG7B,IAAlB;;AACA,QAAIU,KAAJ,EAAW;AACPmB,MAAAA,WAAW,GAAGrC,MAAM,CAACQ,IAAD,CAApB;AACH;;AACDJ,IAAAA,aAAa,CAACgC,UAAd,CAAyBlB,KAAK,GAAGjB,YAAY,CAACoC,WAAD,EAAcnB,KAAd,CAAf,GAAsCV,IAApE;AACA,KAACiB,EAAE,GAAGrB,aAAa,CAAC6B,GAAd,CAAkB,WAAlB,CAAN,MAA0C,IAA1C,IAAkDR,EAAE,KAAK,KAAK,CAA9D,GAAkE,KAAK,CAAvE,GAA2EA,EAAE,CAACa,OAAH,CAAWD,WAAX,CAA3E;AACAhB,IAAAA,aAAa,CAACjB,aAAa,CAACmC,QAAd,EAAD,CAAb;;AACA,QAAIzB,SAAJ,EAAe;AACXV,MAAAA,aAAa,CAACU,SAAd;AACH;AACJ,GAfD;;AAgBA,MAAI0B,YAAY,GAAG,YAAY;AAC3BpC,IAAAA,aAAa,KAAK,IAAlB,IAA0BA,aAAa,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,aAAa,CAACoC,YAAd,CAA2B7B,MAA3B,CAA9D;;AACA,QAAIG,SAAJ,EAAe;AACXV,MAAAA,aAAa,KAAK,IAAlB,IAA0BA,aAAa,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,aAAa,CAACU,SAAd,EAA9D;AACH;AACJ,GALD;;AAMA,MAAI2B,WAAW,GAAG,YAAY;AAC1B,QAAI,CAACrC,aAAL,EAAoB;AAChB;AACH;;AACD,QAAIqB,EAAE,GAAGV,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyCA,OAAzC,GAAmD,EAA5D;AAAA,QAAgE2B,QAAQ,GAAGjB,EAAE,CAACkB,IAA9E;AAAA,QAAoFC,gBAAgB,GAAGnB,EAAE,CAACoB,YAA1G;AAAA,QAAwHC,SAAS,GAAGrB,EAAE,CAACsB,KAAvI;AAAA,QAA8IC,YAAY,GAAGvB,EAAE,CAACwB,KAAhK;;AACA7C,IAAAA,aAAa,CAAC8C,QAAd,GAAyB3B,OAAzB,CAAiC,UAAU4B,IAAV,EAAgB;AAC7C/C,MAAAA,aAAa,CAACgD,UAAd,CAAyBD,IAAzB,EAA+B;AAC3BpC,QAAAA,OAAO,EAAEA,OADkB;AAE3BE,QAAAA,SAAS,EAAEA,SAFgB;AAG3B0B,QAAAA,IAAI,EAAED,QAHqB;AAI3BK,QAAAA,KAAK,EAAED,SAJoB;AAK3BD,QAAAA,YAAY,EAAED,gBALa;AAM3BS,QAAAA,QAAQ,EAAEL;AANiB,OAA/B;AAQH,KATD;AAUH,GAfD;;AAgBA,MAAIM,WAAW,GAAG,YAAY;AAC1B,QAAI,CAAClD,aAAL,EAAoB;AAChB;AACH;;AACD,QAAIqB,EAAE,GAAGT,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyCA,OAAzC,GAAmD,EAA5D;AAAA,QAAgEuC,QAAQ,GAAG9B,EAAE,CAACkB,IAA9E;AAAA,QAAoFa,SAAS,GAAG/B,EAAE,CAACsB,KAAnG;AAAA,QAA0GU,aAAa,GAAGhC,EAAE,CAACiC,UAA7H;AAAA,QAAyIC,WAAW,GAAGlC,EAAE,CAACmC,QAA1J;AAAA,QAAoKP,QAAQ,GAAG5B,EAAE,CAACoC,KAAlL;;AACAzD,IAAAA,aAAa,CAACmC,QAAd,GAAyBhB,OAAzB,CAAiC,UAAUC,IAAV,EAAgB;AAC7C;AACA,UAAI+B,QAAQ,KAAK,WAAjB,EAA8B;AAC1BnD,QAAAA,aAAa,CAACgD,UAAd,CAAyB5B,IAAzB,EAA+B;AAC3BR,UAAAA,OAAO,EAAEA;AADkB,SAA/B;AAGH,OAJD,MAKK;AACD,YAAI8C,YAAY,GAAGtC,IAAI,CAACI,QAAL,EAAnB;AACA,YAAI8B,UAAU,GAAG5D,WAAW,CAAC2D,aAAD,EAAgBK,YAAhB,CAA5B;AACA,YAAIF,QAAQ,GAAG9D,WAAW,CAAC6D,WAAD,EAAcG,YAAd,CAA1B;;AACA,YAAIrC,EAAE,GAAG4B,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2CA,QAA3C,GAAsD,EAA/D;AAAA,YAAmEN,KAAK,GAAGtB,EAAE,CAACsB,KAA9E;AAAA,YAAqFgB,OAAO,GAAGtC,EAAE,CAACsC,OAAlG;;AACA3D,QAAAA,aAAa,CAACgD,UAAd,CAAyB5B,IAAzB,EAA+B;AAC3BmB,UAAAA,IAAI,EAAEY,QADqB;AAE3BM,UAAAA,KAAK,EAAEhE,eAAe,CAACkE,OAAD,EAAUD,YAAV,EAAwB1D,aAAxB,CAFK;AAG3BiD,UAAAA,QAAQ,EAAE;AACNN,YAAAA,KAAK,EAAElD,eAAe,CAACkD,KAAD,EAAQe,YAAR,EAAsB1D,aAAtB;AADhB,WAHiB;AAM3B2C,UAAAA,KAAK,EAAEvE,QAAQ,CAAC;AAAEwF,YAAAA,MAAM,EAAE,MAAV;AAAkBN,YAAAA,UAAU,EAAEA,UAA9B;AAA0CE,YAAAA,QAAQ,EAAEA;AAApD,WAAD,EAAkE,OAAOJ,SAAP,KAAqB,UAArB,GAC3EA,SAAS,CAACM,YAAD,EAAe1D,aAAf,CADkE,GAE3EoD,SAFS;AANY,SAA/B;AAUH;AACJ,KAvBD;AAwBH,GA7BD,CAxD+D,CAsF/D;;;AACA,MAAIS,YAAY,GAAG,YAAY;AAC3B,QAAI,CAAC7D,aAAL,EAAoB;AAChB;AACH;;AACDA,IAAAA,aAAa,CAAC8C,QAAd,GAAyB3B,OAAzB,CAAiC,UAAU4B,IAAV,EAAgB;AAC7C,UAAI1B,EAAE,GAAG,CAAC,OAAOR,SAAP,KAAqB,UAArB,GAAkCA,SAAS,CAACkC,IAAI,CAACvB,QAAL,EAAD,EAAkBuB,IAAI,CAAClB,GAAL,CAAS,OAAT,CAAlB,CAA3C,GAAkFhB,SAAnF,EAA8FiD,QAAvG;AAAA,UAAiHA,QAAQ,GAAGzC,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAAtJ;;AACA,UAAIC,EAAE,GAAGyB,IAAI,CAACgB,OAAL,EAAT;AAAA,UAAyB1D,KAAK,GAAGiB,EAAE,CAACjB,KAApC;AAAA,UAA2CC,MAAM,GAAGgB,EAAE,CAAChB,MAAvD;;AACA,UAAI0D,WAAW,GAAGjB,IAAI,CACjBlB,GADa,CACT,OADS,EAEbA,GAFa,CAET,UAFS,EAGboC,IAHa,CAGR,UAAUC,IAAV,EAAgB;AAAE,eAAOA,IAAI,CAACrC,GAAL,CAAS,MAAT,MAAqB,eAA5B;AAA8C,OAHxD,CAAlB;;AAIA,UAAImC,WAAJ,EAAiB;AACbA,QAAAA,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,WAAW,CAACG,IAAZ,CAAiB/F,QAAQ,CAAC,EAAD,EAAKuB,iBAAiB,CAACmE,QAAD,EAAW,CAACzD,KAAD,EAAQC,MAAR,CAAX,CAAtB,CAAzB,CAA1D;AACH;AACJ,KAVD;AAWH,GAfD;;AAgBAnB,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIa,aAAa,IAAI,CAACA,aAAa,CAACoE,SAApC,EAA+C;AAC3C,UAAI9E,OAAO,CAACc,IAAD,EAAOY,SAAS,CAACqD,OAAjB,CAAX,EAAsC;AAClC;AACH;;AACDrD,MAAAA,SAAS,CAACqD,OAAV,GAAoBvE,SAAS,CAACM,IAAD,CAA7B;AACA4B,MAAAA,UAAU;AACb;AACJ,GARQ,EAQN,CAAC5B,IAAD,CARM,CAAT;AASAjB,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIkC,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgB+C,EAAhB,EAAoBC,EAApB;;AACA,QAAIvE,aAAa,IAAI,CAACA,aAAa,CAACoE,SAApC,EAA+C;AAC3C,UAAI9E,OAAO,CAACW,MAAD,EAASc,YAAY,CAACsD,OAAtB,CAAX,EAA2C;AACvC;AACH;;AACD,UAAI,CAAC/E,OAAO,CAACiB,MAAD,EAAS,CAACc,EAAE,GAAGN,YAAY,CAACsD,OAAnB,MAAgC,IAAhC,IAAwChD,EAAE,KAAK,KAAK,CAApD,GAAwD,KAAK,CAA7D,GAAiEA,EAAE,CAACd,MAA7E,CAAZ,EAAkG;AAC9F6B,QAAAA,YAAY;AACf;;AACD,UAAI,CAAC9C,OAAO,CAACkB,UAAD,EAAa,CAACc,EAAE,GAAGP,YAAY,CAACsD,OAAnB,MAAgC,IAAhC,IAAwC/C,EAAE,KAAK,KAAK,CAApD,GAAwD,KAAK,CAA7D,GAAiEA,EAAE,CAACd,UAAjF,CAAZ,EAA0G;AACtGhB,QAAAA,cAAc,CAACgB,UAAD,EAAaR,aAAb,CAAd;AACH;;AACD,UAAI,CAACV,OAAO,CAACqB,OAAD,EAAU,CAACY,EAAE,GAAGR,YAAY,CAACsD,OAAnB,MAAgC,IAAhC,IAAwC9C,EAAE,KAAK,KAAK,CAApD,GAAwD,KAAK,CAA7D,GAAiEA,EAAE,CAACZ,OAA9E,CAAZ,EAAoG;AAChG0B,QAAAA,WAAW;AACd;;AACD,UAAI,CAAC/C,OAAO,CAACsB,OAAD,EAAU,CAAC0D,EAAE,GAAGvD,YAAY,CAACsD,OAAnB,MAAgC,IAAhC,IAAwCC,EAAE,KAAK,KAAK,CAApD,GAAwD,KAAK,CAA7D,GAAiEA,EAAE,CAAC1D,OAA9E,CAAZ,EAAoG;AAChGsC,QAAAA,WAAW;AACd;;AACD,UAAI,CAAC5D,OAAO,CAACuB,SAAD,EAAY,CAAC0D,EAAE,GAAGxD,YAAY,CAACsD,OAAnB,MAAgC,IAAhC,IAAwCE,EAAE,KAAK,KAAK,CAApD,GAAwD,KAAK,CAA7D,GAAiEA,EAAE,CAAC1D,SAAhF,CAAZ,EAAwG;AACpGgD,QAAAA,YAAY;AACf;;AACD9C,MAAAA,YAAY,CAACsD,OAAb,GAAuBpE,MAAvB;AACH;AACJ,GAvBQ,EAuBN,CAACA,MAAD,CAvBM,CAAT;AAwBAd,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIa,aAAa,IAAI,CAACA,aAAa,CAACoE,SAApC,EAA+C;AAC3C,UAAII,SAAS,GAAGjF,YAAY,CAACc,KAAD,EAAQC,MAAR,EAAgBJ,SAAhB,CAA5B;AACAF,MAAAA,aAAa,CAACyE,UAAd,CAAyBD,SAAS,CAAC,CAAD,CAAlC,EAAuCA,SAAS,CAAC,CAAD,CAAhD;AACH;AACJ,GALQ,EAKN,CAACtE,SAAD,EAAYG,KAAZ,EAAmBC,MAAnB,CALM,CAAT;AAMAnB,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIa,aAAa,IAAI,CAACA,aAAa,CAACoE,SAApC,EAA+C;AAC3C,UAAIM,WAAW,GAAG1E,aAAa,CAAC6B,GAAd,CAAkB,OAAlB,EAA2B8C,OAA7C;AACA,UAAIC,mBAAmB,GAAG,EAA1B;AACAF,MAAAA,WAAW,CAACvD,OAAZ,CAAoB,UAAU0D,EAAV,EAAc;AAC9B,YAAIzF,QAAQ,CAACyF,EAAD,CAAZ,EAAkB;AACdD,UAAAA,mBAAmB,CAACE,IAApB,CAAyBD,EAAE,CAACtC,IAA5B;AACH,SAFD,MAGK,IAAIlD,QAAQ,CAACwF,EAAD,CAAZ,EAAkB;AACnBD,UAAAA,mBAAmB,CAACE,IAApB,CAAyBD,EAAzB;AACH;AACJ,OAPD;AAQA7E,MAAAA,aAAa,CAAC+E,eAAd,CAA8BH,mBAA9B,EAAmD,SAAnD;AACA5E,MAAAA,aAAa,CAACgF,YAAd,CAA2BvE,SAA3B,EAAsC,SAAtC;AACH;AACJ,GAfQ,EAeN,CAACA,SAAD,CAfM,CAAT;AAgBAtB,EAAAA,SAAS,CAAC,YAAY;AAClBgB,IAAAA,SAAS,CAACkE,OAAV,GAAoBrE,aAApB;AACA,WAAO,YAAY;AACf,UAAIA,aAAa,IAAI,CAACA,aAAa,CAACoE,SAApC,EAA+C;AAC3CpE,QAAAA,aAAa,CAACiF,OAAd;AACAjF,QAAAA,aAAa,GAAGkF,SAAhB;AACH;AACJ,KALD;AAMH,GARQ,EAQN,EARM,CAAT;AASA,SAAO;AACH/E,IAAAA,SAAS,EAAEA;AADR,GAAP;AAGH","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { useRef, useEffect } from 'react';\nimport { isObject, isString, isEqual } from '@antv/util';\nimport { getGraphSize, processMinimap, getCommonConfig, getArrowCfg, getMarkerPosition, setTag, getLevelData, } from '../../graphs/utils';\nimport { deepClone } from '../../util';\nexport default function useGraph(graphInstance, config, container) {\n    var graphHook = useRef();\n    var data = config.data, width = config.width, height = config.height, layout = config.layout, minimapCfg = config.minimapCfg, behaviors = config.behaviors, fitCenter = config.fitCenter, nodeCfg = config.nodeCfg, edgeCfg = config.edgeCfg, markerCfg = config.markerCfg, level = config.level;\n    var graphOptions = useRef();\n    // data 单独处理，会被 G6 修改\n    var graphData = useRef();\n    /** 隐藏孤立边 */\n    var setEdgesState = function (edges) {\n        edges.forEach(function (edge) {\n            var _a, _b;\n            var _c = edge.getModel(), source = _c.source, target = _c.target;\n            var sourceVisible = (_a = graphInstance === null || graphInstance === void 0 ? void 0 : graphInstance.findById(source)) === null || _a === void 0 ? void 0 : _a.get('visible');\n            var targetVisible = (_b = graphInstance === null || graphInstance === void 0 ? void 0 : graphInstance.findById(target)) === null || _b === void 0 ? void 0 : _b.get('visible');\n            if (sourceVisible === false || targetVisible === false) {\n                edge.changeVisibility(false);\n            }\n        });\n    };\n    var changeData = function () {\n        var _a;\n        if (!graphInstance) {\n            return;\n        }\n        var currentData = data;\n        if (level) {\n            currentData = setTag(data);\n        }\n        graphInstance.changeData(level ? getLevelData(currentData, level) : data);\n        (_a = graphInstance.get('eventData')) === null || _a === void 0 ? void 0 : _a.setData(currentData);\n        setEdgesState(graphInstance.getEdges());\n        if (fitCenter) {\n            graphInstance.fitCenter();\n        }\n    };\n    var updateLayout = function () {\n        graphInstance === null || graphInstance === void 0 ? void 0 : graphInstance.updateLayout(layout);\n        if (fitCenter) {\n            graphInstance === null || graphInstance === void 0 ? void 0 : graphInstance.fitCenter();\n        }\n    };\n    var updateNodes = function () {\n        if (!graphInstance) {\n            return;\n        }\n        var _a = nodeCfg !== null && nodeCfg !== void 0 ? nodeCfg : {}, nodeType = _a.type, nodeAnchorPoints = _a.anchorPoints, nodeStyle = _a.style, nodeLabelCfg = _a.title;\n        graphInstance.getNodes().forEach(function (node) {\n            graphInstance.updateItem(node, {\n                nodeCfg: nodeCfg,\n                markerCfg: markerCfg,\n                type: nodeType,\n                style: nodeStyle,\n                anchorPoints: nodeAnchorPoints,\n                labelCfg: nodeLabelCfg,\n            });\n        });\n    };\n    var updateEdges = function () {\n        if (!graphInstance) {\n            return;\n        }\n        var _a = edgeCfg !== null && edgeCfg !== void 0 ? edgeCfg : {}, edgeType = _a.type, edgeStyle = _a.style, startArrowCfg = _a.startArrow, endArrowCfg = _a.endArrow, labelCfg = _a.label;\n        graphInstance.getEdges().forEach(function (edge) {\n            // 资金流向图\n            if (edgeType === 'fund-line') {\n                graphInstance.updateItem(edge, {\n                    edgeCfg: edgeCfg,\n                });\n            }\n            else {\n                var edgeCfgModel = edge.getModel();\n                var startArrow = getArrowCfg(startArrowCfg, edgeCfgModel);\n                var endArrow = getArrowCfg(endArrowCfg, edgeCfgModel);\n                var _a = labelCfg !== null && labelCfg !== void 0 ? labelCfg : {}, style = _a.style, content = _a.content;\n                graphInstance.updateItem(edge, {\n                    type: edgeType,\n                    label: getCommonConfig(content, edgeCfgModel, graphInstance),\n                    labelCfg: {\n                        style: getCommonConfig(style, edgeCfgModel, graphInstance),\n                    },\n                    style: __assign({ stroke: '#ccc', startArrow: startArrow, endArrow: endArrow }, (typeof edgeStyle === 'function'\n                        ? edgeStyle(edgeCfgModel, graphInstance)\n                        : edgeStyle)),\n                });\n            }\n        });\n    };\n    // 目前仅支持更新位置\n    var updateMarker = function () {\n        if (!graphInstance) {\n            return;\n        }\n        graphInstance.getNodes().forEach(function (node) {\n            var _a = (typeof markerCfg === 'function' ? markerCfg(node.getModel(), node.get('group')) : markerCfg).position, position = _a === void 0 ? 'right' : _a;\n            var _b = node.getBBox(), width = _b.width, height = _b.height;\n            var markerShape = node\n                .get('group')\n                .get('children')\n                .find(function (item) { return item.get('name') === 'collapse-icon'; });\n            if (markerShape) {\n                markerShape === null || markerShape === void 0 ? void 0 : markerShape.attr(__assign({}, getMarkerPosition(position, [width, height])));\n            }\n        });\n    };\n    useEffect(function () {\n        if (graphInstance && !graphInstance.destroyed) {\n            if (isEqual(data, graphData.current)) {\n                return;\n            }\n            graphData.current = deepClone(data);\n            changeData();\n        }\n    }, [data]);\n    useEffect(function () {\n        var _a, _b, _c, _d, _e;\n        if (graphInstance && !graphInstance.destroyed) {\n            if (isEqual(config, graphOptions.current)) {\n                return;\n            }\n            if (!isEqual(layout, (_a = graphOptions.current) === null || _a === void 0 ? void 0 : _a.layout)) {\n                updateLayout();\n            }\n            if (!isEqual(minimapCfg, (_b = graphOptions.current) === null || _b === void 0 ? void 0 : _b.minimapCfg)) {\n                processMinimap(minimapCfg, graphInstance);\n            }\n            if (!isEqual(nodeCfg, (_c = graphOptions.current) === null || _c === void 0 ? void 0 : _c.nodeCfg)) {\n                updateNodes();\n            }\n            if (!isEqual(edgeCfg, (_d = graphOptions.current) === null || _d === void 0 ? void 0 : _d.edgeCfg)) {\n                updateEdges();\n            }\n            if (!isEqual(markerCfg, (_e = graphOptions.current) === null || _e === void 0 ? void 0 : _e.markerCfg)) {\n                updateMarker();\n            }\n            graphOptions.current = config;\n        }\n    }, [config]);\n    useEffect(function () {\n        if (graphInstance && !graphInstance.destroyed) {\n            var graphSize = getGraphSize(width, height, container);\n            graphInstance.changeSize(graphSize[0], graphSize[1]);\n        }\n    }, [container, width, height]);\n    useEffect(function () {\n        if (graphInstance && !graphInstance.destroyed) {\n            var defaultMode = graphInstance.get('modes').default;\n            var removingBehaviors_1 = [];\n            defaultMode.forEach(function (be) {\n                if (isObject(be)) {\n                    removingBehaviors_1.push(be.type);\n                }\n                else if (isString(be)) {\n                    removingBehaviors_1.push(be);\n                }\n            });\n            graphInstance.removeBehaviors(removingBehaviors_1, 'default');\n            graphInstance.addBehaviors(behaviors, 'default');\n        }\n    }, [behaviors]);\n    useEffect(function () {\n        graphHook.current = graphInstance;\n        return function () {\n            if (graphInstance && !graphInstance.destroyed) {\n                graphInstance.destroy();\n                graphInstance = undefined;\n            }\n        };\n    }, []);\n    return {\n        graphHook: graphHook,\n    };\n}\n"]},"metadata":{},"sourceType":"module"}