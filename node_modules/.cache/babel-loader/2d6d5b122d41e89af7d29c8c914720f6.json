{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { adaptor } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constant';\n/**\n * 这个是一个图表开发的 模板代码！\n */\n\nvar Venn =\n/** @class */\nfunction (_super) {\n  __extends(Venn, _super);\n\n  function Venn() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n\n\n    _this.type = 'venn';\n    return _this;\n  }\n\n  Venn.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  /**\n   * 获取 韦恩图 默认配置\n   */\n\n\n  Venn.prototype.getDefaultOptions = function () {\n    return Venn.getDefaultOptions();\n  };\n  /**\n   * 获取适配器\n   */\n\n\n  Venn.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n  /**\n   * 覆写父类的方法\n   */\n\n\n  Venn.prototype.triggerResize = function () {\n    if (!this.chart.destroyed) {\n      // 首先自适应容器的宽高\n      this.chart.forceFit(); // g2 内部执行 changeSize，changeSize 中执行 render(true)\n\n      this.chart.clear();\n      this.execAdaptor(); // 核心：宽高更新之后计算布局\n      // 渲染\n\n      this.chart.render(true);\n    }\n  };\n\n  return Venn;\n}(Plot);\n\nexport { Venn };","map":{"version":3,"sources":["../../../src/plots/venn/index.ts"],"names":[],"mappings":";AAAA,SAAS,IAAT,QAAqB,iBAArB;AAGA,SAAS,OAAT,QAAwB,WAAxB;AACA,SAAS,eAAT,QAAgC,YAAhC;AAIA;;AAEG;;AACH,IAAA,IAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA0B,EAAA,SAAA,CAAA,IAAA,EAAA,MAAA,CAAA;;AAA1B,WAAA,IAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AACE;;;AACO,IAAA,KAAA,CAAA,IAAA,GAAe,MAAf;;AAiCR;;AA/BQ,EAAA,IAAA,CAAA,iBAAA,GAAP,YAAA;AACE,WAAO,eAAP;AACD,GAFM;AAIP;;AAEG;;;AACO,EAAA,IAAA,CAAA,SAAA,CAAA,iBAAA,GAAV,YAAA;AACE,WAAO,IAAI,CAAC,iBAAL,EAAP;AACD,GAFS;AAIV;;AAEG;;;AACO,EAAA,IAAA,CAAA,SAAA,CAAA,gBAAA,GAAV,YAAA;AACE,WAAO,OAAP;AACD,GAFS;AAIV;;AAEG;;;AACO,EAAA,IAAA,CAAA,SAAA,CAAA,aAAA,GAAV,YAAA;AACE,QAAI,CAAC,KAAK,KAAL,CAAW,SAAhB,EAA2B;AACzB;AACA,WAAK,KAAL,CAAW,QAAX,GAFyB,CAEF;;AACvB,WAAK,KAAL,CAAW,KAAX;AACA,WAAK,WAAL,GAJyB,CAIL;AACpB;;AACA,WAAK,KAAL,CAAW,MAAX,CAAkB,IAAlB;AACD;AACF,GATS;;AAUZ,SAAA,IAAA;AAAC,CAnCD,CAA0B,IAA1B,CAAA","sourcesContent":["import { Plot } from '../../core/plot';\nimport { Adaptor } from '../../core/adaptor';\nimport { VennOptions } from './types';\nimport { adaptor } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constant';\n\nexport type { VennOptions };\n\n/**\n * 这个是一个图表开发的 模板代码！\n */\nexport class Venn extends Plot<VennOptions> {\n  /** 图表类型 */\n  public type: string = 'venn';\n\n  static getDefaultOptions() {\n    return DEFAULT_OPTIONS;\n  }\n\n  /**\n   * 获取 韦恩图 默认配置\n   */\n  protected getDefaultOptions() {\n    return Venn.getDefaultOptions();\n  }\n\n  /**\n   * 获取适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<VennOptions> {\n    return adaptor;\n  }\n\n  /**\n   * 覆写父类的方法\n   */\n  protected triggerResize() {\n    if (!this.chart.destroyed) {\n      // 首先自适应容器的宽高\n      this.chart.forceFit(); // g2 内部执行 changeSize，changeSize 中执行 render(true)\n      this.chart.clear();\n      this.execAdaptor(); // 核心：宽高更新之后计算布局\n      // 渲染\n      this.chart.render(true);\n    }\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}