{"ast":null,"code":"import { theme, animation, annotation, tooltip, pattern } from '../../adaptor/common';\nimport { flow, deepAssign } from '../../utils';\nimport { interval } from '../../adaptor/geometries';\nimport { X_FIELD, Y_FIELD } from '../tiny-line/constants';\nimport { getTinyData } from '../tiny-line/utils';\nimport { meta } from '../tiny-area/adaptor';\nexport { meta };\n/**\n * 字段\n * @param params\n */\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var data = options.data,\n      color = options.color,\n      columnStyle = options.columnStyle,\n      columnWidthRatio = options.columnWidthRatio;\n  var seriesData = getTinyData(data);\n  chart.data(seriesData);\n  var p = deepAssign({}, params, {\n    options: {\n      xField: X_FIELD,\n      yField: Y_FIELD,\n      widthRatio: columnWidthRatio,\n      interval: {\n        style: columnStyle,\n        color: color\n      }\n    }\n  });\n  interval(p);\n  chart.axis(false);\n  chart.legend(false);\n  chart.interaction('element-active');\n  return params;\n}\n/**\n * 迷你柱形图适配器\n * @param chart\n * @param options\n */\n\n\nexport function adaptor(params) {\n  return flow(theme, pattern('columnStyle'), geometry, meta, tooltip, animation, annotation())(params);\n}","map":{"version":3,"sources":["../../../src/plots/tiny-column/adaptor.ts"],"names":[],"mappings":"AAAA,SAAS,KAAT,EAAgB,SAAhB,EAA2B,UAA3B,EAAuC,OAAvC,EAAgD,OAAhD,QAA+D,sBAA/D;AAEA,SAAS,IAAT,EAAe,UAAf,QAAiC,aAAjC;AACA,SAAS,QAAT,QAAyB,0BAAzB;AACA,SAAS,OAAT,EAAkB,OAAlB,QAAiC,wBAAjC;AACA,SAAS,WAAT,QAA4B,oBAA5B;AACA,SAAS,IAAT,QAAqB,sBAArB;AAGA,SAAS,IAAT;AAEA;;;AAGG;;AACH,SAAS,QAAT,CAAkB,MAAlB,EAAmD;AACzC,MAAA,KAAK,GAAc,MAAM,CAApB,KAAL;AAAA,MAAO,OAAO,GAAK,MAAM,CAAX,OAAd;AACA,MAAA,IAAI,GAA2C,OAAO,CAAlD,IAAJ;AAAA,MAAM,KAAK,GAAoC,OAAO,CAA3C,KAAX;AAAA,MAAa,WAAW,GAAuB,OAAO,CAA9B,WAAxB;AAAA,MAA0B,gBAAgB,GAAK,OAAO,CAAZ,gBAA1C;AAER,MAAM,UAAU,GAAG,WAAW,CAAC,IAAD,CAA9B;AAEA,EAAA,KAAK,CAAC,IAAN,CAAW,UAAX;AAEA,MAAM,CAAC,GAAG,UAAU,CAAC,EAAD,EAAK,MAAL,EAAa;AAC/B,IAAA,OAAO,EAAE;AACP,MAAA,MAAM,EAAE,OADD;AAEP,MAAA,MAAM,EAAE,OAFD;AAGP,MAAA,UAAU,EAAE,gBAHL;AAIP,MAAA,QAAQ,EAAE;AACR,QAAA,KAAK,EAAE,WADC;AAER,QAAA,KAAK,EAAA;AAFG;AAJH;AADsB,GAAb,CAApB;AAWA,EAAA,QAAQ,CAAC,CAAD,CAAR;AAEA,EAAA,KAAK,CAAC,IAAN,CAAW,KAAX;AACA,EAAA,KAAK,CAAC,MAAN,CAAa,KAAb;AACA,EAAA,KAAK,CAAC,WAAN,CAAkB,gBAAlB;AACA,SAAO,MAAP;AACD;AAED;;;;AAIG;;;AACH,OAAM,SAAU,OAAV,CAAkB,MAAlB,EAAmD;AACvD,SAAO,IAAI,CAAC,KAAD,EAAQ,OAAO,CAAC,aAAD,CAAf,EAAgC,QAAhC,EAA0C,IAA1C,EAAgD,OAAhD,EAAyD,SAAzD,EAAoE,UAAU,EAA9E,CAAJ,CAAsF,MAAtF,CAAP;AACD","sourcesContent":["import { theme, animation, annotation, tooltip, pattern } from '../../adaptor/common';\nimport { Params } from '../../core/adaptor';\nimport { flow, deepAssign } from '../../utils';\nimport { interval } from '../../adaptor/geometries';\nimport { X_FIELD, Y_FIELD } from '../tiny-line/constants';\nimport { getTinyData } from '../tiny-line/utils';\nimport { meta } from '../tiny-area/adaptor';\nimport { TinyColumnOptions } from './types';\n\nexport { meta };\n\n/**\n * 字段\n * @param params\n */\nfunction geometry(params: Params<TinyColumnOptions>): Params<TinyColumnOptions> {\n  const { chart, options } = params;\n  const { data, color, columnStyle, columnWidthRatio } = options;\n\n  const seriesData = getTinyData(data);\n\n  chart.data(seriesData);\n\n  const p = deepAssign({}, params, {\n    options: {\n      xField: X_FIELD,\n      yField: Y_FIELD,\n      widthRatio: columnWidthRatio,\n      interval: {\n        style: columnStyle,\n        color,\n      },\n    },\n  });\n  interval(p);\n\n  chart.axis(false);\n  chart.legend(false);\n  chart.interaction('element-active');\n  return params;\n}\n\n/**\n * 迷你柱形图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<TinyColumnOptions>) {\n  return flow(theme, pattern('columnStyle'), geometry, meta, tooltip, animation, annotation())(params);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}