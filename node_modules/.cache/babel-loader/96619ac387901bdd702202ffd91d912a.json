{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _primitiveMap, _depthFuncMap, _blendEquationMap, _blendFuncMap, _formatMap, _filterMap, _wrapModeMap;\n\nimport { gl } from '@antv/g-webgpu-core';\nimport * as WebGPUConstants from '@webgpu/types/dist/constants'; // WebGPU 不支持 LINE_LOOP & TRIANGLE_FAN\n\nexport var primitiveMap = (_primitiveMap = {}, _defineProperty(_primitiveMap, gl.POINTS, WebGPUConstants.PrimitiveTopology.PointList), _defineProperty(_primitiveMap, gl.LINES, WebGPUConstants.PrimitiveTopology.LineList), _defineProperty(_primitiveMap, gl.LINE_LOOP, WebGPUConstants.PrimitiveTopology.LineList), _defineProperty(_primitiveMap, gl.LINE_STRIP, WebGPUConstants.PrimitiveTopology.LineStrip), _defineProperty(_primitiveMap, gl.TRIANGLES, WebGPUConstants.PrimitiveTopology.TriangleList), _defineProperty(_primitiveMap, gl.TRIANGLE_FAN, WebGPUConstants.PrimitiveTopology.TriangleList), _defineProperty(_primitiveMap, gl.TRIANGLE_STRIP, WebGPUConstants.PrimitiveTopology.TriangleStrip), _primitiveMap);\nexport var depthFuncMap = (_depthFuncMap = {}, _defineProperty(_depthFuncMap, gl.NEVER, WebGPUConstants.CompareFunction.Never), _defineProperty(_depthFuncMap, gl.ALWAYS, WebGPUConstants.CompareFunction.Always), _defineProperty(_depthFuncMap, gl.LESS, WebGPUConstants.CompareFunction.Less), _defineProperty(_depthFuncMap, gl.LEQUAL, WebGPUConstants.CompareFunction.LessEqual), _defineProperty(_depthFuncMap, gl.GREATER, WebGPUConstants.CompareFunction.Greater), _defineProperty(_depthFuncMap, gl.GEQUAL, WebGPUConstants.CompareFunction.GreaterEqual), _defineProperty(_depthFuncMap, gl.EQUAL, WebGPUConstants.CompareFunction.Equal), _defineProperty(_depthFuncMap, gl.NOTEQUAL, WebGPUConstants.CompareFunction.NotEqual), _depthFuncMap);\nexport var blendEquationMap = (_blendEquationMap = {}, _defineProperty(_blendEquationMap, gl.FUNC_ADD, WebGPUConstants.BlendOperation.Add), _defineProperty(_blendEquationMap, gl.MIN_EXT, WebGPUConstants.BlendOperation.Min), _defineProperty(_blendEquationMap, gl.MAX_EXT, WebGPUConstants.BlendOperation.Max), _defineProperty(_blendEquationMap, gl.FUNC_SUBTRACT, WebGPUConstants.BlendOperation.Subtract), _defineProperty(_blendEquationMap, gl.FUNC_REVERSE_SUBTRACT, WebGPUConstants.BlendOperation.ReverseSubtract), _blendEquationMap); // @see https://gpuweb.github.io/gpuweb/#blend-state\n// 不支持 'constant alpha' 和 'one minus constant alpha'\n\nexport var blendFuncMap = (_blendFuncMap = {}, _defineProperty(_blendFuncMap, gl.ZERO, WebGPUConstants.BlendFactor.Zero), _defineProperty(_blendFuncMap, gl.ONE, WebGPUConstants.BlendFactor.One), _defineProperty(_blendFuncMap, gl.SRC_COLOR, WebGPUConstants.BlendFactor.SrcColor), _defineProperty(_blendFuncMap, gl.ONE_MINUS_SRC_COLOR, WebGPUConstants.BlendFactor.OneMinusSrcColor), _defineProperty(_blendFuncMap, gl.SRC_ALPHA, WebGPUConstants.BlendFactor.SrcAlpha), _defineProperty(_blendFuncMap, gl.ONE_MINUS_SRC_ALPHA, WebGPUConstants.BlendFactor.OneMinusSrcAlpha), _defineProperty(_blendFuncMap, gl.DST_COLOR, WebGPUConstants.BlendFactor.DstColor), _defineProperty(_blendFuncMap, gl.ONE_MINUS_DST_COLOR, WebGPUConstants.BlendFactor.OneMinusDstColor), _defineProperty(_blendFuncMap, gl.DST_ALPHA, WebGPUConstants.BlendFactor.DstAlpha), _defineProperty(_blendFuncMap, gl.ONE_MINUS_DST_ALPHA, WebGPUConstants.BlendFactor.OneMinusDstAlpha), _defineProperty(_blendFuncMap, gl.CONSTANT_COLOR, WebGPUConstants.BlendFactor.BlendColor), _defineProperty(_blendFuncMap, gl.ONE_MINUS_CONSTANT_COLOR, WebGPUConstants.BlendFactor.OneMinusBlendColor), _defineProperty(_blendFuncMap, gl.SRC_ALPHA_SATURATE, WebGPUConstants.BlendFactor.SrcAlphaSaturated), _blendFuncMap); // @see https://gpuweb.github.io/gpuweb/#texture-formats\n\nexport var formatMap = (_formatMap = {}, _defineProperty(_formatMap, gl.ALPHA, 'r8unorm'), _defineProperty(_formatMap, gl.RGBA, 'rgba8unorm'), _defineProperty(_formatMap, gl.DEPTH_COMPONENT, 'depth32float'), _defineProperty(_formatMap, gl.DEPTH_STENCIL, 'depth24plus-stencil8'), _formatMap); // @see https://gpuweb.github.io/gpuweb/#enumdef-gpufiltermode\n\nexport var filterMap = (_filterMap = {}, _defineProperty(_filterMap, gl.NEAREST, 'nearest'), _defineProperty(_filterMap, gl.LINEAR, 'linear'), _filterMap); // @see https://gpuweb.github.io/gpuweb/#enumdef-gpuaddressmode\n\nexport var wrapModeMap = (_wrapModeMap = {}, _defineProperty(_wrapModeMap, gl.REPEAT, 'repeat'), _defineProperty(_wrapModeMap, gl.CLAMP_TO_EDGE, 'clamp-to-edge'), _defineProperty(_wrapModeMap, gl.MIRRORED_REPEAT, 'mirror-repeat'), _wrapModeMap);\nexport function getCullMode(_ref) {\n  var cull = _ref.cull;\n\n  if (!cull || !cull.enable) {\n    return WebGPUConstants.CullMode.None;\n  }\n\n  if (cull.face) {\n    return cull.face === gl.FRONT ? WebGPUConstants.CullMode.Front : WebGPUConstants.CullMode.Back;\n  }\n}\nexport function getDepthStencilStateDescriptor(_ref2) {\n  var depth = _ref2.depth,\n      stencil = _ref2.stencil; // TODO: stencil\n\n  var stencilFrontBack = {\n    compare: WebGPUConstants.CompareFunction.Always,\n    depthFailOp: WebGPUConstants.StencilOperation.Keep,\n    failOp: WebGPUConstants.StencilOperation.Keep,\n    passOp: WebGPUConstants.StencilOperation.Keep\n  };\n  return {\n    depthWriteEnabled: depth && depth.enable,\n    depthCompare: depthFuncMap[(depth === null || depth === void 0 ? void 0 : depth.func) || gl.ALWAYS],\n    format: WebGPUConstants.TextureFormat.Depth24PlusStencil8,\n    stencilFront: stencilFrontBack,\n    stencilBack: stencilFrontBack,\n    stencilReadMask: 0xffffffff,\n    stencilWriteMask: 0xffffffff\n  };\n}\n/**\n * @see https://gpuweb.github.io/gpuweb/#color-state\n */\n\nexport function getColorStateDescriptors(_ref3, swapChainFormat) {\n  var blend = _ref3.blend;\n  return [{\n    format: swapChainFormat,\n    // https://gpuweb.github.io/gpuweb/#blend-state\n    alphaBlend: {\n      srcFactor: blendFuncMap[blend && blend.func && blend.func.srcAlpha || gl.ONE],\n      dstFactor: blendFuncMap[blend && blend.func && blend.func.dstAlpha || gl.ZERO],\n      operation: blendEquationMap[blend && blend.equation && blend.equation.alpha || gl.FUNC_ADD]\n    },\n    colorBlend: {\n      srcFactor: blendFuncMap[blend && blend.func && blend.func.srcRGB || gl.ONE],\n      dstFactor: blendFuncMap[blend && blend.func && blend.func.dstRGB || gl.ZERO],\n      operation: blendEquationMap[blend && blend.equation && blend.equation.rgb || gl.FUNC_ADD]\n    },\n    writeMask: WebGPUConstants.ColorWrite.All\n  }];\n}","map":{"version":3,"sources":["../../src/webgpu/constants.ts"],"names":["primitiveMap","gl","WebGPUConstants","depthFuncMap","blendEquationMap","blendFuncMap","formatMap","filterMap","wrapModeMap","cull","depth","stencil","stencilFrontBack","compare","depthFailOp","failOp","passOp","Keep","depthWriteEnabled","depthCompare","format","stencilFront","stencilBack","stencilReadMask","stencilWriteMask","blend","alphaBlend","srcFactor","dstFactor","operation","colorBlend","writeMask","All"],"mappings":";;;;AAAA,SAAA,EAAA,QAAA,qBAAA;AACA,OAAO,KAAP,eAAA,MAAA,8BAAA,C,CAEA;;AACA,OAAO,IAAMA,YAOZ,IAAA,aAAA,GAAA,EAAA,EAAA,eAAA,CAAA,aAAA,EACEC,EAAE,CADJ,MAAA,EACcC,eAAe,CAAfA,iBAAAA,CADd,SAAA,CAAA,EAAA,eAAA,CAAA,aAAA,EAEED,EAAE,CAFJ,KAAA,EAEaC,eAAe,CAAfA,iBAAAA,CAFb,QAAA,CAAA,EAAA,eAAA,CAAA,aAAA,EAGED,EAAE,CAHJ,SAAA,EAGiBC,eAAe,CAAfA,iBAAAA,CAHjB,QAAA,CAAA,EAAA,eAAA,CAAA,aAAA,EAIED,EAAE,CAJJ,UAAA,EAIkBC,eAAe,CAAfA,iBAAAA,CAJlB,SAAA,CAAA,EAAA,eAAA,CAAA,aAAA,EAKED,EAAE,CALJ,SAAA,EAKiBC,eAAe,CAAfA,iBAAAA,CALjB,YAAA,CAAA,EAAA,eAAA,CAAA,aAAA,EAMED,EAAE,CANJ,YAAA,EAMoBC,eAAe,CAAfA,iBAAAA,CANpB,YAAA,CAAA,EAAA,eAAA,CAAA,aAAA,EAOED,EAAE,CAPJ,cAAA,EAOsBC,eAAe,CAAfA,iBAAAA,CAPtB,aAAA,CAAA,EAPM,aAON,CAPM;AAiBP,OAAO,IAAMC,YAUZ,IAAA,aAAA,GAAA,EAAA,EAAA,eAAA,CAAA,aAAA,EACEF,EAAE,CADJ,KAAA,EACaC,eAAe,CAAfA,eAAAA,CADb,KAAA,CAAA,EAAA,eAAA,CAAA,aAAA,EAEED,EAAE,CAFJ,MAAA,EAEcC,eAAe,CAAfA,eAAAA,CAFd,MAAA,CAAA,EAAA,eAAA,CAAA,aAAA,EAGED,EAAE,CAHJ,IAAA,EAGYC,eAAe,CAAfA,eAAAA,CAHZ,IAAA,CAAA,EAAA,eAAA,CAAA,aAAA,EAIED,EAAE,CAJJ,MAAA,EAIcC,eAAe,CAAfA,eAAAA,CAJd,SAAA,CAAA,EAAA,eAAA,CAAA,aAAA,EAKED,EAAE,CALJ,OAAA,EAKeC,eAAe,CAAfA,eAAAA,CALf,OAAA,CAAA,EAAA,eAAA,CAAA,aAAA,EAMED,EAAE,CANJ,MAAA,EAMcC,eAAe,CAAfA,eAAAA,CANd,YAAA,CAAA,EAAA,eAAA,CAAA,aAAA,EAOED,EAAE,CAPJ,KAAA,EAOaC,eAAe,CAAfA,eAAAA,CAPb,KAAA,CAAA,EAAA,eAAA,CAAA,aAAA,EAQED,EAAE,CARJ,QAAA,EAQgBC,eAAe,CAAfA,eAAAA,CARhB,QAAA,CAAA,EAVM,aAUN,CAVM;AAqBP,OAAO,IAAME,gBAOZ,IAAA,iBAAA,GAAA,EAAA,EAAA,eAAA,CAAA,iBAAA,EACEH,EAAE,CADJ,QAAA,EACgBC,eAAe,CAAfA,cAAAA,CADhB,GAAA,CAAA,EAAA,eAAA,CAAA,iBAAA,EAEED,EAAE,CAFJ,OAAA,EAEeC,eAAe,CAAfA,cAAAA,CAFf,GAAA,CAAA,EAAA,eAAA,CAAA,iBAAA,EAGED,EAAE,CAHJ,OAAA,EAGeC,eAAe,CAAfA,cAAAA,CAHf,GAAA,CAAA,EAAA,eAAA,CAAA,iBAAA,EAIED,EAAE,CAJJ,aAAA,EAIqBC,eAAe,CAAfA,cAAAA,CAJrB,QAAA,CAAA,EAAA,eAAA,CAAA,iBAAA,EAKED,EAAE,CALJ,qBAAA,EAK6BC,eAAe,CAAfA,cAAAA,CAL7B,eAAA,CAAA,EAPM,iBAON,CAPM,C,CAeP;AACA;;AACA,OAAO,IAAMG,YAeZ,IAAA,aAAA,GAAA,EAAA,EAAA,eAAA,CAAA,aAAA,EACEJ,EAAE,CADJ,IAAA,EACYC,eAAe,CAAfA,WAAAA,CADZ,IAAA,CAAA,EAAA,eAAA,CAAA,aAAA,EAEED,EAAE,CAFJ,GAAA,EAEWC,eAAe,CAAfA,WAAAA,CAFX,GAAA,CAAA,EAAA,eAAA,CAAA,aAAA,EAGED,EAAE,CAHJ,SAAA,EAGiBC,eAAe,CAAfA,WAAAA,CAHjB,QAAA,CAAA,EAAA,eAAA,CAAA,aAAA,EAIED,EAAE,CAJJ,mBAAA,EAI2BC,eAAe,CAAfA,WAAAA,CAJ3B,gBAAA,CAAA,EAAA,eAAA,CAAA,aAAA,EAKED,EAAE,CALJ,SAAA,EAKiBC,eAAe,CAAfA,WAAAA,CALjB,QAAA,CAAA,EAAA,eAAA,CAAA,aAAA,EAMED,EAAE,CANJ,mBAAA,EAM2BC,eAAe,CAAfA,WAAAA,CAN3B,gBAAA,CAAA,EAAA,eAAA,CAAA,aAAA,EAOED,EAAE,CAPJ,SAAA,EAOiBC,eAAe,CAAfA,WAAAA,CAPjB,QAAA,CAAA,EAAA,eAAA,CAAA,aAAA,EAQED,EAAE,CARJ,mBAAA,EAQ2BC,eAAe,CAAfA,WAAAA,CAR3B,gBAAA,CAAA,EAAA,eAAA,CAAA,aAAA,EASED,EAAE,CATJ,SAAA,EASiBC,eAAe,CAAfA,WAAAA,CATjB,QAAA,CAAA,EAAA,eAAA,CAAA,aAAA,EAUED,EAAE,CAVJ,mBAAA,EAU2BC,eAAe,CAAfA,WAAAA,CAV3B,gBAAA,CAAA,EAAA,eAAA,CAAA,aAAA,EAWED,EAAE,CAXJ,cAAA,EAWsBC,eAAe,CAAfA,WAAAA,CAXtB,UAAA,CAAA,EAAA,eAAA,CAAA,aAAA,EAYED,EAAE,CAZJ,wBAAA,EAYgCC,eAAe,CAAfA,WAAAA,CAZhC,kBAAA,CAAA,EAAA,eAAA,CAAA,aAAA,EAeED,EAAE,CAfJ,kBAAA,EAe0BC,eAAe,CAAfA,WAAAA,CAf1B,iBAAA,CAAA,EAfM,aAeN,CAfM,C,CAiCP;;AACA,OAAO,IAAMI,SAMZ,IAAA,UAAA,GAAA,EAAA,EAAA,eAAA,CAAA,UAAA,EACEL,EAAE,CADJ,KAAA,EAAA,SAAA,CAAA,EAAA,eAAA,CAAA,UAAA,EAEEA,EAAE,CAFJ,IAAA,EAAA,YAAA,CAAA,EAAA,eAAA,CAAA,UAAA,EAGEA,EAAE,CAHJ,eAAA,EAAA,cAAA,CAAA,EAAA,eAAA,CAAA,UAAA,EAIEA,EAAE,CAJJ,aAAA,EAAA,sBAAA,CAAA,EANM,UAMN,CANM,C,CAaP;;AACA,OAAO,IAAMM,SAEZ,IAAA,UAAA,GAAA,EAAA,EAAA,eAAA,CAAA,UAAA,EACEN,EAAE,CADJ,OAAA,EAAA,SAAA,CAAA,EAAA,eAAA,CAAA,UAAA,EAEEA,EAAE,CAFJ,MAAA,EAAA,QAAA,CAAA,EAFM,UAEN,CAFM,C,CAOP;;AACA,OAAO,IAAMO,WAEZ,IAAA,YAAA,GAAA,EAAA,EAAA,eAAA,CAAA,YAAA,EACEP,EAAE,CADJ,MAAA,EAAA,QAAA,CAAA,EAAA,eAAA,CAAA,YAAA,EAEEA,EAAE,CAFJ,aAAA,EAAA,eAAA,CAAA,EAAA,eAAA,CAAA,YAAA,EAGEA,EAAE,CAHJ,eAAA,EAAA,eAAA,CAAA,EAFM,YAEN,CAFM;AAQP,OAAO,SAAA,WAAA,CAAA,IAAA,EAMO;AAAA,MALZQ,IAKY,GAAA,IAAA,CALZA,IAKY;;AACZ,MAAI,CAAA,IAAA,IAAS,CAACA,IAAI,CAAlB,MAAA,EAA2B;AACzB,WAAOP,eAAe,CAAfA,QAAAA,CAAP,IAAA;AACD;;AAED,MAAIO,IAAI,CAAR,IAAA,EAAe;AACb,WAAOA,IAAI,CAAJA,IAAAA,KAAcR,EAAE,CAAhBQ,KAAAA,GACHP,eAAe,CAAfA,QAAAA,CADGO,KAAAA,GAEHP,eAAe,CAAfA,QAAAA,CAFJ,IAAA;AAGD;AACF;AAED,OAAO,SAAA,8BAAA,CAAA,KAAA,EAKO;AAAA,MAJZQ,KAIY,GAAA,KAAA,CAJZA,KAIY;AAAA,MAHZC,OAGY,GAAA,KAAA,CAHZA,OAGY,CAAA,CACZ;;AAEA,MAAMC,gBAA+C,GAAG;AACtDC,IAAAA,OAAO,EAAEX,eAAe,CAAfA,eAAAA,CAD6C,MAAA;AAEtDY,IAAAA,WAAW,EAAEZ,eAAe,CAAfA,gBAAAA,CAFyC,IAAA;AAGtDa,IAAAA,MAAM,EAAEb,eAAe,CAAfA,gBAAAA,CAH8C,IAAA;AAItDc,IAAAA,MAAM,EAAEd,eAAe,CAAfA,gBAAAA,CAAiCe;AAJa,GAAxD;AAOA,SAAO;AACLC,IAAAA,iBAAiB,EAAER,KAAK,IAAIA,KAAK,CAD5B,MAAA;AAELS,IAAAA,YAAY,EAAEhB,YAAY,CAAC,CAAA,KAAK,KAAL,IAAA,IAAA,KAAK,KAAA,KAAL,CAAA,GAAA,KAAA,CAAA,GAAA,KAAK,CAAL,IAAA,KAAeF,EAAE,CAFvC,MAEqB,CAFrB;AAGLmB,IAAAA,MAAM,EAAElB,eAAe,CAAfA,aAAAA,CAHH,mBAAA;AAILmB,IAAAA,YAAY,EAJP,gBAAA;AAKLC,IAAAA,WAAW,EALN,gBAAA;AAMLC,IAAAA,eAAe,EANV,UAAA;AAOLC,IAAAA,gBAAgB,EAAE;AAPb,GAAP;AASD;AAED;AACA;AACA;;AACA,OAAO,SAAA,wBAAA,CAAA,KAAA,EAAA,eAAA,EAGsB;AAAA,MAFzBC,KAEyB,GAAA,KAAA,CAFzBA,KAEyB;AAC3B,SAAO,CACL;AACEL,IAAAA,MAAM,EADR,eAAA;AAEE;AACAM,IAAAA,UAAU,EAAE;AACVC,MAAAA,SAAS,EACPtB,YAAY,CAAEoB,KAAK,IAAIA,KAAK,CAAdA,IAAAA,IAAuBA,KAAK,CAALA,IAAAA,CAAxB,QAACA,IAA+CxB,EAAE,CAFvD,GAEI,CAFJ;AAGV2B,MAAAA,SAAS,EACPvB,YAAY,CAAEoB,KAAK,IAAIA,KAAK,CAAdA,IAAAA,IAAuBA,KAAK,CAALA,IAAAA,CAAxB,QAACA,IAA+CxB,EAAE,CAJvD,IAII,CAJJ;AAKV4B,MAAAA,SAAS,EACPzB,gBAAgB,CACbqB,KAAK,IAAIA,KAAK,CAAdA,QAAAA,IAA2BA,KAAK,CAALA,QAAAA,CAA5B,KAACA,IAAoDxB,EAAE,CADzC,QAAA;AANR,KAHd;AAaE6B,IAAAA,UAAU,EAAE;AACVH,MAAAA,SAAS,EACPtB,YAAY,CAAEoB,KAAK,IAAIA,KAAK,CAAdA,IAAAA,IAAuBA,KAAK,CAALA,IAAAA,CAAxB,MAACA,IAA6CxB,EAAE,CAFrD,GAEI,CAFJ;AAGV2B,MAAAA,SAAS,EACPvB,YAAY,CAAEoB,KAAK,IAAIA,KAAK,CAAdA,IAAAA,IAAuBA,KAAK,CAALA,IAAAA,CAAxB,MAACA,IAA6CxB,EAAE,CAJrD,IAII,CAJJ;AAKV4B,MAAAA,SAAS,EACPzB,gBAAgB,CACbqB,KAAK,IAAIA,KAAK,CAAdA,QAAAA,IAA2BA,KAAK,CAALA,QAAAA,CAA5B,GAACA,IAAkDxB,EAAE,CADvC,QAAA;AANR,KAbd;AAuBE8B,IAAAA,SAAS,EAAE7B,eAAe,CAAfA,UAAAA,CAA2B8B;AAvBxC,GADK,CAAP;AA2BD","sourcesContent":["import { gl, IModelInitializationOptions } from '@antv/g-webgpu-core';\nimport * as WebGPUConstants from '@webgpu/types/dist/constants';\n\n// WebGPU 不支持 LINE_LOOP & TRIANGLE_FAN\nexport const primitiveMap: {\n  [key: string]:\n    | WebGPUConstants.PrimitiveTopology.PointList\n    | WebGPUConstants.PrimitiveTopology.LineList\n    | WebGPUConstants.PrimitiveTopology.LineStrip\n    | WebGPUConstants.PrimitiveTopology.TriangleList\n    | WebGPUConstants.PrimitiveTopology.TriangleStrip;\n} = {\n  [gl.POINTS]: WebGPUConstants.PrimitiveTopology.PointList,\n  [gl.LINES]: WebGPUConstants.PrimitiveTopology.LineList,\n  [gl.LINE_LOOP]: WebGPUConstants.PrimitiveTopology.LineList,\n  [gl.LINE_STRIP]: WebGPUConstants.PrimitiveTopology.LineStrip,\n  [gl.TRIANGLES]: WebGPUConstants.PrimitiveTopology.TriangleList,\n  [gl.TRIANGLE_FAN]: WebGPUConstants.PrimitiveTopology.TriangleList,\n  [gl.TRIANGLE_STRIP]: WebGPUConstants.PrimitiveTopology.TriangleStrip,\n};\n\nexport const depthFuncMap: {\n  [key: string]:\n    | WebGPUConstants.CompareFunction.Never\n    | WebGPUConstants.CompareFunction.Always\n    | WebGPUConstants.CompareFunction.Less\n    | WebGPUConstants.CompareFunction.LessEqual\n    | WebGPUConstants.CompareFunction.Greater\n    | WebGPUConstants.CompareFunction.GreaterEqual\n    | WebGPUConstants.CompareFunction.Equal\n    | WebGPUConstants.CompareFunction.NotEqual;\n} = {\n  [gl.NEVER]: WebGPUConstants.CompareFunction.Never,\n  [gl.ALWAYS]: WebGPUConstants.CompareFunction.Always,\n  [gl.LESS]: WebGPUConstants.CompareFunction.Less,\n  [gl.LEQUAL]: WebGPUConstants.CompareFunction.LessEqual,\n  [gl.GREATER]: WebGPUConstants.CompareFunction.Greater,\n  [gl.GEQUAL]: WebGPUConstants.CompareFunction.GreaterEqual,\n  [gl.EQUAL]: WebGPUConstants.CompareFunction.Equal,\n  [gl.NOTEQUAL]: WebGPUConstants.CompareFunction.NotEqual,\n};\n\nexport const blendEquationMap: {\n  [key: string]:\n    | WebGPUConstants.BlendOperation.Add\n    | WebGPUConstants.BlendOperation.Min\n    | WebGPUConstants.BlendOperation.Max\n    | WebGPUConstants.BlendOperation.Subtract\n    | WebGPUConstants.BlendOperation.ReverseSubtract;\n} = {\n  [gl.FUNC_ADD]: WebGPUConstants.BlendOperation.Add,\n  [gl.MIN_EXT]: WebGPUConstants.BlendOperation.Min,\n  [gl.MAX_EXT]: WebGPUConstants.BlendOperation.Max,\n  [gl.FUNC_SUBTRACT]: WebGPUConstants.BlendOperation.Subtract,\n  [gl.FUNC_REVERSE_SUBTRACT]: WebGPUConstants.BlendOperation.ReverseSubtract,\n};\n\n// @see https://gpuweb.github.io/gpuweb/#blend-state\n// 不支持 'constant alpha' 和 'one minus constant alpha'\nexport const blendFuncMap: {\n  [key: string]:\n    | WebGPUConstants.BlendFactor.Zero\n    | WebGPUConstants.BlendFactor.One\n    | WebGPUConstants.BlendFactor.SrcColor\n    | WebGPUConstants.BlendFactor.OneMinusSrcColor\n    | WebGPUConstants.BlendFactor.SrcAlpha\n    | WebGPUConstants.BlendFactor.OneMinusSrcAlpha\n    | WebGPUConstants.BlendFactor.DstColor\n    | WebGPUConstants.BlendFactor.OneMinusDstColor\n    | WebGPUConstants.BlendFactor.DstAlpha\n    | WebGPUConstants.BlendFactor.OneMinusDstAlpha\n    | WebGPUConstants.BlendFactor.BlendColor\n    | WebGPUConstants.BlendFactor.OneMinusBlendColor\n    | WebGPUConstants.BlendFactor.SrcAlphaSaturated;\n} = {\n  [gl.ZERO]: WebGPUConstants.BlendFactor.Zero,\n  [gl.ONE]: WebGPUConstants.BlendFactor.One,\n  [gl.SRC_COLOR]: WebGPUConstants.BlendFactor.SrcColor,\n  [gl.ONE_MINUS_SRC_COLOR]: WebGPUConstants.BlendFactor.OneMinusSrcColor,\n  [gl.SRC_ALPHA]: WebGPUConstants.BlendFactor.SrcAlpha,\n  [gl.ONE_MINUS_SRC_ALPHA]: WebGPUConstants.BlendFactor.OneMinusSrcAlpha,\n  [gl.DST_COLOR]: WebGPUConstants.BlendFactor.DstColor,\n  [gl.ONE_MINUS_DST_COLOR]: WebGPUConstants.BlendFactor.OneMinusDstColor,\n  [gl.DST_ALPHA]: WebGPUConstants.BlendFactor.DstAlpha,\n  [gl.ONE_MINUS_DST_ALPHA]: WebGPUConstants.BlendFactor.OneMinusDstAlpha,\n  [gl.CONSTANT_COLOR]: WebGPUConstants.BlendFactor.BlendColor,\n  [gl.ONE_MINUS_CONSTANT_COLOR]: WebGPUConstants.BlendFactor.OneMinusBlendColor,\n  // [gl.CONSTANT_ALPHA]: WebGPUConstants.BlendFactor.'constant alpha',\n  // [gl.ONE_MINUS_CONSTANT_ALPHA]: WebGPUConstants.BlendFactor.'one minus constant alpha',\n  [gl.SRC_ALPHA_SATURATE]: WebGPUConstants.BlendFactor.SrcAlphaSaturated,\n};\n\n// @see https://gpuweb.github.io/gpuweb/#texture-formats\nexport const formatMap: {\n  [key: string]:\n    | 'r8unorm'\n    | 'rgba8unorm'\n    | 'depth32float'\n    | 'depth24plus-stencil8';\n} = {\n  [gl.ALPHA]: 'r8unorm',\n  [gl.RGBA]: 'rgba8unorm',\n  [gl.DEPTH_COMPONENT]: 'depth32float',\n  [gl.DEPTH_STENCIL]: 'depth24plus-stencil8',\n};\n\n// @see https://gpuweb.github.io/gpuweb/#enumdef-gpufiltermode\nexport const filterMap: {\n  [key: string]: 'nearest' | 'linear';\n} = {\n  [gl.NEAREST]: 'nearest',\n  [gl.LINEAR]: 'linear',\n};\n\n// @see https://gpuweb.github.io/gpuweb/#enumdef-gpuaddressmode\nexport const wrapModeMap: {\n  [key: string]: 'repeat' | 'clamp-to-edge' | 'mirror-repeat';\n} = {\n  [gl.REPEAT]: 'repeat',\n  [gl.CLAMP_TO_EDGE]: 'clamp-to-edge',\n  [gl.MIRRORED_REPEAT]: 'mirror-repeat',\n};\n\nexport function getCullMode({\n  cull,\n}: Pick<IModelInitializationOptions, 'cull'>):\n  | 'none'\n  | 'front'\n  | 'back'\n  | undefined {\n  if (!cull || !cull.enable) {\n    return WebGPUConstants.CullMode.None;\n  }\n\n  if (cull.face) {\n    return cull.face === gl.FRONT\n      ? WebGPUConstants.CullMode.Front\n      : WebGPUConstants.CullMode.Back;\n  }\n}\n\nexport function getDepthStencilStateDescriptor({\n  depth,\n  stencil,\n}: Pick<IModelInitializationOptions, 'depth' | 'stencil'>):\n  | GPUDepthStencilStateDescriptor\n  | undefined {\n  // TODO: stencil\n\n  const stencilFrontBack: GPUStencilStateFaceDescriptor = {\n    compare: WebGPUConstants.CompareFunction.Always,\n    depthFailOp: WebGPUConstants.StencilOperation.Keep,\n    failOp: WebGPUConstants.StencilOperation.Keep,\n    passOp: WebGPUConstants.StencilOperation.Keep,\n  };\n\n  return {\n    depthWriteEnabled: depth && depth.enable,\n    depthCompare: depthFuncMap[depth?.func || gl.ALWAYS],\n    format: WebGPUConstants.TextureFormat.Depth24PlusStencil8,\n    stencilFront: stencilFrontBack,\n    stencilBack: stencilFrontBack,\n    stencilReadMask: 0xffffffff,\n    stencilWriteMask: 0xffffffff,\n  };\n}\n\n/**\n * @see https://gpuweb.github.io/gpuweb/#color-state\n */\nexport function getColorStateDescriptors(\n  { blend }: Pick<IModelInitializationOptions, 'blend'>,\n  swapChainFormat: GPUTextureFormat,\n): GPUColorStateDescriptor[] {\n  return [\n    {\n      format: swapChainFormat,\n      // https://gpuweb.github.io/gpuweb/#blend-state\n      alphaBlend: {\n        srcFactor:\n          blendFuncMap[(blend && blend.func && blend.func.srcAlpha) || gl.ONE],\n        dstFactor:\n          blendFuncMap[(blend && blend.func && blend.func.dstAlpha) || gl.ZERO],\n        operation:\n          blendEquationMap[\n            (blend && blend.equation && blend.equation.alpha) || gl.FUNC_ADD\n          ],\n      },\n      colorBlend: {\n        srcFactor:\n          blendFuncMap[(blend && blend.func && blend.func.srcRGB) || gl.ONE],\n        dstFactor:\n          blendFuncMap[(blend && blend.func && blend.func.dstRGB) || gl.ZERO],\n        operation:\n          blendEquationMap[\n            (blend && blend.equation && blend.equation.rgb) || gl.FUNC_ADD\n          ],\n      },\n      writeMask: WebGPUConstants.ColorWrite.All,\n    },\n  ];\n}\n"]},"metadata":{},"sourceType":"module"}