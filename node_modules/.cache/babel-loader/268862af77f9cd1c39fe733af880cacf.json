{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { isArray } from '@antv/util';\nimport { interaction, animation, theme, tooltip } from '../../adaptor/common';\nimport { point, schema } from '../../adaptor/geometries';\nimport { flow, pick, deepAssign } from '../../utils';\nimport { AXIS_META_CONFIG_KEYS } from '../../constant';\nimport { BOX_RANGE, BOX_SYNC_NAME, OUTLIERS_VIEW_ID } from './constant';\nimport { transformData } from './utils';\n/**\n * 字段\n * @param params\n */\n\nfunction field(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xField = options.xField,\n      yField = options.yField,\n      groupField = options.groupField,\n      color = options.color,\n      tooltip = options.tooltip,\n      boxStyle = options.boxStyle;\n  chart.data(transformData(options.data, yField));\n  var yFieldName = isArray(yField) ? BOX_RANGE : yField;\n  var rawFields = yField ? isArray(yField) ? yField : [yField] : [];\n  var tooltipOptions = tooltip;\n\n  if (tooltipOptions !== false) {\n    tooltipOptions = deepAssign({}, {\n      fields: isArray(yField) ? yField : []\n    }, tooltipOptions);\n  }\n\n  var ext = schema(deepAssign({}, params, {\n    options: {\n      xField: xField,\n      yField: yFieldName,\n      seriesField: groupField,\n      tooltip: tooltipOptions,\n      rawFields: rawFields,\n      // 只有异常点视图展示 label\n      label: false,\n      schema: {\n        shape: 'box',\n        color: color,\n        style: boxStyle\n      }\n    }\n  })).ext;\n\n  if (groupField) {\n    ext.geometry.adjust('dodge');\n  }\n\n  return params;\n}\n/**\n * 创建异常点 view\n */\n\n\nfunction outliersPoint(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xField = options.xField,\n      data = options.data,\n      outliersField = options.outliersField,\n      outliersStyle = options.outliersStyle,\n      padding = options.padding,\n      label = options.label;\n  if (!outliersField) return params;\n  var outliersView = chart.createView({\n    padding: padding,\n    id: OUTLIERS_VIEW_ID\n  });\n  var outliersViewData = data.reduce(function (ret, datum) {\n    var outliersData = datum[outliersField];\n    outliersData.forEach(function (d) {\n      var _a;\n\n      return ret.push(__assign(__assign({}, datum), (_a = {}, _a[outliersField] = d, _a)));\n    });\n    return ret;\n  }, []);\n  outliersView.data(outliersViewData);\n  point({\n    chart: outliersView,\n    options: {\n      xField: xField,\n      yField: outliersField,\n      point: {\n        shape: 'circle',\n        style: outliersStyle\n      },\n      label: label\n    }\n  });\n  outliersView.axis(false);\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\n\n\nfunction meta(params) {\n  var _a, _b;\n\n  var chart = params.chart,\n      options = params.options;\n  var meta = options.meta,\n      xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField,\n      outliersField = options.outliersField;\n  var yFieldName = Array.isArray(yField) ? BOX_RANGE : yField;\n  var baseMeta = {}; // make yField and outliersField share y mate\n\n  if (outliersField) {\n    var syncName = BOX_SYNC_NAME;\n    baseMeta = (_a = {}, _a[outliersField] = {\n      sync: syncName,\n      nice: true\n    }, _a[yFieldName] = {\n      sync: syncName,\n      nice: true\n    }, _a);\n  }\n\n  var scales = deepAssign(baseMeta, meta, (_b = {}, _b[xField] = pick(xAxis, AXIS_META_CONFIG_KEYS), _b[yFieldName] = pick(yAxis, AXIS_META_CONFIG_KEYS), _b));\n  chart.scale(scales);\n  return params;\n}\n/**\n * axis 配置\n * @param params\n */\n\n\nfunction axis(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField;\n  var yFieldName = Array.isArray(yField) ? BOX_RANGE : yField; // 为 false 则是不显示轴\n\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(BOX_RANGE, false);\n  } else {\n    chart.axis(yFieldName, yAxis);\n  }\n\n  return params;\n}\n/**\n * legend 配置\n * @param params\n */\n\n\nexport function legend(params) {\n  var chart = params.chart,\n      options = params.options;\n  var legend = options.legend,\n      groupField = options.groupField;\n\n  if (groupField) {\n    if (legend) {\n      chart.legend(groupField, legend);\n    } else {\n      // Grouped Box Chart default has legend, and it's position is `bottom`\n      chart.legend(groupField, {\n        position: 'bottom'\n      });\n    }\n  } else {\n    chart.legend(false);\n  }\n\n  return params;\n}\n/**\n * 箱型图适配器\n * @param params\n */\n\nexport function adaptor(params) {\n  return flow(field, outliersPoint, meta, axis, legend, tooltip, interaction, animation, theme)(params);\n}","map":{"version":3,"sources":["../../../src/plots/box/adaptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { isArray } from '@antv/util';\nimport { Types } from '@antv/g2';\nimport { Params } from '../../core/adaptor';\nimport { interaction, animation, theme, tooltip } from '../../adaptor/common';\nimport { point, schema } from '../../adaptor/geometries';\nimport { flow, pick, deepAssign } from '../../utils';\nimport { AXIS_META_CONFIG_KEYS } from '../../constant';\nimport { BoxOptions } from './types';\nimport { BOX_RANGE, BOX_SYNC_NAME, OUTLIERS_VIEW_ID } from './constant';\nimport { transformData } from './utils';\n\n/**\n * 字段\n * @param params\n */\nfunction field(params: Params<BoxOptions>): Params<BoxOptions> {\n  const { chart, options } = params;\n  const { xField, yField, groupField, color, tooltip, boxStyle } = options;\n\n  chart.data(transformData(options.data, yField));\n\n  const yFieldName = isArray(yField) ? BOX_RANGE : yField;\n  const rawFields = yField ? (isArray(yField) ? yField : [yField]) : [];\n\n  let tooltipOptions = tooltip;\n  if (tooltipOptions !== false) {\n    tooltipOptions = deepAssign({}, { fields: isArray(yField) ? yField : [] }, tooltipOptions);\n  }\n\n  const { ext } = schema(\n    deepAssign({}, params, {\n      options: {\n        xField,\n        yField: yFieldName,\n        seriesField: groupField,\n        tooltip: tooltipOptions,\n        rawFields,\n        // 只有异常点视图展示 label\n        label: false,\n        schema: {\n          shape: 'box',\n          color,\n          style: boxStyle,\n        },\n      },\n    })\n  );\n\n  if (groupField) {\n    ext.geometry.adjust('dodge');\n  }\n\n  return params;\n}\n\n/**\n * 创建异常点 view\n */\nfunction outliersPoint(params: Params<BoxOptions>): Params<BoxOptions> {\n  const { chart, options } = params;\n  const { xField, data, outliersField, outliersStyle, padding, label } = options;\n\n  if (!outliersField) return params;\n\n  const outliersView = chart.createView({ padding, id: OUTLIERS_VIEW_ID });\n  const outliersViewData = data.reduce((ret, datum) => {\n    const outliersData = datum[outliersField];\n    outliersData.forEach((d) => ret.push({ ...datum, [outliersField]: d }));\n    return ret;\n  }, []) as Types.Datum[];\n\n  outliersView.data(outliersViewData);\n  point({\n    chart: outliersView,\n    options: {\n      xField,\n      yField: outliersField,\n      point: { shape: 'circle', style: outliersStyle },\n      label,\n    },\n  });\n\n  outliersView.axis(false);\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params: Params<BoxOptions>): Params<BoxOptions> {\n  const { chart, options } = params;\n  const { meta, xAxis, yAxis, xField, yField, outliersField } = options;\n  const yFieldName = Array.isArray(yField) ? BOX_RANGE : yField;\n\n  let baseMeta = {};\n\n  // make yField and outliersField share y mate\n  if (outliersField) {\n    const syncName = BOX_SYNC_NAME;\n    baseMeta = {\n      [outliersField]: { sync: syncName, nice: true },\n      [yFieldName]: { sync: syncName, nice: true },\n    };\n  }\n\n  const scales = deepAssign(baseMeta, meta, {\n    [xField]: pick(xAxis, AXIS_META_CONFIG_KEYS),\n    [yFieldName]: pick(yAxis, AXIS_META_CONFIG_KEYS),\n  });\n\n  chart.scale(scales);\n\n  return params;\n}\n\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params: Params<BoxOptions>): Params<BoxOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n  const yFieldName = Array.isArray(yField) ? BOX_RANGE : yField;\n\n  // 为 false 则是不显示轴\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(BOX_RANGE, false);\n  } else {\n    chart.axis(yFieldName, yAxis);\n  }\n\n  return params;\n}\n\n/**\n * legend 配置\n * @param params\n */\nexport function legend(params: Params<BoxOptions>): Params<BoxOptions> {\n  const { chart, options } = params;\n  const { legend, groupField } = options;\n\n  if (groupField) {\n    if (legend) {\n      chart.legend(groupField, legend);\n    } else {\n      // Grouped Box Chart default has legend, and it's position is `bottom`\n      chart.legend(groupField, { position: 'bottom' });\n    }\n  } else {\n    chart.legend(false);\n  }\n\n  return params;\n}\n\n/**\n * 箱型图适配器\n * @param params\n */\nexport function adaptor(params: Params<BoxOptions>) {\n  return flow(field, outliersPoint, meta, axis, legend, tooltip, interaction, animation, theme)(params);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}