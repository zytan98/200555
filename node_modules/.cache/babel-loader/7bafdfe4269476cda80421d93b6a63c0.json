{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Event } from '../../../chart';\nimport { clearHighlight, setHighlightBy } from './highlight-util';\nimport ElementRangeState from './range-state';\nvar EVENTS;\n\n(function (EVENTS) {\n  EVENTS[\"BEFORE_HIGHLIGHT\"] = \"element-range-highlight:beforehighlight\";\n  EVENTS[\"AFTER_HIGHLIGHT\"] = \"element-range-highlight:afterhighlight\";\n  EVENTS[\"BEFORE_CLEAR\"] = \"element-range-highlight:beforeclear\";\n  EVENTS[\"AFTER_CLEAR\"] = \"element-range-highlight:afterclear\";\n})(EVENTS || (EVENTS = {}));\n\nexport { EVENTS as ELEMENT_RANGE_HIGHLIGHT_EVENTS };\n/**\n * @ignore\n * 区域 highlight 的 Action\n */\n\nvar ElementRangeHighlight =\n/** @class */\nfunction (_super) {\n  __extends(ElementRangeHighlight, _super);\n\n  function ElementRangeHighlight() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.stateName = 'active';\n    return _this;\n  } // 清理掉所有的 active， unactive 状态\n\n\n  ElementRangeHighlight.prototype.clearViewState = function (view) {\n    clearHighlight(view);\n  };\n  /**\n   * 设置 highlight\n   */\n\n\n  ElementRangeHighlight.prototype.highlight = function () {\n    var _a = this.context,\n        view = _a.view,\n        event = _a.event;\n    var elements = this.getIntersectElements();\n    var payload = {\n      view: view,\n      event: event,\n      highlightElements: elements\n    };\n    view.emit(EVENTS.BEFORE_HIGHLIGHT, Event.fromData(view, EVENTS.BEFORE_HIGHLIGHT, payload));\n    this.setState();\n    view.emit(EVENTS.AFTER_HIGHLIGHT, Event.fromData(view, EVENTS.AFTER_HIGHLIGHT, payload));\n  };\n  /**\n   * @overrider 添加事件\n   */\n\n\n  ElementRangeHighlight.prototype.clear = function () {\n    var view = this.context.view;\n    view.emit(EVENTS.BEFORE_CLEAR, Event.fromData(view, EVENTS.BEFORE_CLEAR, {}));\n\n    _super.prototype.clear.call(this);\n\n    view.emit(EVENTS.AFTER_CLEAR, Event.fromData(view, EVENTS.AFTER_CLEAR, {}));\n  };\n\n  ElementRangeHighlight.prototype.setElementsState = function (elements, enable, allElements) {\n    setHighlightBy(allElements, function (el) {\n      return elements.indexOf(el) >= 0;\n    }, enable);\n  };\n\n  return ElementRangeHighlight;\n}(ElementRangeState);\n\nexport default ElementRangeHighlight;","map":{"version":3,"sources":["../../../../src/interaction/action/element/range-highlight.ts"],"names":[],"mappings":";AACA,SAAS,KAAT,QAAsB,gBAAtB;AACA,SAAS,cAAT,EAAyB,cAAzB,QAA+C,kBAA/C;AACA,OAAO,iBAAP,MAA8B,eAA9B;AAEA,IAAK,MAAL;;AAAA,CAAA,UAAK,MAAL,EAAW;AACT,EAAA,MAAA,CAAA,kBAAA,CAAA,GAAA,yCAAA;AACA,EAAA,MAAA,CAAA,iBAAA,CAAA,GAAA,wCAAA;AACA,EAAA,MAAA,CAAA,cAAA,CAAA,GAAA,qCAAA;AACA,EAAA,MAAA,CAAA,aAAA,CAAA,GAAA,oCAAA;AACD,CALD,EAAK,MAAM,KAAN,MAAM,GAAA,EAAA,CAAX;;AAOA,SAAS,MAAM,IAAI,8BAAnB;AAEA;;;AAGG;;AACH,IAAA,qBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoC,EAAA,SAAA,CAAA,qBAAA,EAAA,MAAA,CAAA;;AAApC,WAAA,qBAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AACY,IAAA,KAAA,CAAA,SAAA,GAAoB,QAApB;;AAgCX,GAjCD,CAGE;;;AACU,EAAA,qBAAA,CAAA,SAAA,CAAA,cAAA,GAAV,UAAyB,IAAzB,EAA6B;AAC3B,IAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFS;AAIV;;AAEG;;;AACI,EAAA,qBAAA,CAAA,SAAA,CAAA,SAAA,GAAP,YAAA;AACQ,QAAA,EAAA,GAAkB,KAAK,OAAvB;AAAA,QAAE,IAAI,GAAA,EAAA,CAAA,IAAN;AAAA,QAAQ,KAAK,GAAA,EAAA,CAAA,KAAb;AACN,QAAM,QAAQ,GAAG,KAAK,oBAAL,EAAjB;AACA,QAAM,OAAO,GAAG;AAAE,MAAA,IAAI,EAAA,IAAN;AAAQ,MAAA,KAAK,EAAA,KAAb;AAAe,MAAA,iBAAiB,EAAE;AAAlC,KAAhB;AACA,IAAA,IAAI,CAAC,IAAL,CAAU,MAAM,CAAC,gBAAjB,EAAmC,KAAK,CAAC,QAAN,CAAe,IAAf,EAAqB,MAAM,CAAC,gBAA5B,EAA8C,OAA9C,CAAnC;AACA,SAAK,QAAL;AACA,IAAA,IAAI,CAAC,IAAL,CAAU,MAAM,CAAC,eAAjB,EAAkC,KAAK,CAAC,QAAN,CAAe,IAAf,EAAqB,MAAM,CAAC,eAA5B,EAA6C,OAA7C,CAAlC;AACD,GAPM;AASP;;AAEG;;;AACI,EAAA,qBAAA,CAAA,SAAA,CAAA,KAAA,GAAP,YAAA;AACE,QAAM,IAAI,GAAG,KAAK,OAAL,CAAa,IAA1B;AACA,IAAA,IAAI,CAAC,IAAL,CAAU,MAAM,CAAC,YAAjB,EAA+B,KAAK,CAAC,QAAN,CAAe,IAAf,EAAqB,MAAM,CAAC,YAA5B,EAA0C,EAA1C,CAA/B;;AACA,IAAA,MAAA,CAAA,SAAA,CAAM,KAAN,CAAW,IAAX,CAAW,IAAX;;AACA,IAAA,IAAI,CAAC,IAAL,CAAU,MAAM,CAAC,WAAjB,EAA8B,KAAK,CAAC,QAAN,CAAe,IAAf,EAAqB,MAAM,CAAC,WAA5B,EAAyC,EAAzC,CAA9B;AACD,GALM;;AAOG,EAAA,qBAAA,CAAA,SAAA,CAAA,gBAAA,GAAV,UAA2B,QAA3B,EAAgD,MAAhD,EAAiE,WAAjE,EAAuF;AACrF,IAAA,cAAc,CAAC,WAAD,EAAc,UAAC,EAAD,EAAG;AAAK,aAAA,QAAQ,CAAC,OAAT,CAAiB,EAAjB,KAAA,CAAA;AAAyB,KAA/C,EAAiD,MAAjD,CAAd;AACD,GAFS;;AAGZ,SAAA,qBAAA;AAAC,CAjCD,CAAoC,iBAApC,CAAA;;AAmCA,eAAe,qBAAf","sourcesContent":["import Element from '../../../geometry/element';\nimport { Event } from '../../../chart';\nimport { clearHighlight, setHighlightBy } from './highlight-util';\nimport ElementRangeState from './range-state';\n\nenum EVENTS {\n  BEFORE_HIGHLIGHT = 'element-range-highlight:beforehighlight',\n  AFTER_HIGHLIGHT = 'element-range-highlight:afterhighlight',\n  BEFORE_CLEAR = 'element-range-highlight:beforeclear',\n  AFTER_CLEAR = 'element-range-highlight:afterclear',\n}\n\nexport { EVENTS as ELEMENT_RANGE_HIGHLIGHT_EVENTS };\n\n/**\n * @ignore\n * 区域 highlight 的 Action\n */\nclass ElementRangeHighlight extends ElementRangeState {\n  protected stateName: string = 'active';\n\n  // 清理掉所有的 active， unactive 状态\n  protected clearViewState(view) {\n    clearHighlight(view);\n  }\n\n  /**\n   * 设置 highlight\n   */\n  public highlight() {\n    const { view, event } = this.context;\n    const elements = this.getIntersectElements();\n    const payload = { view, event, highlightElements: elements };\n    view.emit(EVENTS.BEFORE_HIGHLIGHT, Event.fromData(view, EVENTS.BEFORE_HIGHLIGHT, payload));\n    this.setState();\n    view.emit(EVENTS.AFTER_HIGHLIGHT, Event.fromData(view, EVENTS.AFTER_HIGHLIGHT, payload));\n  }\n\n  /**\n   * @overrider 添加事件\n   */\n  public clear() {\n    const view = this.context.view;\n    view.emit(EVENTS.BEFORE_CLEAR, Event.fromData(view, EVENTS.BEFORE_CLEAR, {}));\n    super.clear();\n    view.emit(EVENTS.AFTER_CLEAR, Event.fromData(view, EVENTS.AFTER_CLEAR, {}));\n  }\n\n  protected setElementsState(elements: Element[], enable: boolean, allElements: Element[]) {\n    setHighlightBy(allElements, (el) => elements.indexOf(el) >= 0, enable);\n  }\n}\n\nexport default ElementRangeHighlight;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}