{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { Action, Util } from '@antv/g2';\nimport { get } from '@antv/util';\nimport { deepAssign, normalPadding } from '../../utils';\nvar PADDING_RIGHT = 10;\nvar PADDING_TOP = 5;\n/**\n * Action 中的 Button 按钮配置\n *\n * 可能的使用场景：brush filter\n */\n\nexport var BUTTON_ACTION_CONFIG = {\n  padding: [8, 10],\n  text: 'reset',\n  textStyle: {\n    default: {\n      x: 0,\n      y: 0,\n      fontSize: 12,\n      fill: '#333333',\n      cursor: 'pointer'\n    }\n  },\n  buttonStyle: {\n    default: {\n      fill: '#f7f7f7',\n      stroke: '#cccccc',\n      cursor: 'pointer'\n    },\n    active: {\n      fill: '#e6e6e6'\n    }\n  }\n};\n/**\n * @override 复写 G2 Button Action, 后续直接使用 GUI\n */\n\nvar ButtonAction =\n/** @class */\nfunction (_super) {\n  __extends(ButtonAction, _super);\n\n  function ButtonAction() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.buttonGroup = null;\n    _this.buttonCfg = __assign({\n      name: 'button'\n    }, BUTTON_ACTION_CONFIG);\n    return _this;\n  }\n  /**\n   * 获取 mix 默认的配置和用户配置\n   */\n\n\n  ButtonAction.prototype.getButtonCfg = function () {\n    var view = this.context.view;\n    var buttonCfg = get(view, ['interactions', 'filter-action', 'cfg', 'buttonConfig']);\n    return deepAssign(this.buttonCfg, buttonCfg, this.cfg);\n  };\n  /**\n   * 绘制 Button 和 文本\n   */\n\n\n  ButtonAction.prototype.drawButton = function () {\n    var config = this.getButtonCfg();\n    var group = this.context.view.foregroundGroup.addGroup({\n      name: config.name\n    });\n    var textShape = this.drawText(group);\n    this.drawBackground(group, textShape.getBBox());\n    this.buttonGroup = group;\n  };\n  /**\n   * 绘制文本\n   */\n\n\n  ButtonAction.prototype.drawText = function (group) {\n    var _a;\n\n    var config = this.getButtonCfg(); // 添加文本\n\n    return group.addShape({\n      type: 'text',\n      name: 'button-text',\n      attrs: __assign({\n        text: config.text\n      }, (_a = config.textStyle) === null || _a === void 0 ? void 0 : _a.default)\n    });\n  };\n\n  ButtonAction.prototype.drawBackground = function (group, bbox) {\n    var _a;\n\n    var config = this.getButtonCfg();\n    var padding = normalPadding(config.padding); // 添加背景按钮\n\n    var buttonShape = group.addShape({\n      type: 'rect',\n      name: 'button-rect',\n      attrs: __assign({\n        x: bbox.x - padding[3],\n        y: bbox.y - padding[0],\n        width: bbox.width + padding[1] + padding[3],\n        height: bbox.height + padding[0] + padding[2]\n      }, (_a = config.buttonStyle) === null || _a === void 0 ? void 0 : _a.default)\n    });\n    buttonShape.toBack(); // 在后面\n    // active 效果内置\n\n    group.on('mouseenter', function () {\n      var _a;\n\n      buttonShape.attr((_a = config.buttonStyle) === null || _a === void 0 ? void 0 : _a.active);\n    });\n    group.on('mouseleave', function () {\n      var _a;\n\n      buttonShape.attr((_a = config.buttonStyle) === null || _a === void 0 ? void 0 : _a.default);\n    });\n    return buttonShape;\n  }; // 重置位置\n\n\n  ButtonAction.prototype.resetPosition = function () {\n    var view = this.context.view;\n    var coord = view.getCoordinate();\n    var point = coord.convert({\n      x: 1,\n      y: 1\n    }); // 后面直接改成左上角\n\n    var buttonGroup = this.buttonGroup;\n    var bbox = buttonGroup.getBBox();\n    var matrix = Util.transform(null, [['t', point.x - bbox.width - PADDING_RIGHT, point.y + bbox.height + PADDING_TOP]]);\n    buttonGroup.setMatrix(matrix);\n  };\n  /**\n   * 显示\n   */\n\n\n  ButtonAction.prototype.show = function () {\n    if (!this.buttonGroup) {\n      this.drawButton();\n    }\n\n    this.resetPosition();\n    this.buttonGroup.show();\n  };\n  /**\n   * 隐藏\n   */\n\n\n  ButtonAction.prototype.hide = function () {\n    if (this.buttonGroup) {\n      this.buttonGroup.hide();\n    }\n  };\n  /**\n   * 销毁\n   */\n\n\n  ButtonAction.prototype.destroy = function () {\n    var buttonGroup = this.buttonGroup;\n\n    if (buttonGroup) {\n      buttonGroup.remove();\n    }\n\n    _super.prototype.destroy.call(this);\n  };\n\n  return ButtonAction;\n}(Action);\n\nexport { ButtonAction };","map":{"version":3,"sources":["../../../src/interactions/actions/reset-button.ts"],"names":[],"mappings":"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","sourcesContent":["import { Action, IGroup, Util } from '@antv/g2';\nimport { get } from '@antv/util';\nimport { BBox, ButtonCfg } from '../../types';\nimport { deepAssign, normalPadding } from '../../utils';\n\nconst PADDING_RIGHT = 10;\nconst PADDING_TOP = 5;\n\n/**\n * Action 中的 Button 按钮配置\n *\n * 可能的使用场景：brush filter\n */\nexport const BUTTON_ACTION_CONFIG: ButtonCfg = {\n  padding: [8, 10],\n  text: 'reset',\n  textStyle: {\n    default: {\n      x: 0,\n      y: 0,\n      fontSize: 12,\n      fill: '#333333',\n      cursor: 'pointer',\n    },\n  },\n  buttonStyle: {\n    default: {\n      fill: '#f7f7f7',\n      stroke: '#cccccc',\n      cursor: 'pointer',\n    },\n    active: {\n      fill: '#e6e6e6',\n    },\n  },\n};\n\n/**\n * @override 复写 G2 Button Action, 后续直接使用 GUI\n */\nclass ButtonAction extends Action {\n  private buttonGroup: IGroup = null;\n  private buttonCfg = {\n    name: 'button',\n    ...BUTTON_ACTION_CONFIG,\n  };\n\n  /**\n   * 获取 mix 默认的配置和用户配置\n   */\n  private getButtonCfg(): ButtonCfg & { name: string } {\n    const { view } = this.context;\n    const buttonCfg: ButtonCfg = get(view, ['interactions', 'filter-action', 'cfg', 'buttonConfig']);\n\n    return deepAssign(this.buttonCfg, buttonCfg, this.cfg);\n  }\n\n  /**\n   * 绘制 Button 和 文本\n   */\n  private drawButton() {\n    const config = this.getButtonCfg();\n    const group = this.context.view.foregroundGroup.addGroup({\n      name: config.name,\n    });\n    const textShape = this.drawText(group);\n    this.drawBackground(group, textShape.getBBox());\n\n    this.buttonGroup = group;\n  }\n\n  /**\n   * 绘制文本\n   */\n  private drawText(group: IGroup) {\n    const config = this.getButtonCfg();\n    // 添加文本\n    return group.addShape({\n      type: 'text',\n      name: 'button-text',\n      attrs: {\n        text: config.text,\n        ...config.textStyle?.default,\n      },\n    });\n  }\n\n  private drawBackground(group: IGroup, bbox: BBox) {\n    const config = this.getButtonCfg();\n    const padding = normalPadding(config.padding);\n    // 添加背景按钮\n    const buttonShape = group.addShape({\n      type: 'rect',\n      name: 'button-rect',\n      attrs: {\n        x: bbox.x - padding[3],\n        y: bbox.y - padding[0],\n        width: bbox.width + padding[1] + padding[3],\n        height: bbox.height + padding[0] + padding[2],\n        ...config.buttonStyle?.default,\n      },\n    });\n    buttonShape.toBack(); // 在后面\n\n    // active 效果内置\n    group.on('mouseenter', () => {\n      buttonShape.attr(config.buttonStyle?.active);\n    });\n    group.on('mouseleave', () => {\n      buttonShape.attr(config.buttonStyle?.default);\n    });\n\n    return buttonShape;\n  }\n\n  // 重置位置\n  private resetPosition() {\n    const view = this.context.view;\n    const coord = view.getCoordinate();\n    const point = coord.convert({ x: 1, y: 1 }); // 后面直接改成左上角\n    const buttonGroup = this.buttonGroup;\n    const bbox = buttonGroup.getBBox();\n    const matrix = Util.transform(null, [\n      ['t', point.x - bbox.width - PADDING_RIGHT, point.y + bbox.height + PADDING_TOP],\n    ]);\n    buttonGroup.setMatrix(matrix);\n  }\n\n  /**\n   * 显示\n   */\n  public show() {\n    if (!this.buttonGroup) {\n      this.drawButton();\n    }\n    this.resetPosition();\n    this.buttonGroup.show();\n  }\n\n  /**\n   * 隐藏\n   */\n  public hide() {\n    if (this.buttonGroup) {\n      this.buttonGroup.hide();\n    }\n  }\n\n  /**\n   * 销毁\n   */\n  public destroy() {\n    const buttonGroup = this.buttonGroup;\n    if (buttonGroup) {\n      buttonGroup.remove();\n    }\n    super.destroy();\n  }\n}\n\nexport { ButtonAction };\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}