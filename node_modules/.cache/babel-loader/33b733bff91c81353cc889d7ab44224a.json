{"ast":null,"code":"import { clamp, get, size } from '@antv/util';\nimport { RANGE_VALUE, RANGE_TYPE, PERCENT } from './constants';\n/**\n * 将 range 生成为 data 数据\n * @param range\n * @param key\n * @returns {GaugeRangeData}\n */\n\nexport function processRangeData(range, percent) {\n  return range // 映射为 stack 的数据\n  .map(function (r, idx) {\n    var _a;\n\n    return _a = {}, _a[RANGE_VALUE] = r - (range[idx - 1] || 0), _a[RANGE_TYPE] = \"\" + idx, _a[PERCENT] = percent, _a;\n  }) // 去掉 0 的数据\n  .filter(function (d) {\n    return !!d[RANGE_VALUE];\n  });\n}\n/**\n * 获取 仪表盘 指针数据\n * @param percent\n */\n\nexport function getIndicatorData(percent) {\n  var _a;\n\n  return [(_a = {}, _a[PERCENT] = clamp(percent, 0, 1), _a)];\n}\n/**\n * 获取仪表盘 表盘弧形数据\n * @param percent\n * @param range\n */\n\nexport function getRangeData(percent, range) {\n  var ticks = get(range, ['ticks'], []);\n  var clampTicks = size(ticks) ? ticks : [0, clamp(percent, 0, 1), 1];\n  return processRangeData(clampTicks, percent);\n}","map":{"version":3,"sources":["../../../src/plots/gauge/utils.ts"],"names":[],"mappings":"AAAA,SAAS,KAAT,EAAgB,GAAhB,EAAqB,IAArB,QAAiC,YAAjC;AAEA,SAAS,WAAT,EAAsB,UAAtB,EAAkC,OAAlC,QAAiD,aAAjD;AAGA;;;;;AAKG;;AACH,OAAM,SAAU,gBAAV,CAA2B,KAA3B,EAA4C,OAA5C,EAA4E;AAChF,SACE,KAAK,CACH;AADG,GAEF,GAFH,CAEO,UAAC,CAAD,EAAY,GAAZ,EAAuB;;;AAC1B,WAAA,EAAA,GAAA,EAAA,EAAS,EAAA,CAAC,WAAD,CAAA,GAAe,CAAC,IAAI,KAAK,CAAC,GAAG,GAAG,CAAP,CAAL,IAAkB,CAAtB,CAAzB,EAAmD,EAAA,CAAC,UAAD,CAAA,GAAc,KAAG,GAApE,EAA2E,EAAA,CAAC,OAAD,CAAA,GAAW,OAAtF,EAA6F,EAA7F;AACD,GAJH,EAKE;AALF,GAMG,MANH,CAMU,UAAC,CAAD,EAAS;AAAK,WAAA,CAAC,CAAC,CAAC,CAAH,WAAG,CAAH;AAAgB,GANxC,CADF;AASD;AAED;;;AAGG;;AACH,OAAM,SAAU,gBAAV,CAA2B,OAA3B,EAA2D;;;AAC/D,SAAO,EAAA,EAAA,GAAA,EAAA,EAAG,EAAA,CAAC,OAAD,CAAA,GAAW,KAAK,CAAC,OAAD,EAAU,CAAV,EAAa,CAAb,CAAnB,EAAkC,EAAlC,EAAP;AACD;AAED;;;;AAIG;;AACH,OAAM,SAAU,YAAV,CAAuB,OAAvB,EAAyD,KAAzD,EAAsF;AAC1F,MAAM,KAAK,GAAG,GAAG,CAAC,KAAD,EAAQ,CAAC,OAAD,CAAR,EAAmB,EAAnB,CAAjB;AAEA,MAAM,UAAU,GAAG,IAAI,CAAC,KAAD,CAAJ,GAAc,KAAd,GAAsB,CAAC,CAAD,EAAI,KAAK,CAAC,OAAD,EAAU,CAAV,EAAa,CAAb,CAAT,EAA0B,CAA1B,CAAzC;AACA,SAAO,gBAAgB,CAAC,UAAD,EAAyB,OAAzB,CAAvB;AACD","sourcesContent":["import { clamp, get, size } from '@antv/util';\nimport { Data, Datum } from '../../types';\nimport { RANGE_VALUE, RANGE_TYPE, PERCENT } from './constants';\nimport { GaugeOptions, GaugeRangeData } from './types';\n\n/**\n * 将 range 生成为 data 数据\n * @param range\n * @param key\n * @returns {GaugeRangeData}\n */\nexport function processRangeData(range: number[], percent: GaugeOptions['percent']): GaugeRangeData {\n  return (\n    range\n      // 映射为 stack 的数据\n      .map((r: number, idx: number) => {\n        return { [RANGE_VALUE]: r - (range[idx - 1] || 0), [RANGE_TYPE]: `${idx}`, [PERCENT]: percent };\n      })\n      // 去掉 0 的数据\n      .filter((d: Datum) => !!d[RANGE_VALUE])\n  );\n}\n\n/**\n * 获取 仪表盘 指针数据\n * @param percent\n */\nexport function getIndicatorData(percent: GaugeOptions['percent']): Data {\n  return [{ [PERCENT]: clamp(percent, 0, 1) }];\n}\n\n/**\n * 获取仪表盘 表盘弧形数据\n * @param percent\n * @param range\n */\nexport function getRangeData(percent: GaugeOptions['percent'], range?: GaugeOptions['range']): GaugeRangeData {\n  const ticks = get(range, ['ticks'], []);\n\n  const clampTicks = size(ticks) ? ticks : [0, clamp(percent, 0, 1), 1];\n  return processRangeData(clampTicks as number[], percent);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}