{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport * as WebGPUConstants from '@webgpu/types/dist/constants';\nimport WebGPUBuffer from './WebGPUBuffer';\n\nvar WebGPUElements = /*#__PURE__*/function () {\n  function WebGPUElements(engine, options) {\n    _classCallCheck(this, WebGPUElements);\n\n    this.engine = engine;\n    this.options = options;\n    this.indexCount = void 0;\n    this.buffer = void 0;\n    var _options = options,\n        data = _options.data,\n        usage = _options.usage,\n        type = _options.type,\n        count = _options.count;\n    this.indexCount = count || 0;\n    this.buffer = new WebGPUBuffer(engine, {\n      // @ts-ignore\n      data: data instanceof Array ? new Uint16Array(data) : data,\n      usage: WebGPUConstants.BufferUsage.Index | WebGPUConstants.BufferUsage.CopyDst\n    });\n  }\n\n  _createClass(WebGPUElements, [{\n    key: \"get\",\n    value: function get() {\n      return this.buffer;\n    }\n  }, {\n    key: \"subData\",\n    value: function subData(options) {\n      this.buffer.subData(options);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.buffer.destroy();\n    }\n  }]);\n\n  return WebGPUElements;\n}();\n\nexport { WebGPUElements as default };","map":{"version":3,"sources":["../../src/webgpu/WebGPUElements.ts"],"names":["WebGPUElements","indexCount","buffer","engine","options","data","usage","type","count","WebGPUConstants","CopyDst"],"mappings":";;AAMA,OAAO,KAAP,eAAA,MAAA,8BAAA;AAEA,OAAA,YAAA,MAAA,gBAAA;;IAEqBA,c;AAInB,WAAA,cAAA,CAAA,MAAA,EAAA,OAAA,EAGE;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,cAAA,CAAA;;AAAA,SAFQG,MAER,GAFQA,MAER;AAAA,SADQC,OACR,GADQA,OACR;AAAA,SANKH,UAML,GAAA,KAAA,CAAA;AAAA,SALMC,MAKN,GAAA,KAAA,CAAA;AAAA,QAAA,QAAA,GAAA,OAAA;AAAA,QACQG,IADR,GAAA,QAAA,CAAA,IAAA;AAAA,QACcC,KADd,GAAA,QAAA,CAAA,KAAA;AAAA,QACqBC,IADrB,GAAA,QAAA,CAAA,IAAA;AAAA,QAC2BC,KAD3B,GAAA,QAAA,CAAA,KAAA;AAEA,SAAA,UAAA,GAAkBA,KAAK,IAAvB,CAAA;AAEA,SAAA,MAAA,GAAc,IAAA,YAAA,CAAA,MAAA,EAAyB;AACrC;AACAH,MAAAA,IAAI,EAAEA,IAAI,YAAJA,KAAAA,GAAwB,IAAA,WAAA,CAAxBA,IAAwB,CAAxBA,GAF+B,IAAA;AAGrCC,MAAAA,KAAK,EACHG,eAAe,CAAfA,WAAAA,CAAAA,KAAAA,GAAoCA,eAAe,CAAfA,WAAAA,CAA4BC;AAJ7B,KAAzB,CAAd;AAMD;;;;0BAEY;AACX,aAAO,KAAP,MAAA;AACD;;;4BAEcN,O,EAKZ;AACD,WAAA,MAAA,CAAA,OAAA,CAAA,OAAA;AACD;;;8BAEgB;AACf,WAAA,MAAA,CAAA,OAAA;AACD;;;;;;SAlCkBJ,c","sourcesContent":["import {\n  BufferData,\n  IBuffer,\n  IElements,\n  IElementsInitializationOptions,\n} from '@antv/g-webgpu-core';\nimport * as WebGPUConstants from '@webgpu/types/dist/constants';\nimport { WebGPUEngine } from '.';\nimport WebGPUBuffer from './WebGPUBuffer';\n\nexport default class WebGPUElements implements IElements {\n  public indexCount: number;\n  private buffer: IBuffer;\n\n  constructor(\n    private engine: WebGPUEngine,\n    private options: IElementsInitializationOptions,\n  ) {\n    const { data, usage, type, count } = options;\n    this.indexCount = count || 0;\n\n    this.buffer = new WebGPUBuffer(engine, {\n      // @ts-ignore\n      data: data instanceof Array ? new Uint16Array(data) : data,\n      usage:\n        WebGPUConstants.BufferUsage.Index | WebGPUConstants.BufferUsage.CopyDst,\n    });\n  }\n\n  public get() {\n    return this.buffer;\n  }\n\n  public subData(options: {\n    // 用于替换的数据\n    data: BufferData;\n    // 原 Buffer 替换位置，单位为 byte\n    offset: number;\n  }) {\n    this.buffer.subData(options);\n  }\n\n  public destroy() {\n    this.buffer.destroy();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}