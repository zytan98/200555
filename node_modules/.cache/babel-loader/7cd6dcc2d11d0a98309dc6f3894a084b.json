{"ast":null,"code":"import { arcToCubic } from './arc-2-cubic';\nimport { quadToCubic } from './quad-2-cubic';\nimport { lineToCubic } from './line-2-cubic';\nexport function segmentToCubic(segment, params) {\n  if ('TQ'.indexOf(segment[0]) < 0) {\n    params.qx = null;\n    params.qy = null;\n  }\n\n  var _a = segment.slice(1),\n      s1 = _a[0],\n      s2 = _a[1];\n\n  switch (segment[0]) {\n    case 'M':\n      params.x = s1;\n      params.y = s2;\n      return segment;\n\n    case 'A':\n      return ['C'].concat(arcToCubic.apply(0, [params.x1, params.y1].concat(segment.slice(1))));\n\n    case 'Q':\n      params.qx = s1;\n      params.qy = s2;\n      return ['C'].concat(quadToCubic.apply(0, [params.x1, params.y1].concat(segment.slice(1))));\n\n    case 'L':\n      // @ts-ignore\n      return ['C'].concat(lineToCubic(params.x1, params.y1, segment[1], segment[2]));\n\n    case 'H':\n      // @ts-ignore\n      return ['C'].concat(lineToCubic(params.x1, params.y1, segment[1], params.y1));\n\n    case 'V':\n      // @ts-ignore\n      return ['C'].concat(lineToCubic(params.x1, params.y1, params.x1, segment[1]));\n\n    case 'Z':\n      // @ts-ignore\n      return ['C'].concat(lineToCubic(params.x1, params.y1, params.x, params.y));\n\n    default:\n  }\n\n  return segment;\n}","map":{"version":3,"sources":["../../src/process/segment-2-cubic.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,QAA2B,eAA3B;AACA,SAAS,WAAT,QAA4B,gBAA5B;AACA,SAAS,WAAT,QAA4B,gBAA5B;AAGA,OAAM,SAAU,cAAV,CAAyB,OAAzB,EAA+C,MAA/C,EAAoE;AACxE,MAAI,KAAK,OAAL,CAAa,OAAO,CAAC,CAAD,CAApB,IAA2B,CAA/B,EAAkC;AAChC,IAAA,MAAM,CAAC,EAAP,GAAY,IAAZ;AACA,IAAA,MAAM,CAAC,EAAP,GAAY,IAAZ;AACD;;AAEK,MAAA,EAAA,GAAW,OAAO,CAAC,KAAR,CAAc,CAAd,CAAX;AAAA,MAAC,EAAE,GAAA,EAAA,CAAA,CAAA,CAAH;AAAA,MAAK,EAAE,GAAA,EAAA,CAAA,CAAA,CAAP;;AAEN,UAAQ,OAAO,CAAC,CAAD,CAAf;AACE,SAAK,GAAL;AACE,MAAA,MAAM,CAAC,CAAP,GAAW,EAAX;AACA,MAAA,MAAM,CAAC,CAAP,GAAW,EAAX;AACA,aAAO,OAAP;;AACF,SAAK,GAAL;AACE,aAAO,CAAC,GAAD,EAAM,MAAN,CAAa,UAAU,CAAC,KAAX,CAAiB,CAAjB,EAAoB,CAAC,MAAM,CAAC,EAAR,EAAY,MAAM,CAAC,EAAnB,EAAuB,MAAvB,CAA8B,OAAO,CAAC,KAAR,CAAc,CAAd,CAA9B,CAApB,CAAb,CAAP;;AACF,SAAK,GAAL;AACE,MAAA,MAAM,CAAC,EAAP,GAAY,EAAZ;AACA,MAAA,MAAM,CAAC,EAAP,GAAY,EAAZ;AACA,aAAO,CAAC,GAAD,EAAM,MAAN,CAAa,WAAW,CAAC,KAAZ,CAAkB,CAAlB,EAAqB,CAAC,MAAM,CAAC,EAAR,EAAY,MAAM,CAAC,EAAnB,EAAuB,MAAvB,CAA8B,OAAO,CAAC,KAAR,CAAc,CAAd,CAA9B,CAArB,CAAb,CAAP;;AACF,SAAK,GAAL;AACE;AACA,aAAO,CAAC,GAAD,EAAM,MAAN,CAAa,WAAW,CAAC,MAAM,CAAC,EAAR,EAAY,MAAM,CAAC,EAAnB,EAAuB,OAAO,CAAC,CAAD,CAA9B,EAAmC,OAAO,CAAC,CAAD,CAA1C,CAAxB,CAAP;;AACF,SAAK,GAAL;AACE;AACA,aAAO,CAAC,GAAD,EAAM,MAAN,CAAa,WAAW,CAAC,MAAM,CAAC,EAAR,EAAY,MAAM,CAAC,EAAnB,EAAuB,OAAO,CAAC,CAAD,CAA9B,EAAmC,MAAM,CAAC,EAA1C,CAAxB,CAAP;;AACF,SAAK,GAAL;AACE;AACA,aAAO,CAAC,GAAD,EAAM,MAAN,CAAa,WAAW,CAAC,MAAM,CAAC,EAAR,EAAY,MAAM,CAAC,EAAnB,EAAuB,MAAM,CAAC,EAA9B,EAAkC,OAAO,CAAC,CAAD,CAAzC,CAAxB,CAAP;;AACF,SAAK,GAAL;AACE;AACA,aAAO,CAAC,GAAD,EAAM,MAAN,CAAa,WAAW,CAAC,MAAM,CAAC,EAAR,EAAY,MAAM,CAAC,EAAnB,EAAuB,MAAM,CAAC,CAA9B,EAAiC,MAAM,CAAC,CAAxC,CAAxB,CAAP;;AACF;AAvBF;;AAyBA,SAAO,OAAP;AACD","sourceRoot":"","sourcesContent":["import { arcToCubic } from './arc-2-cubic';\nimport { quadToCubic } from './quad-2-cubic';\nimport { lineToCubic } from './line-2-cubic';\nexport function segmentToCubic(segment, params) {\n    if ('TQ'.indexOf(segment[0]) < 0) {\n        params.qx = null;\n        params.qy = null;\n    }\n    var _a = segment.slice(1), s1 = _a[0], s2 = _a[1];\n    switch (segment[0]) {\n        case 'M':\n            params.x = s1;\n            params.y = s2;\n            return segment;\n        case 'A':\n            return ['C'].concat(arcToCubic.apply(0, [params.x1, params.y1].concat(segment.slice(1))));\n        case 'Q':\n            params.qx = s1;\n            params.qy = s2;\n            return ['C'].concat(quadToCubic.apply(0, [params.x1, params.y1].concat(segment.slice(1))));\n        case 'L':\n            // @ts-ignore\n            return ['C'].concat(lineToCubic(params.x1, params.y1, segment[1], segment[2]));\n        case 'H':\n            // @ts-ignore\n            return ['C'].concat(lineToCubic(params.x1, params.y1, segment[1], params.y1));\n        case 'V':\n            // @ts-ignore\n            return ['C'].concat(lineToCubic(params.x1, params.y1, params.x1, segment[1]));\n        case 'Z':\n            // @ts-ignore\n            return ['C'].concat(lineToCubic(params.x1, params.y1, params.x, params.y));\n        default:\n    }\n    return segment;\n}\n//# sourceMappingURL=segment-2-cubic.js.map"]},"metadata":{},"sourceType":"module"}